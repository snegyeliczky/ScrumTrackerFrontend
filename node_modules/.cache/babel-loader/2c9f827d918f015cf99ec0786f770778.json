{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar _includes = _interopRequireDefault(require(\"lodash/includes\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction matchesPattern(pattern, allowPartial) {\n  return t.matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return t.isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return t.isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return t.isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return (0, _includes.default)(t.STATEMENT_OR_BLOCK_KEYS, this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) return false;\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && path.node.imported.name === importName) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = t.VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!t.isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.get(\"operator\").node !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    let {\n      node\n    } = path;\n    if (path.isFunction()) node = node.body;\n\n    for (const directive of node.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/traverse/lib/path/introspection.js"],"names":["Object","defineProperty","exports","value","matchesPattern","has","isStatic","isnt","equals","isNodeType","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","isCompletionRecord","isStatementOrBlock","referencesImport","getSource","willIMaybeExecuteBefore","_guessExecutionStatusRelativeTo","_guessExecutionStatusRelativeToDifferentFunctions","resolve","_resolve","isConstantExpression","isInStrictMode","is","_includes","_interopRequireDefault","require","t","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","default","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","pattern","allowPartial","node","val","Array","isArray","length","scope","type","isType","parentPath","isFor","replacement","isArrowFunctionExpression","isExpression","isBlockStatement","allowInsideFunction","path","first","container","isFunction","isProgram","isLabeledStatement","STATEMENT_OR_BLOCK_KEYS","moduleSource","importName","isReferencedIdentifier","binding","getBinding","name","kind","parent","isImportDeclaration","source","isImportDefaultSpecifier","isImportNamespaceSpecifier","isImportSpecifier","imported","end","code","hub","getCode","slice","start","target","getOuterFunction","getFunctionParent","getProgramParent","isExecutionUncertain","isExecutionUncertainInList","paths","maxIndex","i","parentKey","funcParent","this","getAncestry","indexOf","commonPath","commonIndex","Error","divergence","listKey","keys","VISITOR_KEYS","keyPosition","executionOrderCheckedNodes","WeakSet","isFunctionDeclaration","isExportDeclaration","id","references","referencePaths","allStatus","childOfFunction","find","isCallExpression","add","status","delete","dangerous","resolved","push","isVariableDeclarator","isIdentifier","constant","ret","isTypeCastExpression","isMemberExpression","targetKey","toComputedKey","isLiteral","targetName","isObjectExpression","props","prop","isProperty","match","isArrayExpression","isNaN","elems","elem","isRegExpLiteral","isTemplateLiteral","every","expression","isUnaryExpression","isBinaryExpression","strictParent","sourceType","isClass","body","directive","directives"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar _includes = _interopRequireDefault(require(\"lodash/includes\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction matchesPattern(pattern, allowPartial) {\n  return t.matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return t.isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return t.isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return t.isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return (0, _includes.default)(t.STATEMENT_OR_BLOCK_KEYS, this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) return false;\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && path.node.imported.name === importName) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = t.VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!t.isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.get(\"operator\").node !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    let {\n      node\n    } = path;\n    if (path.isFunction()) node = node.body;\n\n    for (const directive of node.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}"]},"metadata":{},"sourceType":"script"}