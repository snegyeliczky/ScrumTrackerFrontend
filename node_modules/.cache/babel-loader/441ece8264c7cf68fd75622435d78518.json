{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/MailModal.js\";\nimport React, { useContext, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { Button, Modal } from \"antd\";\nimport { ContentContainer } from \"../styledComps/styled\";\nimport axios from \"axios\";\nimport Alert from \"antd/es/alert\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\n\nconst MailModal = ({\n  projectId\n}) => {\n  const [visible, setVisible] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const {\n    showAlert\n  } = useContext(ProjectContext);\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  function validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  async function handleSend() {\n    console.log(validateEmail(email));\n\n    if (validateEmail(email)) {\n      let emailCred = {\n        email: email\n      };\n\n      try {\n        await axios.post(\"http://localhost:8080/project/email/\" + projectId, emailCred);\n        alert(\"Succesfull e-mail sending\");\n        setVisible(false);\n      } catch (e) {\n        showAlert(\"Invalid e-mail adresse try again!\");\n      }\n    } else {\n      showAlert(\"Incorrect Email form use 'example@example.com'-form \");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MailOutlined, {\n    onClick: showModal,\n    style: {\n      fontSize: \"30px\",\n      color: \"#373A55\",\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onCancel: handleCancel,\n    footer: null,\n    width: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Send your Project Details\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"e-mail\",\n    onChange: event => setEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Send\"))));\n};\n\nexport default MailModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/MailModal.js"],"names":["React","useContext","useState","MailOutlined","Button","Modal","ContentContainer","axios","Alert","ProjectContext","MailModal","projectId","visible","setVisible","email","setEmail","showAlert","handleCancel","showModal","validateEmail","re","test","String","toLowerCase","handleSend","console","log","emailCred","post","alert","e","fontSize","color","paddingLeft","event","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\nimport 'antd/dist/antd.css';\nimport {MailOutlined} from \"@ant-design/icons\";\nimport {Button, Modal} from \"antd\";\nimport {ContentContainer} from \"../styledComps/styled\";\nimport axios from \"axios\";\nimport Alert from \"antd/es/alert\";\nimport {ProjectContext} from \"../contexts/ProjectContext\";\n\nconst MailModal = ({projectId}) => {\n\n    const [visible, setVisible] = useState(false);\n    const [email,setEmail] = useState(\"\");\n    const {showAlert} = useContext(ProjectContext);\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true);\n    }\n\n    function validateEmail(email) {\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    async function handleSend() {\n        console.log(validateEmail(email));\n        if(validateEmail(email)){\n            let emailCred = {email:email};\n            try {\n                await axios.post(\"http://localhost:8080/project/email/\"+projectId,emailCred);\n                alert(\"Succesfull e-mail sending\");\n                setVisible(false);\n            } catch (e) {\n                showAlert(\"Invalid e-mail adresse try again!\");\n            }\n        }else {\n            showAlert(\"Incorrect Email form use 'example@example.com'-form \");\n        }\n    }\n\n    return (\n        <div>\n            <MailOutlined onClick={showModal}\n                                  style={{\n                                      fontSize: \"30px\",\n                                      color: \"#373A55\",\n                                      paddingLeft: \"10px\"\n                                  }}/>\n\n            <Modal\n                visible={visible}\n                onCancel={handleCancel}\n                footer={null}\n                width={400}\n            >\n                <ContentContainer>\n                    <h2>Send your Project Details</h2>\n                </ContentContainer>\n                <ContentContainer>\n                    <input placeholder={\"e-mail\"} onChange={event => setEmail(event.target.value)}/>\n                    <Button onClick={handleSend}>Send</Button>\n                </ContentContainer>\n            </Modal>\n\n        </div>\n    );\n};\n\nexport default MailModal;"]},"metadata":{},"sourceType":"module"}