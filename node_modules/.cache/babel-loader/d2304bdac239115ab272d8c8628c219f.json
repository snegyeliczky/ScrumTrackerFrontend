{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPresetChain = buildPresetChain;\nexports.buildRootChain = buildRootChain;\nexports.buildPresetChainWalker = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  const data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _options = require(\"./validation/options\");\n\nvar _patternToRegex = _interopRequireDefault(require(\"./pattern-to-regex\"));\n\nvar _files = require(\"./files\");\n\nvar _caching = require(\"./caching\");\n\nvar _configDescriptors = require(\"./config-descriptors\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst debug = (0, _debug().default)(\"babel:config:config-chain\");\n\nfunction* buildPresetChain(arg, context) {\n  const chain = yield* buildPresetChainWalker(arg, context);\n  if (!chain) return null;\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o))\n  };\n}\n\nconst buildPresetChainWalker = makeChainWalker({\n  init: arg => arg,\n  root: preset => loadPresetDescriptors(preset),\n  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),\n  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),\n  overridesEnv: (preset, index, envName) => loadPresetOverridesEnvDescriptors(preset)(index)(envName)\n});\nexports.buildPresetChainWalker = buildPresetChainWalker;\nconst loadPresetDescriptors = (0, _caching.makeWeakCacheSync)(preset => buildRootDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors));\nconst loadPresetEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadPresetOverridesDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index)));\nconst loadPresetOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction* buildRootChain(opts, context) {\n  const programmaticChain = yield* loadProgrammaticChain({\n    options: opts,\n    dirname: context.cwd\n  }, context);\n  if (!programmaticChain) return null;\n  let configFile;\n\n  if (typeof opts.configFile === \"string\") {\n    configFile = yield* (0, _files.loadConfig)(opts.configFile, context.cwd, context.envName, context.caller);\n  } else if (opts.configFile !== false) {\n    configFile = yield* (0, _files.findRootConfig)(context.root, context.envName, context.caller);\n  }\n\n  let {\n    babelrc,\n    babelrcRoots\n  } = opts;\n  let babelrcRootsDirectory = context.cwd;\n  const configFileChain = emptyChain();\n\n  if (configFile) {\n    const validatedFile = validateConfigFile(configFile);\n    const result = yield* loadFileChain(validatedFile, context);\n    if (!result) return null;\n\n    if (babelrc === undefined) {\n      babelrc = validatedFile.options.babelrc;\n    }\n\n    if (babelrcRoots === undefined) {\n      babelrcRootsDirectory = validatedFile.dirname;\n      babelrcRoots = validatedFile.options.babelrcRoots;\n    }\n\n    mergeChain(configFileChain, result);\n  }\n\n  const pkgData = typeof context.filename === \"string\" ? yield* (0, _files.findPackageData)(context.filename) : null;\n  let ignoreFile, babelrcFile;\n  const fileChain = emptyChain();\n\n  if ((babelrc === true || babelrc === undefined) && pkgData && babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)) {\n    ({\n      ignore: ignoreFile,\n      config: babelrcFile\n    } = yield* (0, _files.findRelativeConfig)(pkgData, context.envName, context.caller));\n\n    if (ignoreFile && shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)) {\n      return null;\n    }\n\n    if (babelrcFile) {\n      const result = yield* loadFileChain(validateBabelrcFile(babelrcFile), context);\n      if (!result) return null;\n      mergeChain(fileChain, result);\n    }\n  }\n\n  const chain = mergeChain(mergeChain(mergeChain(emptyChain(), configFileChain), fileChain), programmaticChain);\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o)),\n    ignore: ignoreFile || undefined,\n    babelrc: babelrcFile || undefined,\n    config: configFile || undefined\n  };\n}\n\nfunction babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory) {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n  const absoluteRoot = context.root;\n\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  let babelrcPatterns = babelrcRoots;\n  if (!Array.isArray(babelrcPatterns)) babelrcPatterns = [babelrcPatterns];\n  babelrcPatterns = babelrcPatterns.map(pat => {\n    return typeof pat === \"string\" ? _path().default.resolve(babelrcRootsDirectory, pat) : pat;\n  });\n\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  return babelrcPatterns.some(pat => {\n    if (typeof pat === \"string\") {\n      pat = (0, _patternToRegex.default)(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(directory => {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nconst validateConfigFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"configfile\", file.options)\n}));\nconst validateBabelrcFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"babelrcfile\", file.options)\n}));\nconst validateExtendFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"extendsfile\", file.options)\n}));\nconst loadProgrammaticChain = makeChainWalker({\n  root: input => buildRootDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors),\n  env: (input, envName) => buildEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, envName),\n  overrides: (input, index) => buildOverrideDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index),\n  overridesEnv: (input, index, envName) => buildOverrideEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index, envName)\n});\nconst loadFileChain = makeChainWalker({\n  root: file => loadFileDescriptors(file),\n  env: (file, envName) => loadFileEnvDescriptors(file)(envName),\n  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),\n  overridesEnv: (file, index, envName) => loadFileOverridesEnvDescriptors(file)(index)(envName)\n});\nconst loadFileDescriptors = (0, _caching.makeWeakCacheSync)(file => buildRootDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors));\nconst loadFileEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadFileOverridesDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index)));\nconst loadFileOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction buildRootDescriptors({\n  dirname,\n  options\n}, alias, descriptors) {\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, envName) {\n  const opts = options.env && options.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.env[\"${envName}\"]`) : null;\n}\n\nfunction buildOverrideDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index) {\n  const opts = options.overrides && options.overrides[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);\n}\n\nfunction buildOverrideEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index, envName) {\n  const override = options.overrides && options.overrides[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n  const opts = override.env && override.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.overrides[${index}].env[\"${envName}\"]`) : null;\n}\n\nfunction makeChainWalker({\n  root,\n  env,\n  overrides,\n  overridesEnv\n}) {\n  return function* (input, context, files = new Set()) {\n    const {\n      dirname\n    } = input;\n    const flattenedConfigs = [];\n    const rootOpts = root(input);\n\n    if (configIsApplicable(rootOpts, dirname, context)) {\n      flattenedConfigs.push(rootOpts);\n      const envOpts = env(input, context.envName);\n\n      if (envOpts && configIsApplicable(envOpts, dirname, context)) {\n        flattenedConfigs.push(envOpts);\n      }\n\n      (rootOpts.options.overrides || []).forEach((_, index) => {\n        const overrideOps = overrides(input, index);\n\n        if (configIsApplicable(overrideOps, dirname, context)) {\n          flattenedConfigs.push(overrideOps);\n          const overrideEnvOpts = overridesEnv(input, index, context.envName);\n\n          if (overrideEnvOpts && configIsApplicable(overrideEnvOpts, dirname, context)) {\n            flattenedConfigs.push(overrideEnvOpts);\n          }\n        }\n      });\n    }\n\n    if (flattenedConfigs.some(({\n      options: {\n        ignore,\n        only\n      }\n    }) => shouldIgnore(context, ignore, only, dirname))) {\n      return null;\n    }\n\n    const chain = emptyChain();\n\n    for (const op of flattenedConfigs) {\n      if (!(yield* mergeExtendsChain(chain, op.options, dirname, context, files))) {\n        return null;\n      }\n\n      mergeChainOpts(chain, op);\n    }\n\n    return chain;\n  };\n}\n\nfunction* mergeExtendsChain(chain, opts, dirname, context, files) {\n  if (opts.extends === undefined) return true;\n  const file = yield* (0, _files.loadConfig)(opts.extends, dirname, context.envName, context.caller);\n\n  if (files.has(file)) {\n    throw new Error(`Configuration cycle detected loading ${file.filepath}.\\n` + `File already loaded following the config chain:\\n` + Array.from(files, file => ` - ${file.filepath}`).join(\"\\n\"));\n  }\n\n  files.add(file);\n  const fileChain = yield* loadFileChain(validateExtendFile(file), context, files);\n  files.delete(file);\n  if (!fileChain) return false;\n  mergeChain(chain, fileChain);\n  return true;\n}\n\nfunction mergeChain(target, source) {\n  target.options.push(...source.options);\n  target.plugins.push(...source.plugins);\n  target.presets.push(...source.presets);\n  return target;\n}\n\nfunction mergeChainOpts(target, {\n  options,\n  plugins,\n  presets\n}) {\n  target.options.push(options);\n  target.plugins.push(...plugins());\n  target.presets.push(...presets());\n  return target;\n}\n\nfunction emptyChain() {\n  return {\n    options: [],\n    presets: [],\n    plugins: []\n  };\n}\n\nfunction normalizeOptions(opts) {\n  const options = Object.assign({}, opts);\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  if (Object.prototype.hasOwnProperty.call(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n\n  return options;\n}\n\nfunction dedupDescriptors(items) {\n  const map = new Map();\n  const descriptors = [];\n\n  for (const item of items) {\n    if (typeof item.value === \"function\") {\n      const fnKey = item.value;\n      let nameMap = map.get(fnKey);\n\n      if (!nameMap) {\n        nameMap = new Map();\n        map.set(fnKey, nameMap);\n      }\n\n      let desc = nameMap.get(item.name);\n\n      if (!desc) {\n        desc = {\n          value: item\n        };\n        descriptors.push(desc);\n        if (!item.ownPass) nameMap.set(item.name, desc);\n      } else {\n        desc.value = item;\n      }\n    } else {\n      descriptors.push({\n        value: item\n      });\n    }\n  }\n\n  return descriptors.reduce((acc, desc) => {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable({\n  options\n}, dirname, context) {\n  return (options.test === undefined || configFieldIsApplicable(context, options.test, dirname)) && (options.include === undefined || configFieldIsApplicable(context, options.include, dirname)) && (options.exclude === undefined || !configFieldIsApplicable(context, options.exclude, dirname));\n}\n\nfunction configFieldIsApplicable(context, test, dirname) {\n  const patterns = Array.isArray(test) ? test : [test];\n  return matchesPatterns(context, patterns, dirname);\n}\n\nfunction shouldIgnore(context, ignore, only, dirname) {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    debug(\"Ignored %o because it matched one of %O from %o\", context.filename, ignore, dirname);\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    debug(\"Ignored %o because it failed to match one of %O from %o\", context.filename, only, dirname);\n    return true;\n  }\n\n  return false;\n}\n\nfunction matchesPatterns(context, patterns, dirname) {\n  return patterns.some(pattern => matchPattern(pattern, dirname, context.filename, context));\n}\n\nfunction matchPattern(pattern, dirname, pathToTest, context) {\n  if (typeof pattern === \"function\") {\n    return !!pattern(pathToTest, {\n      dirname,\n      envName: context.envName,\n      caller: context.caller\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new Error(`Configuration contains string/RegExp pattern, but no filename was passed to Babel`);\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = (0, _patternToRegex.default)(pattern, dirname);\n  }\n\n  return pattern.test(pathToTest);\n}","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/core/lib/config/config-chain.js"],"names":["Object","defineProperty","exports","value","buildPresetChain","buildRootChain","buildPresetChainWalker","_path","data","_interopRequireDefault","require","_debug","_options","_patternToRegex","_files","_caching","_configDescriptors","obj","__esModule","default","debug","arg","context","chain","plugins","dedupDescriptors","presets","options","map","o","normalizeOptions","makeChainWalker","init","root","preset","loadPresetDescriptors","env","envName","loadPresetEnvDescriptors","overrides","index","loadPresetOverridesDescriptors","overridesEnv","loadPresetOverridesEnvDescriptors","makeWeakCacheSync","buildRootDescriptors","alias","createUncachedDescriptors","makeStrongCacheSync","buildEnvDescriptors","buildOverrideDescriptors","buildOverrideEnvDescriptors","opts","programmaticChain","loadProgrammaticChain","dirname","cwd","configFile","loadConfig","caller","findRootConfig","babelrc","babelrcRoots","babelrcRootsDirectory","configFileChain","emptyChain","validatedFile","validateConfigFile","result","loadFileChain","undefined","mergeChain","pkgData","filename","findPackageData","ignoreFile","babelrcFile","fileChain","babelrcLoadEnabled","ignore","config","findRelativeConfig","shouldIgnore","validateBabelrcFile","absoluteRoot","directories","indexOf","babelrcPatterns","Array","isArray","pat","resolve","length","some","directory","matchPattern","file","filepath","validate","validateExtendFile","input","createCachedDescriptors","loadFileDescriptors","loadFileEnvDescriptors","loadFileOverridesDescriptors","loadFileOverridesEnvDescriptors","descriptors","Error","override","files","Set","flattenedConfigs","rootOpts","configIsApplicable","push","envOpts","forEach","_","overrideOps","overrideEnvOpts","only","op","mergeExtendsChain","mergeChainOpts","extends","has","from","join","add","delete","target","source","assign","passPerPreset","test","include","exclude","prototype","hasOwnProperty","call","sourceMaps","sourceMap","items","Map","item","fnKey","nameMap","get","set","desc","name","ownPass","reduce","acc","configFieldIsApplicable","patterns","matchesPatterns","pattern","pathToTest"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPresetChain = buildPresetChain;\nexports.buildRootChain = buildRootChain;\nexports.buildPresetChainWalker = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  const data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _options = require(\"./validation/options\");\n\nvar _patternToRegex = _interopRequireDefault(require(\"./pattern-to-regex\"));\n\nvar _files = require(\"./files\");\n\nvar _caching = require(\"./caching\");\n\nvar _configDescriptors = require(\"./config-descriptors\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst debug = (0, _debug().default)(\"babel:config:config-chain\");\n\nfunction* buildPresetChain(arg, context) {\n  const chain = yield* buildPresetChainWalker(arg, context);\n  if (!chain) return null;\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o))\n  };\n}\n\nconst buildPresetChainWalker = makeChainWalker({\n  init: arg => arg,\n  root: preset => loadPresetDescriptors(preset),\n  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),\n  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),\n  overridesEnv: (preset, index, envName) => loadPresetOverridesEnvDescriptors(preset)(index)(envName)\n});\nexports.buildPresetChainWalker = buildPresetChainWalker;\nconst loadPresetDescriptors = (0, _caching.makeWeakCacheSync)(preset => buildRootDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors));\nconst loadPresetEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadPresetOverridesDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index)));\nconst loadPresetOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction* buildRootChain(opts, context) {\n  const programmaticChain = yield* loadProgrammaticChain({\n    options: opts,\n    dirname: context.cwd\n  }, context);\n  if (!programmaticChain) return null;\n  let configFile;\n\n  if (typeof opts.configFile === \"string\") {\n    configFile = yield* (0, _files.loadConfig)(opts.configFile, context.cwd, context.envName, context.caller);\n  } else if (opts.configFile !== false) {\n    configFile = yield* (0, _files.findRootConfig)(context.root, context.envName, context.caller);\n  }\n\n  let {\n    babelrc,\n    babelrcRoots\n  } = opts;\n  let babelrcRootsDirectory = context.cwd;\n  const configFileChain = emptyChain();\n\n  if (configFile) {\n    const validatedFile = validateConfigFile(configFile);\n    const result = yield* loadFileChain(validatedFile, context);\n    if (!result) return null;\n\n    if (babelrc === undefined) {\n      babelrc = validatedFile.options.babelrc;\n    }\n\n    if (babelrcRoots === undefined) {\n      babelrcRootsDirectory = validatedFile.dirname;\n      babelrcRoots = validatedFile.options.babelrcRoots;\n    }\n\n    mergeChain(configFileChain, result);\n  }\n\n  const pkgData = typeof context.filename === \"string\" ? yield* (0, _files.findPackageData)(context.filename) : null;\n  let ignoreFile, babelrcFile;\n  const fileChain = emptyChain();\n\n  if ((babelrc === true || babelrc === undefined) && pkgData && babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)) {\n    ({\n      ignore: ignoreFile,\n      config: babelrcFile\n    } = yield* (0, _files.findRelativeConfig)(pkgData, context.envName, context.caller));\n\n    if (ignoreFile && shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)) {\n      return null;\n    }\n\n    if (babelrcFile) {\n      const result = yield* loadFileChain(validateBabelrcFile(babelrcFile), context);\n      if (!result) return null;\n      mergeChain(fileChain, result);\n    }\n  }\n\n  const chain = mergeChain(mergeChain(mergeChain(emptyChain(), configFileChain), fileChain), programmaticChain);\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o)),\n    ignore: ignoreFile || undefined,\n    babelrc: babelrcFile || undefined,\n    config: configFile || undefined\n  };\n}\n\nfunction babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory) {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n  const absoluteRoot = context.root;\n\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  let babelrcPatterns = babelrcRoots;\n  if (!Array.isArray(babelrcPatterns)) babelrcPatterns = [babelrcPatterns];\n  babelrcPatterns = babelrcPatterns.map(pat => {\n    return typeof pat === \"string\" ? _path().default.resolve(babelrcRootsDirectory, pat) : pat;\n  });\n\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  return babelrcPatterns.some(pat => {\n    if (typeof pat === \"string\") {\n      pat = (0, _patternToRegex.default)(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(directory => {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nconst validateConfigFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"configfile\", file.options)\n}));\nconst validateBabelrcFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"babelrcfile\", file.options)\n}));\nconst validateExtendFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"extendsfile\", file.options)\n}));\nconst loadProgrammaticChain = makeChainWalker({\n  root: input => buildRootDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors),\n  env: (input, envName) => buildEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, envName),\n  overrides: (input, index) => buildOverrideDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index),\n  overridesEnv: (input, index, envName) => buildOverrideEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index, envName)\n});\nconst loadFileChain = makeChainWalker({\n  root: file => loadFileDescriptors(file),\n  env: (file, envName) => loadFileEnvDescriptors(file)(envName),\n  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),\n  overridesEnv: (file, index, envName) => loadFileOverridesEnvDescriptors(file)(index)(envName)\n});\nconst loadFileDescriptors = (0, _caching.makeWeakCacheSync)(file => buildRootDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors));\nconst loadFileEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadFileOverridesDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index)));\nconst loadFileOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction buildRootDescriptors({\n  dirname,\n  options\n}, alias, descriptors) {\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, envName) {\n  const opts = options.env && options.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.env[\"${envName}\"]`) : null;\n}\n\nfunction buildOverrideDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index) {\n  const opts = options.overrides && options.overrides[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);\n}\n\nfunction buildOverrideEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index, envName) {\n  const override = options.overrides && options.overrides[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n  const opts = override.env && override.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.overrides[${index}].env[\"${envName}\"]`) : null;\n}\n\nfunction makeChainWalker({\n  root,\n  env,\n  overrides,\n  overridesEnv\n}) {\n  return function* (input, context, files = new Set()) {\n    const {\n      dirname\n    } = input;\n    const flattenedConfigs = [];\n    const rootOpts = root(input);\n\n    if (configIsApplicable(rootOpts, dirname, context)) {\n      flattenedConfigs.push(rootOpts);\n      const envOpts = env(input, context.envName);\n\n      if (envOpts && configIsApplicable(envOpts, dirname, context)) {\n        flattenedConfigs.push(envOpts);\n      }\n\n      (rootOpts.options.overrides || []).forEach((_, index) => {\n        const overrideOps = overrides(input, index);\n\n        if (configIsApplicable(overrideOps, dirname, context)) {\n          flattenedConfigs.push(overrideOps);\n          const overrideEnvOpts = overridesEnv(input, index, context.envName);\n\n          if (overrideEnvOpts && configIsApplicable(overrideEnvOpts, dirname, context)) {\n            flattenedConfigs.push(overrideEnvOpts);\n          }\n        }\n      });\n    }\n\n    if (flattenedConfigs.some(({\n      options: {\n        ignore,\n        only\n      }\n    }) => shouldIgnore(context, ignore, only, dirname))) {\n      return null;\n    }\n\n    const chain = emptyChain();\n\n    for (const op of flattenedConfigs) {\n      if (!(yield* mergeExtendsChain(chain, op.options, dirname, context, files))) {\n        return null;\n      }\n\n      mergeChainOpts(chain, op);\n    }\n\n    return chain;\n  };\n}\n\nfunction* mergeExtendsChain(chain, opts, dirname, context, files) {\n  if (opts.extends === undefined) return true;\n  const file = yield* (0, _files.loadConfig)(opts.extends, dirname, context.envName, context.caller);\n\n  if (files.has(file)) {\n    throw new Error(`Configuration cycle detected loading ${file.filepath}.\\n` + `File already loaded following the config chain:\\n` + Array.from(files, file => ` - ${file.filepath}`).join(\"\\n\"));\n  }\n\n  files.add(file);\n  const fileChain = yield* loadFileChain(validateExtendFile(file), context, files);\n  files.delete(file);\n  if (!fileChain) return false;\n  mergeChain(chain, fileChain);\n  return true;\n}\n\nfunction mergeChain(target, source) {\n  target.options.push(...source.options);\n  target.plugins.push(...source.plugins);\n  target.presets.push(...source.presets);\n  return target;\n}\n\nfunction mergeChainOpts(target, {\n  options,\n  plugins,\n  presets\n}) {\n  target.options.push(options);\n  target.plugins.push(...plugins());\n  target.presets.push(...presets());\n  return target;\n}\n\nfunction emptyChain() {\n  return {\n    options: [],\n    presets: [],\n    plugins: []\n  };\n}\n\nfunction normalizeOptions(opts) {\n  const options = Object.assign({}, opts);\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  if (Object.prototype.hasOwnProperty.call(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n\n  return options;\n}\n\nfunction dedupDescriptors(items) {\n  const map = new Map();\n  const descriptors = [];\n\n  for (const item of items) {\n    if (typeof item.value === \"function\") {\n      const fnKey = item.value;\n      let nameMap = map.get(fnKey);\n\n      if (!nameMap) {\n        nameMap = new Map();\n        map.set(fnKey, nameMap);\n      }\n\n      let desc = nameMap.get(item.name);\n\n      if (!desc) {\n        desc = {\n          value: item\n        };\n        descriptors.push(desc);\n        if (!item.ownPass) nameMap.set(item.name, desc);\n      } else {\n        desc.value = item;\n      }\n    } else {\n      descriptors.push({\n        value: item\n      });\n    }\n  }\n\n  return descriptors.reduce((acc, desc) => {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable({\n  options\n}, dirname, context) {\n  return (options.test === undefined || configFieldIsApplicable(context, options.test, dirname)) && (options.include === undefined || configFieldIsApplicable(context, options.include, dirname)) && (options.exclude === undefined || !configFieldIsApplicable(context, options.exclude, dirname));\n}\n\nfunction configFieldIsApplicable(context, test, dirname) {\n  const patterns = Array.isArray(test) ? test : [test];\n  return matchesPatterns(context, patterns, dirname);\n}\n\nfunction shouldIgnore(context, ignore, only, dirname) {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    debug(\"Ignored %o because it matched one of %O from %o\", context.filename, ignore, dirname);\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    debug(\"Ignored %o because it failed to match one of %O from %o\", context.filename, only, dirname);\n    return true;\n  }\n\n  return false;\n}\n\nfunction matchesPatterns(context, patterns, dirname) {\n  return patterns.some(pattern => matchPattern(pattern, dirname, context.filename, context));\n}\n\nfunction matchPattern(pattern, dirname, pathToTest, context) {\n  if (typeof pattern === \"function\") {\n    return !!pattern(pathToTest, {\n      dirname,\n      envName: context.envName,\n      caller: context.caller\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new Error(`Configuration contains string/RegExp pattern, but no filename was passed to Babel`);\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = (0, _patternToRegex.default)(pattern, dirname);\n  }\n\n  return pattern.test(pathToTest);\n}"]},"metadata":{},"sourceType":"script"}