{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/Task.js\";\nimport React, { useState, useRef, useContext } from 'react';\nimport Column from \"./Column\";\n\nconst Task = ({\n  task,\n  statusId,\n  onDragEnter,\n  dragItem\n}) => {\n  const [dragging, setDragging] = useState(false);\n\n  const handleDrag = e => {\n    let dragItemParams = {\n      taskId: task.id,\n      statusId: statusId,\n      taskObject: task\n    };\n    dragItem.current = dragItemParams;\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const draggingStyle = currTaskId => {\n    if (currTaskId === dragItem.current.taskId) {\n      return \"dragged task_card\";\n    }\n\n    return \"task_card\";\n  };\n\n  const handleDragEnd = () => {\n    setDragging(false);\n    dragItem.current = null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: dragging ? draggingStyle(task.id) : \"task_card\",\n    draggable: true,\n    onDragStart: event => handleDrag(event),\n    onDragEnd: e => handleDragEnd(e),\n    onDragEnter: e => onDragEnter(e, statusId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, task.title);\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/Task.js"],"names":["React","useState","useRef","useContext","Column","Task","task","statusId","onDragEnter","dragItem","dragging","setDragging","handleDrag","e","dragItemParams","taskId","id","taskObject","current","setTimeout","draggingStyle","currTaskId","handleDragEnd","event","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,WAAjB;AAA8BC,EAAAA;AAA9B,CAAD,KAA6C;AAGtD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMW,UAAU,GAAIC,CAAD,IAAO;AACtB,QAAIC,cAAc,GAAG;AAACC,MAAAA,MAAM,EAAET,IAAI,CAACU,EAAd;AAAkBT,MAAAA,QAAQ,EAAEA,QAA5B;AAAsCU,MAAAA,UAAU,EAACX;AAAjD,KAArB;AACAG,IAAAA,QAAQ,CAACS,OAAT,GAAmBJ,cAAnB;AACAK,IAAAA,UAAU,CAAC,MAAI;AACXR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAFS,EAER,CAFQ,CAAV;AAGH,GAND;;AAQA,QAAMS,aAAa,GAAIC,UAAD,IAAgB;AAClC,QAAIA,UAAU,KAAKZ,QAAQ,CAACS,OAAT,CAAiBH,MAApC,EAA4C;AACxC,aAAO,mBAAP;AACH;;AACD,WAAO,WAAP;AACH,GALD;;AAOA,QAAMO,aAAa,GAAG,MAAK;AACvBX,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,QAAQ,CAACS,OAAT,GAAiB,IAAjB;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAER,QAAQ,GAAGU,aAAa,CAACd,IAAI,CAACU,EAAN,CAAhB,GAA4B,WAApD;AACK,IAAA,SAAS,EAAE,IADhB;AAEK,IAAA,WAAW,EAAGO,KAAD,IAAYX,UAAU,CAACW,KAAD,CAFxC;AAGK,IAAA,SAAS,EAAGV,CAAD,IAAMS,aAAa,CAACT,CAAD,CAHnC;AAIK,IAAA,WAAW,EAAGA,CAAD,IAAML,WAAW,CAACK,CAAD,EAAGN,QAAH,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,IAAI,CAACkB,KALV,CADJ;AASH,CAlCD;;AAoCA,eAAenB,IAAf","sourcesContent":["import React, {useState, useRef, useContext} from 'react';\nimport Column from \"./Column\";\n\n\nconst Task = ({task, statusId, onDragEnter, dragItem}) => {\n\n\n    const [dragging, setDragging] = useState(false);\n\n    const handleDrag = (e) => {\n        let dragItemParams = {taskId: task.id, statusId: statusId, taskObject:task}\n        dragItem.current = dragItemParams;\n        setTimeout(()=>{\n            setDragging(true);\n        },0)\n    };\n\n    const draggingStyle = (currTaskId) => {\n        if (currTaskId === dragItem.current.taskId) {\n            return \"dragged task_card\"\n        }\n        return \"task_card\";\n    };\n\n    const handleDragEnd = () =>{\n        setDragging(false);\n        dragItem.current=null;\n    };\n\n    return (\n        <div className={dragging ? draggingStyle(task.id) : \"task_card\"}\n             draggable={true}\n             onDragStart={(event) => (handleDrag(event))}\n             onDragEnd={(e)=>(handleDragEnd(e))}\n             onDragEnter={(e)=>(onDragEnter(e,statusId))}>\n            {task.title}\n        </div>\n    );\n};\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}