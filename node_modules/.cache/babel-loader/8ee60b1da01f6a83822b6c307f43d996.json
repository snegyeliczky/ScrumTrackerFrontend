{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/TaskModal.js\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Modal, Button, DatePicker } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, ContentContainer, Input } from \"../Assets/StyledComps/styled\";\nimport TaskCalls from \"../Services/TaskCalls\";\nimport Select from \"antd/es/select\";\nimport moment from 'moment';\nimport locale from 'antd/es/date-picker/locale/hu_HU';\nimport { LocalDate } from \"@js-joda/core\";\nimport { ProjectContext } from \"../Contexts/ProjectContext\";\n\nconst TaskModal = ({\n  task,\n  setTask,\n  refreshStatusesFromBackend,\n  usersOnProject\n}) => {\n  const {\n    Option\n  } = Select;\n  const priorityList = Array.from({\n    length: 10\n  }, (k, v) => v + 1);\n  const {\n    showErrorAlert,\n    showSuccessAlert\n  } = useContext(ProjectContext);\n  const [visible, setVisible] = useState(false);\n  const [priorityRef, setPriorityRef] = useState(task.priority);\n  const [ownerRef, setOwnerRef] = useState(task.owner);\n  const descriptionRef = useRef(task.description);\n  const titleRef = useRef(task.title);\n  const positionRef = useRef(task.position);\n  const [deadlineRef, setDeadlineRef] = useState(task.deadline);\n  const options = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric'\n  };\n\n  const handleEdit = () => {\n    if (titleRef.current.value === \"\") {\n      showErrorAlert(\"please add name to your task\");\n      titleRef.current.value = task.title;\n      return;\n    }\n\n    uploadChanges();\n  };\n\n  async function uploadChanges() {\n    let editedTask = {\n      id: null,\n      author: null,\n      position: task.position === positionRef.current.value ? null : positionRef.current.value,\n      priority: task.priority === priorityRef ? null : priorityRef,\n      description: task.description === descriptionRef.current.value && task.description === null ? null : descriptionRef.current.value,\n      title: task.title === titleRef.current.value ? null : titleRef.current.value,\n      owner: task.owner === ownerRef ? null : ownerRef,\n      deadline: task.deadline === deadlineRef ? null : deadlineRef\n    };\n    let axiosResponse = await TaskCalls.uploadChanges(task.id, editedTask);\n    setTask(axiosResponse);\n    refreshStatusesFromBackend();\n  }\n\n  function handleOk() {\n    setVisible(false);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  function handleTimeChange(date, dateString) {\n    date = new Date(date);\n    setDeadlineRef(date);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormOutlined, {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Edit Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"text_input title\",\n    placeholder: \"Story Title\",\n    defaultValue: task.title,\n    ref: titleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"textArea\", {\n    className: \"text_input userStory\",\n    placeholder: \"user story\",\n    ref: descriptionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, task.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task_data_selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"Priority: \"), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"90%\"\n    },\n    className: \"priority\",\n    defaultValue: task.priority,\n    onChange: value => {\n      setPriorityRef(value);\n    },\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, priorityList.map(num => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: num,\n      value: num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 48\n      }\n    }, num);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task_data_selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, \"Owner: \"), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"90%\"\n    },\n    className: \"owner\",\n    defaultValue: task.owner ? task.owner.username : \"No Owner Yet\",\n    onChange: value => {\n      usersOnProject.map(user => {\n        if (user.username === value) {\n          setOwnerRef(user);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, usersOnProject.map(user => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: user.id,\n      value: user.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 44\n      }\n    }, user.username);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task_data_selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, \"Deadline: \"), /*#__PURE__*/React.createElement(DatePicker //locale={locale}\n  , {\n    style: {\n      width: \"90%\"\n    },\n    className: \"deadline_picker\",\n    defaultValue: deadlineRef ? moment(deadlineRef) : '',\n    format: 'MM.DD'\n    /* + \"hh.mm\"*/\n    ,\n    onChange: handleTimeChange //showTime={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, \"Save\"))))));\n};\n\nexport default TaskModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/TaskModal.js"],"names":["React","useContext","useEffect","useRef","useState","Modal","Button","DatePicker","FormOutlined","AdderComponent","ContentContainer","Input","TaskCalls","Select","moment","locale","LocalDate","ProjectContext","TaskModal","task","setTask","refreshStatusesFromBackend","usersOnProject","Option","priorityList","Array","from","length","k","v","showErrorAlert","showSuccessAlert","visible","setVisible","priorityRef","setPriorityRef","priority","ownerRef","setOwnerRef","owner","descriptionRef","description","titleRef","title","positionRef","position","deadlineRef","setDeadlineRef","deadline","options","year","month","day","hour","minute","second","handleEdit","current","value","uploadChanges","editedTask","id","author","axiosResponse","handleOk","handleCancel","showModal","handleTimeChange","date","dateString","Date","width","map","num","username","user"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useRef, useState} from 'react';\nimport {Modal, Button, DatePicker} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../Assets/StyledComps/styled\";\nimport TaskCalls from \"../Services/TaskCalls\";\nimport Select from \"antd/es/select\";\nimport moment from 'moment';\nimport locale from 'antd/es/date-picker/locale/hu_HU';\nimport {LocalDate} from \"@js-joda/core\";\nimport {ProjectContext} from \"../Contexts/ProjectContext\";\n\n\n\nconst TaskModal = ({task, setTask, refreshStatusesFromBackend, usersOnProject}) => {\n\n    const {Option} = Select;\n    const priorityList = Array.from({length: 10}, (k, v) => v + 1);\n\n    const {showErrorAlert, showSuccessAlert} = useContext(ProjectContext);\n    const [visible, setVisible] = useState(false);\n    const [priorityRef, setPriorityRef] = useState(task.priority);\n    const [ownerRef, setOwnerRef] = useState(task.owner);\n    const descriptionRef = useRef(task.description);\n    const titleRef = useRef(task.title);\n    const positionRef = useRef(task.position);\n    const [deadlineRef,setDeadlineRef] = useState(task.deadline);\n\n    const options = {\n        year: 'numeric', month: 'numeric', day: 'numeric',\n        hour: 'numeric', minute: 'numeric', second: 'numeric'\n    };\n\n    const handleEdit = () => {\n        if (titleRef.current.value === \"\") {\n            showErrorAlert(\"please add name to your task\");\n            titleRef.current.value = task.title;\n            return;\n        }\n        uploadChanges();\n    };\n\n    async function uploadChanges() {\n        let editedTask = {\n            id: null,\n            author: null,\n            position: task.position === positionRef.current.value ? null : positionRef.current.value,\n            priority: task.priority === priorityRef ? null : priorityRef,\n            description: task.description === descriptionRef.current.value && task.description === null ? null : descriptionRef.current.value,\n            title: task.title === titleRef.current.value ? null : titleRef.current.value,\n            owner: task.owner === ownerRef ? null : ownerRef,\n            deadline: task.deadline === deadlineRef ? null : deadlineRef\n        };\n        let axiosResponse = await TaskCalls.uploadChanges(task.id, editedTask);\n        setTask(axiosResponse);\n        refreshStatusesFromBackend();\n    }\n\n\n    function handleOk() {\n        setVisible(false);\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true)\n    }\n\n    function handleTimeChange(date, dateString){\n        date= new Date(date);\n        setDeadlineRef(date);\n    }\n\n\n    return (\n        <div>\n            <FormOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n                footer={null}\n            >\n                <h2>Edit Task</h2>\n                <div className={\"task_modal\"}>\n                    <div className={\"text_modal\"}>\n                        <label>Title: </label>\n                        <input\n                            className={\"text_input title\"}\n                            placeholder={\"Story Title\"}\n                            defaultValue={task.title}\n                            ref={titleRef}/>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <div className={\"text_modal\"}>\n                        <label>Description: </label>\n                        <textArea\n                            className={\"text_input userStory\"}\n                            placeholder={\"user story\"}\n                            ref={descriptionRef}>\n                            {task.description}\n                        </textArea>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <ContentContainer>\n                        <div className={\"task_data_selector\"}>\n                            <label>Priority: </label>\n                            <Select\n                                style={{width:\"90%\"}}\n                                className={\"priority\"}\n                                defaultValue={task.priority}\n                                onChange={(value) => {\n                                    setPriorityRef(value);\n                                }\n                                }\n                                type=\"number\"\n                            >\n                                {\n                                    priorityList.map((num) => {\n                                        return <Option key={num} value={num}>{num}</Option>\n                                    })\n                                }\n                            </Select>\n                            <div className=\"modal_btn\"\n                                 onClick={handleEdit}>Save\n                            </div>\n                        </div>\n                        <div className={\"task_data_selector\"}>\n                            <label>Owner: </label>\n                            <Select\n                                style={{width:\"90%\"}}\n                                className={\"owner\"}\n                                defaultValue={task.owner ? task.owner.username : \"No Owner Yet\"}\n                                onChange={(value) => {\n                                    usersOnProject.map((user) => {\n                                        if (user.username === value) {\n                                            setOwnerRef(user);\n                                        }\n                                    });\n                                }}>\n                                {usersOnProject.map((user) => {\n                                    return <Option key={user.id} value={user.username}>{user.username}</Option>\n                                })}\n\n                            </Select>\n                            <div className=\"modal_btn\"\n                                 onClick={handleEdit}>Save\n                            </div>\n                        </div>\n                        <div className={\"task_data_selector\"}>\n                            <label>Deadline: </label>\n                            <DatePicker\n                                //locale={locale}\n                                style={{width:\"90%\"}}\n                                className={\"deadline_picker\"}\n                                defaultValue={deadlineRef?moment(deadlineRef):''}\n                                format={'MM.DD'/* + \"hh.mm\"*/}\n                                onChange={handleTimeChange}\n                                //showTime={true}\n                            />\n\n                            <div className=\"modal_btn\"\n                                 onClick={handleEdit}>Save\n                            </div>\n                        </div>\n                    </ContentContainer>\n                </div>\n\n            </Modal>\n\n\n        </div>\n    );\n};\n\nexport default TaskModal;"]},"metadata":{},"sourceType":"module"}