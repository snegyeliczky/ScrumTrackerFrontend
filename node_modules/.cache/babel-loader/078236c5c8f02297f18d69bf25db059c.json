{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nexport default {\n  getMyProjects: async () => {\n    let response = await axios.get(\"http://localhost:8080/project/getactiveprojects\");\n    return response.data;\n  },\n  getArchiveProjects: async () => {\n    let response = await axios.get(\"http://localhost:8080/project/getarchiveprojects\");\n    return response.data;\n  },\n  getParticipatedProjects: async () => {\n    let response = await axios.get(\"http://localhost:8080/project/getparticipateprojects\");\n    return response.data;\n  },\n  addNewProject: async projectNameObject => {\n    await axios.post(\"http://localhost:8080/project/create\", projectNameObject);\n  },\n  getProject: async id => {\n    try {\n      let response = await axios.get(\"http://localhost:8080/project/\" + id);\n      return response.data;\n    } catch (e) {\n      alert(e.response.data.errors);\n      return [];\n    }\n  },\n  addNewColumn: async newStatus => {\n    await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n  },\n  addNewTask: async task => {\n    await axios.post(\"http://localhost:8080/project/newtask\", task);\n  },\n  deleteProject: async projectId => {\n    await axios.delete(\"http://localhost:8080/project/delete/\" + projectId);\n  },\n  archiveProject: async projectId => {\n    await axios.put(\"http://localhost:8080/project/archive/\" + projectId);\n  },\n  sendMail: async (projectId, emailCred) => {\n    await axios.post(\"http://localhost:8080/project/email/\" + projectId, emailCred);\n  },\n  deleteStatus: async (statusID, tableId) => {\n    await axios.delete(\"http://localhost:8080/project/deletestatus?statusid=\" + statusID + \"&tableid=\" + tableId);\n  },\n  getScrumTable: async tableId => {\n    let axiosResponse = await axios.get(\"http://localhost:8080/project/gettable/\" + tableId);\n    return axiosResponse.data;\n  },\n  sendProjectInProgressLimit: async tableCredentials => {\n    let axiosResponse = await axios.put(\"http://localhost:8080/project/table/limit/\", tableCredentials);\n    return axiosResponse.data;\n  }\n};","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/Services/ProjectCalls.js"],"names":["React","axios","getMyProjects","response","get","data","getArchiveProjects","getParticipatedProjects","addNewProject","projectNameObject","post","getProject","id","e","alert","errors","addNewColumn","newStatus","addNewTask","task","deleteProject","projectId","delete","archiveProject","put","sendMail","emailCred","deleteStatus","statusID","tableId","getScrumTable","axiosResponse","sendProjectInProgressLimit","tableCredentials"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe;AAGXC,EAAAA,aAAa,EAAE,YAAY;AACvB,QAAIC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,iDAAV,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACH,GANU;AAQXC,EAAAA,kBAAkB,EAAE,YAAY;AAC5B,QAAIH,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,kDAAV,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACH,GAXU;AAaXE,EAAAA,uBAAuB,EAAE,YAAY;AACjC,QAAIJ,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,sDAAV,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACH,GAhBU;AAkBXG,EAAAA,aAAa,EAAE,MAAOC,iBAAP,IAA6B;AACxC,UAAMR,KAAK,CAACS,IAAN,CAAW,sCAAX,EAAmDD,iBAAnD,CAAN;AACH,GApBU;AAsBXE,EAAAA,UAAU,EAAE,MAAOC,EAAP,IAAc;AACtB,QAAI;AACA,UAAIT,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,mCAAmCQ,EAA7C,CAArB;AACA,aAAOT,QAAQ,CAACE,IAAhB;AACH,KAHD,CAGE,OAAOQ,CAAP,EAAU;AAERC,MAAAA,KAAK,CAACD,CAAC,CAACV,QAAF,CAAWE,IAAX,CAAgBU,MAAjB,CAAL;AACA,aAAO,EAAP;AAEH;AAEJ,GAjCU;AAmCXC,EAAAA,YAAY,EAAG,MAAOC,SAAP,IAAqB;AAChC,UAAMhB,KAAK,CAACS,IAAN,CAAW,yCAAX,EAAsDO,SAAtD,CAAN;AACH,GArCU;AAuCXC,EAAAA,UAAU,EAAG,MAAOC,IAAP,IAAgB;AACzB,UAAMlB,KAAK,CAACS,IAAN,CAAW,uCAAX,EAAoDS,IAApD,CAAN;AACH,GAzCU;AA2CVC,EAAAA,aAAa,EAAG,MAAOC,SAAP,IAAqB;AAClC,UAAMpB,KAAK,CAACqB,MAAN,CAAa,0CAA0CD,SAAvD,CAAN;AACH,GA7CU;AA+CXE,EAAAA,cAAc,EAAG,MAAOF,SAAP,IAAoB;AACjC,UAAMpB,KAAK,CAACuB,GAAN,CAAU,2CAAyCH,SAAnD,CAAN;AACH,GAjDU;AAmDXI,EAAAA,QAAQ,EAAG,OAAOJ,SAAP,EAAiBK,SAAjB,KAA8B;AACtC,UAAMzB,KAAK,CAACS,IAAN,CAAW,yCAAuCW,SAAlD,EAA4DK,SAA5D,CAAN;AACF,GArDU;AAuDXC,EAAAA,YAAY,EAAG,OAAOC,QAAP,EAAiBC,OAAjB,KAA6B;AACxC,UAAM5B,KAAK,CAACqB,MAAN,CAAa,yDAAyDM,QAAzD,GAAoE,WAApE,GAAkFC,OAA/F,CAAN;AACH,GAzDU;AA2DXC,EAAAA,aAAa,EAAG,MAAOD,OAAP,IAAkB;AAC9B,QAAIE,aAAa,GAAG,MAAM9B,KAAK,CAACG,GAAN,CAAU,4CAA4CyB,OAAtD,CAA1B;AACA,WAAOE,aAAa,CAAC1B,IAArB;AACH,GA9DU;AAgEX2B,EAAAA,0BAA0B,EAAG,MAAOC,gBAAP,IAA2B;AACpD,QAAIF,aAAa,GAAG,MAAM9B,KAAK,CAACuB,GAAN,CAAU,4CAAV,EAAwDS,gBAAxD,CAA1B;AACA,WAAOF,aAAa,CAAC1B,IAArB;AACH;AAnEU,CAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\nexport default {\n\n\n    getMyProjects: async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getactiveprojects\");\n        return response.data;\n    },\n\n    getArchiveProjects: async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getarchiveprojects\");\n        return response.data;\n    },\n\n    getParticipatedProjects: async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getparticipateprojects\");\n        return response.data;\n    },\n\n    addNewProject: async (projectNameObject) => {\n        await axios.post(\"http://localhost:8080/project/create\", projectNameObject);\n    },\n\n    getProject: async (id) => {\n        try {\n            let response = await axios.get(\"http://localhost:8080/project/\" + id);\n            return response.data;\n        } catch (e) {\n\n            alert(e.response.data.errors);\n            return [];\n\n        }\n\n    },\n\n    addNewColumn : async (newStatus) => {\n        await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n    },\n\n    addNewTask : async (task) => {\n        await axios.post(\"http://localhost:8080/project/newtask\", task);\n    },\n\n     deleteProject : async (projectId) => {\n        await axios.delete(\"http://localhost:8080/project/delete/\" + projectId);\n    },\n\n    archiveProject : async (projectId) =>{\n        await axios.put(\"http://localhost:8080/project/archive/\"+projectId);\n    },\n\n    sendMail : async (projectId,emailCred) =>{\n       await axios.post(\"http://localhost:8080/project/email/\"+projectId,emailCred);\n    },\n\n    deleteStatus : async (statusID, tableId) => {\n        await axios.delete(\"http://localhost:8080/project/deletestatus?statusid=\" + statusID + \"&tableid=\" + tableId);\n    },\n\n    getScrumTable : async (tableId) =>{\n        let axiosResponse = await axios.get(\"http://localhost:8080/project/gettable/\" + tableId);\n        return axiosResponse.data;\n    },\n\n    sendProjectInProgressLimit : async (tableCredentials) =>{\n        let axiosResponse = await axios.put(\"http://localhost:8080/project/table/limit/\", tableCredentials);\n        return axiosResponse.data;\n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}