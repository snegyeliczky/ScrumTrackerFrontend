{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/mainPage/ProjectPage.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport ProjectStatusCulomn from \"./ProjectStatusCulomn\";\n\nconst ProjectPage = () => {\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState();\n  const [statuses, setStatuses] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const getProject = async () => {\n    let response = await axios.get(\"http://localhost:8080/project/\" + id);\n    setProject(response.data);\n    setStatuses(response.data.table.statuses);\n    console.log(response.data);\n    console.log(response.data.table.statuses);\n    setLoading(false);\n  };\n\n  const addNewColumn = async columnName => {\n    setLoading(true);\n    columnName = \"hello\";\n    let projectId = id;\n    let newStatus = {\n      statusName: columnName,\n      projectId: projectId\n    };\n    let axiosResponse = await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n    console.log(axiosResponse.data.statuses);\n    setStatuses(axiosResponse.data.statuses);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getProject();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"loading....\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projectContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, project.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statusContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, statuses.map(projectStatus => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, projectStatus.statusName)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addNewColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \" new status \")));\n};\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/mainPage/ProjectPage.js"],"names":["React","useState","useContext","useEffect","useParams","axios","ProjectStatusCulomn","ProjectPage","id","project","setProject","statuses","setStatuses","loading","setLoading","getProject","response","get","data","table","console","log","addNewColumn","columnName","projectId","newStatus","statusName","axiosResponse","post","title","map","projectStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM;AAACC,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMc,UAAU,GAAG,YAAY;AAC3B,QAAIC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,mCAAmCT,EAA7C,CAArB;AACAE,IAAAA,UAAU,CAACM,QAAQ,CAACE,IAAV,CAAV;AACAN,IAAAA,WAAW,CAACI,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBR,QAArB,CAAX;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAArB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBR,QAAhC;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAPD;;AASA,QAAMQ,YAAY,GAAG,MAAOC,UAAP,IAAqB;AACtCT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAS,IAAAA,UAAU,GAAC,OAAX;AACA,QAAIC,SAAS,GAAChB,EAAd;AACA,QAAIiB,SAAS,GAAG;AAACC,MAAAA,UAAU,EAACH,UAAZ;AAAwBC,MAAAA,SAAS,EAACA;AAAlC,KAAhB;AACA,QAAIG,aAAa,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CAAW,yCAAX,EAAqDH,SAArD,CAA1B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYM,aAAa,CAACT,IAAd,CAAmBP,QAA/B;AACAC,IAAAA,WAAW,CAACe,aAAa,CAACT,IAAd,CAAmBP,QAApB,CAAX;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GATD;;AAWAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADI,gBAGJ;AAAK,IAAA,SAAS,EAAE,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,OAAO,CAACoB,KAAb,CADJ,eAEI;AAAK,IAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,QAAQ,CAACmB,GAAT,CAAaC,aAAa,iBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,aAAa,CAACL,UAApB,CADH,CADL,CAFJ,CAJR,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEJ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAbJ,CADJ;AAmBH,CAlDD;;AAoDA,eAAef,WAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\nimport ProjectStatusCulomn from \"./ProjectStatusCulomn\";\n\nconst ProjectPage = () => {\n\n    const {id} = useParams();\n    const [project, setProject] = useState();\n    const [statuses, setStatuses] = useState();\n    const [loading, setLoading] = useState(true);\n\n    const getProject = async () => {\n        let response = await axios.get(\"http://localhost:8080/project/\" + id);\n        setProject(response.data);\n        setStatuses(response.data.table.statuses);\n        console.log(response.data);\n        console.log(response.data.table.statuses);\n        setLoading(false);\n    };\n\n    const addNewColumn = async (columnName) =>{\n        setLoading(true);\n        columnName=\"hello\";\n        let projectId=id;\n        let newStatus = {statusName:columnName, projectId:projectId};\n        let axiosResponse = await axios.post(\"http://localhost:8080/project/newstatus\",newStatus);\n        console.log(axiosResponse.data.statuses);\n        setStatuses(axiosResponse.data.statuses);\n        setLoading(false);\n    };\n\n    useEffect(() => {\n        getProject();\n    }, []);\n\n    return (\n        <div>\n            {loading ?\n                <h1>loading....</h1>\n                :\n                <div className={\"projectContainer\"}>\n                    <h1>{project.title}</h1>\n                    <div className={\"statusContainer\"}>\n                        {statuses.map(projectStatus => (\n                            <div>{projectStatus.statusName}</div>\n                        ))}\n                    </div>\n                </div>\n            }\n            <div>\n                <button onClick={addNewColumn} > new status </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}