{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/src/components/ProjectComponents/CustomPieChart.js\";\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nconst CustomPieChart = ({\n  data,\n  visualMark,\n  label\n}) => {\n  //pie chart\n  const segmentsStyle = {\n    transition: 'stroke .3s',\n    cursor: 'pointer',\n    strokeWidth: 35\n  };\n  const [selectedPart, setSelectedPart] = useState();\n  const labelStyle = {\n    fontSize: \"0.3rem\",\n    fontWeight: \"bold\"\n  };\n\n  const handleSelectPart = segmentIndex => {\n    setSelectedPart(segmentIndex);\n  };\n\n  const handleVisual = dataEntry => {\n    if (visualMark === \"value\") {\n      return Math.round(dataEntry.value) === 0 ? \"\" : `${Math.round(dataEntry.value)} total`;\n    } else {\n      return Math.round(dataEntry.percentage) === 0 ? \"\" : `${Math.round(dataEntry.percentage)} %`;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    className: \"chart\",\n    label: ({\n      dataEntry\n    }) => {\n      return handleVisual(dataEntry);\n    },\n    labelStyle: labelStyle,\n    animate: true,\n    animationDuration: 1000,\n    lineWidth: 75,\n    radius: 40,\n    onClick: (e, segmentIndex) => handleSelectPart(segmentIndex),\n    segmentsStyle: index => {\n      return index === selectedPart ? { ...segmentsStyle,\n        strokeWidth: 40\n      } : segmentsStyle;\n    },\n    data: [{\n      title: 'Not Started',\n      value: data.start,\n      color: '#dd2911'\n    }, {\n      title: 'In Progress',\n      value: data.inProgress,\n      color: '#efc310'\n    }, {\n      title: 'Finished',\n      value: data.finish,\n      color: '#5bc128'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, label));\n};\n\nexport default CustomPieChart;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/src/components/ProjectComponents/CustomPieChart.js"],"names":["React","useState","useContext","useEffect","useRef","PieChart","CustomPieChart","data","visualMark","label","segmentsStyle","transition","cursor","strokeWidth","selectedPart","setSelectedPart","labelStyle","fontSize","fontWeight","handleSelectPart","segmentIndex","handleVisual","dataEntry","Math","round","value","percentage","e","index","title","start","color","inProgress","finish"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,SAAQC,QAAR,QAAuB,yBAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,UAAP;AAAmBC,EAAAA;AAAnB,CAAD,KAA+B;AAElD;AACA,QAAMC,aAAa,GAAG;AAACC,IAAAA,UAAU,EAAE,YAAb;AAA2BC,IAAAA,MAAM,EAAE,SAAnC;AAA8CC,IAAAA,WAAW,EAAE;AAA3D,GAAtB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,EAAhD;AAGA,QAAMe,UAAU,GAAG;AACfC,IAAAA,QAAQ,EAAE,QADK;AAEfC,IAAAA,UAAU,EAAE;AAFG,GAAnB;;AAKA,QAAMC,gBAAgB,GAAIC,YAAD,IAAkB;AACvCL,IAAAA,eAAe,CAACK,YAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIC,SAAD,IAAe;AAChC,QAAId,UAAU,KAAK,OAAnB,EAA4B;AACxB,aAAOe,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACG,KAArB,MAAgC,CAAhC,GAAoC,EAApC,GAA0C,GAAEF,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACG,KAArB,CAA4B,QAA/E;AACH,KAFD,MAEO;AACH,aAAOF,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACI,UAArB,MAAqC,CAArC,GAAyC,EAAzC,GAA+C,GAAEH,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACI,UAArB,CAAiC,IAAzF;AACH;AAGJ,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AACQ,IAAA,SAAS,EAAC,OADlB;AAEQ,IAAA,KAAK,EAAE,CAAC;AAACJ,MAAAA;AAAD,KAAD,KAAiB;AACrB,aAAOD,YAAY,CAACC,SAAD,CAAnB;AACF,KAJT;AAKQ,IAAA,UAAU,EAAEN,UALpB;AAMQ,IAAA,OAAO,EAAE,IANjB;AAOQ,IAAA,iBAAiB,EAAE,IAP3B;AAQQ,IAAA,SAAS,EAAE,EARnB;AASQ,IAAA,MAAM,EAAE,EAThB;AAUQ,IAAA,OAAO,EAAE,CAACW,CAAD,EAAIP,YAAJ,KAAqBD,gBAAgB,CAACC,YAAD,CAVtD;AAWQ,IAAA,aAAa,EAAGQ,KAAD,IAAW;AACtB,aAAOA,KAAK,KAAKd,YAAV,GACD,EAAC,GAAGJ,aAAJ;AAAmBG,QAAAA,WAAW,EAAE;AAAhC,OADC,GAEDH,aAFN;AAGH,KAfT;AAgBQ,IAAA,IAAI,EAAE,CACF;AAACmB,MAAAA,KAAK,EAAE,aAAR;AAAuBJ,MAAAA,KAAK,EAAElB,IAAI,CAACuB,KAAnC;AAA0CC,MAAAA,KAAK,EAAE;AAAjD,KADE,EAEF;AAACF,MAAAA,KAAK,EAAE,aAAR;AAAuBJ,MAAAA,KAAK,EAAElB,IAAI,CAACyB,UAAnC;AAA+CD,MAAAA,KAAK,EAAE;AAAtD,KAFE,EAGF;AAACF,MAAAA,KAAK,EAAE,UAAR;AAAoBJ,MAAAA,KAAK,EAAElB,IAAI,CAAC0B,MAAhC;AAAwCF,MAAAA,KAAK,EAAE;AAA/C,KAHE,CAhBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,KAAL,CAvBJ,CADJ;AA2BH,CArDD;;AAuDA,eAAeH,cAAf","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\nimport {PieChart} from 'react-minimal-pie-chart';\n\nconst CustomPieChart = ({data, visualMark, label}) => {\n\n    //pie chart\n    const segmentsStyle = {transition: 'stroke .3s', cursor: 'pointer', strokeWidth: 35};\n    const [selectedPart, setSelectedPart] = useState();\n\n\n    const labelStyle = {\n        fontSize: \"0.3rem\",\n        fontWeight: \"bold\"\n    };\n\n    const handleSelectPart = (segmentIndex) => {\n        setSelectedPart(segmentIndex)\n    };\n\n    const handleVisual = (dataEntry) => {\n        if (visualMark === \"value\") {\n            return Math.round(dataEntry.value) === 0 ? \"\" : `${Math.round(dataEntry.value)} total`\n        } else {\n            return Math.round(dataEntry.percentage) === 0 ? \"\" : `${Math.round(dataEntry.percentage)} %`\n        }\n\n\n    };\n\n    return (\n        <div className=\"chart_box\">\n        <PieChart\n                className=\"chart\"\n                label={({dataEntry}) => {\n                   return handleVisual(dataEntry)\n                }}\n                labelStyle={labelStyle}\n                animate={true}\n                animationDuration={1000}\n                lineWidth={75}\n                radius={40}\n                onClick={(e, segmentIndex) => handleSelectPart(segmentIndex)}\n                segmentsStyle={(index) => {\n                    return index === selectedPart\n                        ? {...segmentsStyle, strokeWidth: 40}\n                        : segmentsStyle;\n                }}\n                data={[\n                    {title: 'Not Started', value: data.start, color: '#dd2911'},\n                    {title: 'In Progress', value: data.inProgress, color: '#efc310'},\n                    {title: 'Finished', value: data.finish, color: '#5bc128'},\n                ]}\n            />\n            <h1>{label}</h1>\n        </div>\n    );\n};\n\nexport default CustomPieChart;"]},"metadata":{},"sourceType":"module"}