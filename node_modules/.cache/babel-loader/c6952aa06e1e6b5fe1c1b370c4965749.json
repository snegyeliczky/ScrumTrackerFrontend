{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadPrivatePartialConfig;\nexports.loadPartialConfig = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = _interopRequireDefault(require(\"./plugin\"));\n\nvar _util = require(\"./util\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _environment = require(\"./helpers/environment\");\n\nvar _options = require(\"./validation/options\");\n\nvar _files = require(\"./files\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction* resolveRootMode(rootDir, rootMode) {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        return upwardRootDir === null ? rootDir : upwardRootDir;\n      }\n\n    case \"upward\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        if (upwardRootDir !== null) return upwardRootDir;\n        throw Object.assign(new Error(`Babel was run with rootMode:\"upward\" but a root could not ` + `be found when searching upward from \"${rootDir}\".\\n` + `One of the following config files must be in the directory tree: ` + `\"${_files.ROOT_CONFIG_FILENAMES.join(\", \")}\".`), {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir\n        });\n      }\n\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\nfunction* loadPrivatePartialConfig(inputOpts) {\n  if (inputOpts != null && (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? (0, _options.validate)(\"arguments\", inputOpts) : {};\n  const {\n    envName = (0, _environment.getEnv)(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller\n  } = args;\n\n  const absoluteCwd = _path().default.resolve(cwd);\n\n  const absoluteRootDir = yield* resolveRootMode(_path().default.resolve(absoluteCwd, rootDir), rootMode);\n  const context = {\n    filename: typeof args.filename === \"string\" ? _path().default.resolve(cwd, args.filename) : undefined,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller\n  };\n  const configChain = yield* (0, _configChain.buildRootChain)(args, context);\n  if (!configChain) return null;\n  const options = {};\n  configChain.options.forEach(opts => {\n    (0, _util.mergeOptions)(options, opts);\n  });\n  options.babelrc = false;\n  options.configFile = false;\n  options.passPerPreset = false;\n  options.envName = context.envName;\n  options.cwd = context.cwd;\n  options.root = context.root;\n  options.filename = typeof context.filename === \"string\" ? context.filename : undefined;\n  options.plugins = configChain.plugins.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  options.presets = configChain.presets.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  return {\n    options,\n    context,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config\n  };\n}\n\nconst loadPartialConfig = (0, _gensync().default)(function* (inputOpts) {\n  const result = yield* loadPrivatePartialConfig(inputOpts);\n  if (!result) return null;\n  const {\n    options,\n    babelrc,\n    ignore,\n    config\n  } = result;\n  (options.plugins || []).forEach(item => {\n    if (item.value instanceof _plugin.default) {\n      throw new Error(\"Passing cached plugin instances is not supported in \" + \"babel.loadPartialConfig()\");\n    }\n  });\n  return new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined);\n});\nexports.loadPartialConfig = loadPartialConfig;\n\nclass PartialConfig {\n  constructor(options, babelrc, ignore, config) {\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    Object.freeze(this);\n  }\n\n  hasFilesystemConfig() {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n\n}\n\nObject.freeze(PartialConfig.prototype);","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/core/lib/config/partial.js"],"names":["Object","defineProperty","exports","value","default","loadPrivatePartialConfig","loadPartialConfig","_path","data","_interopRequireDefault","require","_gensync","_plugin","_util","_item","_configChain","_environment","_options","_files","obj","__esModule","resolveRootMode","rootDir","rootMode","upwardRootDir","findConfigUpwards","assign","Error","ROOT_CONFIG_FILENAMES","join","code","dirname","inputOpts","Array","isArray","args","validate","envName","getEnv","cwd","root","caller","absoluteCwd","resolve","absoluteRootDir","context","filename","undefined","configChain","buildRootChain","options","forEach","opts","mergeOptions","babelrc","configFile","passPerPreset","plugins","map","descriptor","createItemFromDescriptor","presets","ignore","config","result","item","PartialConfig","filepath","constructor","babelignore","freeze","hasFilesystemConfig","prototype"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadPrivatePartialConfig;\nexports.loadPartialConfig = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = _interopRequireDefault(require(\"./plugin\"));\n\nvar _util = require(\"./util\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _environment = require(\"./helpers/environment\");\n\nvar _options = require(\"./validation/options\");\n\nvar _files = require(\"./files\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction* resolveRootMode(rootDir, rootMode) {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        return upwardRootDir === null ? rootDir : upwardRootDir;\n      }\n\n    case \"upward\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        if (upwardRootDir !== null) return upwardRootDir;\n        throw Object.assign(new Error(`Babel was run with rootMode:\"upward\" but a root could not ` + `be found when searching upward from \"${rootDir}\".\\n` + `One of the following config files must be in the directory tree: ` + `\"${_files.ROOT_CONFIG_FILENAMES.join(\", \")}\".`), {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir\n        });\n      }\n\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\nfunction* loadPrivatePartialConfig(inputOpts) {\n  if (inputOpts != null && (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? (0, _options.validate)(\"arguments\", inputOpts) : {};\n  const {\n    envName = (0, _environment.getEnv)(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller\n  } = args;\n\n  const absoluteCwd = _path().default.resolve(cwd);\n\n  const absoluteRootDir = yield* resolveRootMode(_path().default.resolve(absoluteCwd, rootDir), rootMode);\n  const context = {\n    filename: typeof args.filename === \"string\" ? _path().default.resolve(cwd, args.filename) : undefined,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller\n  };\n  const configChain = yield* (0, _configChain.buildRootChain)(args, context);\n  if (!configChain) return null;\n  const options = {};\n  configChain.options.forEach(opts => {\n    (0, _util.mergeOptions)(options, opts);\n  });\n  options.babelrc = false;\n  options.configFile = false;\n  options.passPerPreset = false;\n  options.envName = context.envName;\n  options.cwd = context.cwd;\n  options.root = context.root;\n  options.filename = typeof context.filename === \"string\" ? context.filename : undefined;\n  options.plugins = configChain.plugins.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  options.presets = configChain.presets.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  return {\n    options,\n    context,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config\n  };\n}\n\nconst loadPartialConfig = (0, _gensync().default)(function* (inputOpts) {\n  const result = yield* loadPrivatePartialConfig(inputOpts);\n  if (!result) return null;\n  const {\n    options,\n    babelrc,\n    ignore,\n    config\n  } = result;\n  (options.plugins || []).forEach(item => {\n    if (item.value instanceof _plugin.default) {\n      throw new Error(\"Passing cached plugin instances is not supported in \" + \"babel.loadPartialConfig()\");\n    }\n  });\n  return new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined);\n});\nexports.loadPartialConfig = loadPartialConfig;\n\nclass PartialConfig {\n  constructor(options, babelrc, ignore, config) {\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    Object.freeze(this);\n  }\n\n  hasFilesystemConfig() {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n\n}\n\nObject.freeze(PartialConfig.prototype);"]},"metadata":{},"sourceType":"script"}