{"ast":null,"code":"\"use strict\"; // These use the global symbol registry so that multiple copies of this\n// library can work together in case they are not deduped.\n\nconst GENSYNC_START = Symbol.for(\"gensync:v1:start\");\nconst GENSYNC_SUSPEND = Symbol.for(\"gensync:v1:suspend\");\nconst GENSYNC_EXPECTED_START = \"GENSYNC_EXPECTED_START\";\nconst GENSYNC_EXPECTED_SUSPEND = \"GENSYNC_EXPECTED_SUSPEND\";\nconst GENSYNC_OPTIONS_ERROR = \"GENSYNC_OPTIONS_ERROR\";\nconst GENSYNC_RACE_NONEMPTY = \"GENSYNC_RACE_NONEMPTY\";\nconst GENSYNC_ERRBACK_NO_CALLBACK = \"GENSYNC_ERRBACK_NO_CALLBACK\";\nmodule.exports = Object.assign(function gensync(optsOrFn) {\n  let genFn = optsOrFn;\n\n  if (typeof optsOrFn !== \"function\") {\n    genFn = newGenerator(optsOrFn);\n  } else {\n    genFn = wrapGenerator(optsOrFn);\n  }\n\n  return Object.assign(genFn, makeFunctionAPI(genFn));\n}, {\n  all: buildOperation({\n    name: \"all\",\n    arity: 1,\n    sync: function (args) {\n      const items = Array.from(args[0]);\n      return items.map(item => evaluateSync(item));\n    },\n    async: function (args, resolve, reject) {\n      const items = Array.from(args[0]);\n      let count = 0;\n      const results = items.map(() => undefined);\n      items.forEach((item, i) => {\n        evaluateAsync(item, val => {\n          results[i] = val;\n          count += 1;\n          if (count === results.length) resolve(results);\n        }, reject);\n      });\n    }\n  }),\n  race: buildOperation({\n    name: \"race\",\n    arity: 1,\n    sync: function (args) {\n      const items = Array.from(args[0]);\n\n      if (items.length === 0) {\n        throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\n      }\n\n      return evaluateSync(items[0]);\n    },\n    async: function (args, resolve, reject) {\n      const items = Array.from(args[0]);\n\n      if (items.length === 0) {\n        throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\n      }\n\n      for (const item of items) {\n        evaluateAsync(item, resolve, reject);\n      }\n    }\n  })\n});\n/**\n * Given a generator function, return the standard API object that executes\n * the generator and calls the callbacks.\n */\n\nfunction makeFunctionAPI(genFn) {\n  const fns = {\n    sync: function (...args) {\n      return evaluateSync(genFn.apply(this, args));\n    },\n    async: function (...args) {\n      return new Promise((resolve, reject) => {\n        evaluateAsync(genFn.apply(this, args), resolve, reject);\n      });\n    },\n    errback: function (...args) {\n      const cb = args.pop();\n\n      if (typeof cb !== \"function\") {\n        throw makeError(\"Asynchronous function called without callback\", GENSYNC_ERRBACK_NO_CALLBACK);\n      }\n\n      let gen;\n\n      try {\n        gen = genFn.apply(this, args);\n      } catch (err) {\n        cb(err);\n        return;\n      }\n\n      evaluateAsync(gen, val => cb(undefined, val), err => cb(err));\n    }\n  };\n  return fns;\n}\n\nfunction assertTypeof(type, name, value, allowUndefined) {\n  if (typeof value === type || allowUndefined && typeof value === \"undefined\") {\n    return;\n  }\n\n  let msg;\n\n  if (allowUndefined) {\n    msg = `Expected opts.${name} to be either a ${type}, or undefined.`;\n  } else {\n    msg = `Expected opts.${name} to be a ${type}.`;\n  }\n\n  throw makeError(msg, GENSYNC_OPTIONS_ERROR);\n}\n\nfunction makeError(msg, code) {\n  return Object.assign(new Error(msg), {\n    code\n  });\n}\n/**\n * Given an options object, return a new generator that dispatches the\n * correct handler based on sync or async execution.\n */\n\n\nfunction newGenerator({\n  name,\n  arity,\n  sync,\n  async,\n  errback\n}) {\n  assertTypeof(\"string\", \"name\", name, true\n  /* allowUndefined */\n  );\n  assertTypeof(\"number\", \"arity\", arity, true\n  /* allowUndefined */\n  );\n  assertTypeof(\"function\", \"sync\", sync);\n  assertTypeof(\"function\", \"async\", async, true\n  /* allowUndefined */\n  );\n  assertTypeof(\"function\", \"errback\", errback, true\n  /* allowUndefined */\n  );\n\n  if (async && errback) {\n    throw makeError(\"Expected one of either opts.async or opts.errback, but got _both_.\", GENSYNC_OPTIONS_ERROR);\n  }\n\n  if (typeof name !== \"string\") {\n    let fnName;\n\n    if (errback && errback.name && errback.name !== \"errback\") {\n      fnName = errback.name;\n    }\n\n    if (async && async.name && async.name !== \"async\") {\n      fnName = async.name.replace(/Async$/, \"\");\n    }\n\n    if (sync && sync.name && sync.name !== \"sync\") {\n      fnName = sync.name.replace(/Sync$/, \"\");\n    }\n\n    if (typeof fnName === \"string\") {\n      name = fnName;\n    }\n  }\n\n  if (typeof arity !== \"number\") {\n    arity = sync.length;\n  }\n\n  return buildOperation({\n    name,\n    arity,\n    sync: function (args) {\n      return sync.apply(this, args);\n    },\n    async: function (args, resolve, reject) {\n      if (async) {\n        async.apply(this, args).then(resolve, reject);\n      } else if (errback) {\n        errback.call(this, ...args, (err, value) => {\n          if (err == null) resolve(value);else reject(err);\n        });\n      } else {\n        resolve(sync.apply(this, args));\n      }\n    }\n  });\n}\n\nfunction wrapGenerator(genFn) {\n  return setFunctionMetadata(genFn.name, genFn.length, function (...args) {\n    return genFn.apply(this, args);\n  });\n}\n\nfunction buildOperation({\n  name,\n  arity,\n  sync,\n  async\n}) {\n  return setFunctionMetadata(name, arity, function* (...args) {\n    const resume = yield GENSYNC_START;\n\n    if (!resume) {\n      return sync.call(this, args);\n    }\n\n    let result;\n\n    try {\n      async.call(this, args, value => {\n        if (result) return;\n        result = {\n          value\n        };\n        resume();\n      }, err => {\n        if (result) return;\n        result = {\n          err\n        };\n        resume();\n      });\n    } catch (err) {\n      result = {\n        err\n      };\n      resume();\n    } // Suspend until the callbacks run. Will resume synchronously if the\n    // callback was already called.\n\n\n    yield GENSYNC_SUSPEND;\n\n    if (result.hasOwnProperty(\"err\")) {\n      throw result.err;\n    }\n\n    return result.value;\n  });\n}\n\nfunction evaluateSync(gen) {\n  let value;\n\n  while (!({\n    value\n  } = gen.next()).done) {\n    assertStart(value, gen);\n  }\n\n  return value;\n}\n\nfunction evaluateAsync(gen, resolve, reject) {\n  (function step() {\n    try {\n      let value;\n\n      while (!({\n        value\n      } = gen.next()).done) {\n        assertStart(value, gen); // If this throws, it is considered to have broken the contract\n        // established for async handlers. If these handlers are called\n        // synchronously, it is also considered bad behavior.\n\n        let sync = true;\n        let didSyncResume = false;\n        const out = gen.next(() => {\n          if (sync) {\n            didSyncResume = true;\n          } else {\n            step();\n          }\n        });\n        sync = false;\n        assertSuspend(out, gen);\n\n        if (!didSyncResume) {\n          // Callback wasn't called synchronously, so break out of the loop\n          // and let it call 'step' later.\n          return;\n        }\n      }\n\n      return resolve(value);\n    } catch (err) {\n      return reject(err);\n    }\n  })();\n}\n\nfunction assertStart(value, gen) {\n  if (value === GENSYNC_START) return;\n  throwError(gen, makeError(`Got unexpected yielded value in gensync generator: ${JSON.stringify(value)}. Did you perhaps mean to use 'yield*' instead of 'yield'?`, GENSYNC_EXPECTED_START));\n}\n\nfunction assertSuspend({\n  value,\n  done\n}, gen) {\n  if (!done && value === GENSYNC_SUSPEND) return;\n  throwError(gen, makeError(done ? \"Unexpected generator completion. If you get this, it is probably a gensync bug.\" : `Expected GENSYNC_SUSPEND, got ${JSON.stringify(value)}. If you get this, it is probably a gensync bug.`, GENSYNC_EXPECTED_SUSPEND));\n}\n\nfunction throwError(gen, err) {\n  // Call `.throw` so that users can step in a debugger to easily see which\n  // 'yield' passed an unexpected value. If the `.throw` call didn't throw\n  // back to the generator, we explicitly do it to stop the error\n  // from being swallowed by user code try/catches.\n  if (gen.throw) gen.throw(err);\n  throw err;\n}\n\nfunction isIterable(value) {\n  return !!value && (typeof value === \"object\" || typeof value === \"function\") && !value[Symbol.iterator];\n}\n\nfunction setFunctionMetadata(name, arity, fn) {\n  if (typeof name === \"string\") {\n    // This should always work on the supported Node versions, but for the\n    // sake of users that are compiling to older versions, we check for\n    // configurability so we don't throw.\n    const nameDesc = Object.getOwnPropertyDescriptor(fn, \"name\");\n\n    if (!nameDesc || nameDesc.configurable) {\n      Object.defineProperty(fn, \"name\", Object.assign(nameDesc || {}, {\n        configurable: true,\n        value: name\n      }));\n    }\n  }\n\n  if (typeof arity === \"number\") {\n    const lengthDesc = Object.getOwnPropertyDescriptor(fn, \"length\");\n\n    if (!lengthDesc || lengthDesc.configurable) {\n      Object.defineProperty(fn, \"length\", Object.assign(lengthDesc || {}, {\n        configurable: true,\n        value: arity\n      }));\n    }\n  }\n\n  return fn;\n}","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/gensync/index.js"],"names":["GENSYNC_START","Symbol","for","GENSYNC_SUSPEND","GENSYNC_EXPECTED_START","GENSYNC_EXPECTED_SUSPEND","GENSYNC_OPTIONS_ERROR","GENSYNC_RACE_NONEMPTY","GENSYNC_ERRBACK_NO_CALLBACK","module","exports","Object","assign","gensync","optsOrFn","genFn","newGenerator","wrapGenerator","makeFunctionAPI","all","buildOperation","name","arity","sync","args","items","Array","from","map","item","evaluateSync","async","resolve","reject","count","results","undefined","forEach","i","evaluateAsync","val","length","race","makeError","fns","apply","Promise","errback","cb","pop","gen","err","assertTypeof","type","value","allowUndefined","msg","code","Error","fnName","replace","then","call","setFunctionMetadata","resume","result","hasOwnProperty","next","done","assertStart","step","didSyncResume","out","assertSuspend","throwError","JSON","stringify","throw","isIterable","iterator","fn","nameDesc","getOwnPropertyDescriptor","configurable","defineProperty","lengthDesc"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// These use the global symbol registry so that multiple copies of this\n// library can work together in case they are not deduped.\nconst GENSYNC_START = Symbol.for(\"gensync:v1:start\");\nconst GENSYNC_SUSPEND = Symbol.for(\"gensync:v1:suspend\");\n\nconst GENSYNC_EXPECTED_START = \"GENSYNC_EXPECTED_START\";\nconst GENSYNC_EXPECTED_SUSPEND = \"GENSYNC_EXPECTED_SUSPEND\";\nconst GENSYNC_OPTIONS_ERROR = \"GENSYNC_OPTIONS_ERROR\";\nconst GENSYNC_RACE_NONEMPTY = \"GENSYNC_RACE_NONEMPTY\";\nconst GENSYNC_ERRBACK_NO_CALLBACK = \"GENSYNC_ERRBACK_NO_CALLBACK\";\n\nmodule.exports = Object.assign(\n  function gensync(optsOrFn) {\n    let genFn = optsOrFn;\n    if (typeof optsOrFn !== \"function\") {\n      genFn = newGenerator(optsOrFn);\n    } else {\n      genFn = wrapGenerator(optsOrFn);\n    }\n\n    return Object.assign(genFn, makeFunctionAPI(genFn));\n  },\n  {\n    all: buildOperation({\n      name: \"all\",\n      arity: 1,\n      sync: function(args) {\n        const items = Array.from(args[0]);\n        return items.map(item => evaluateSync(item));\n      },\n      async: function(args, resolve, reject) {\n        const items = Array.from(args[0]);\n\n        let count = 0;\n        const results = items.map(() => undefined);\n        items.forEach((item, i) => {\n          evaluateAsync(\n            item,\n            val => {\n              results[i] = val;\n              count += 1;\n\n              if (count === results.length) resolve(results);\n            },\n            reject\n          );\n        });\n      },\n    }),\n    race: buildOperation({\n      name: \"race\",\n      arity: 1,\n      sync: function(args) {\n        const items = Array.from(args[0]);\n        if (items.length === 0) {\n          throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\n        }\n\n        return evaluateSync(items[0]);\n      },\n      async: function(args, resolve, reject) {\n        const items = Array.from(args[0]);\n        if (items.length === 0) {\n          throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\n        }\n\n        for (const item of items) {\n          evaluateAsync(item, resolve, reject);\n        }\n      },\n    }),\n  }\n);\n\n/**\n * Given a generator function, return the standard API object that executes\n * the generator and calls the callbacks.\n */\nfunction makeFunctionAPI(genFn) {\n  const fns = {\n    sync: function(...args) {\n      return evaluateSync(genFn.apply(this, args));\n    },\n    async: function(...args) {\n      return new Promise((resolve, reject) => {\n        evaluateAsync(genFn.apply(this, args), resolve, reject);\n      });\n    },\n    errback: function(...args) {\n      const cb = args.pop();\n      if (typeof cb !== \"function\") {\n        throw makeError(\n          \"Asynchronous function called without callback\",\n          GENSYNC_ERRBACK_NO_CALLBACK\n        );\n      }\n\n      let gen;\n      try {\n        gen = genFn.apply(this, args);\n      } catch (err) {\n        cb(err);\n        return;\n      }\n\n      evaluateAsync(gen, val => cb(undefined, val), err => cb(err));\n    },\n  };\n  return fns;\n}\n\nfunction assertTypeof(type, name, value, allowUndefined) {\n  if (\n    typeof value === type ||\n    (allowUndefined && typeof value === \"undefined\")\n  ) {\n    return;\n  }\n\n  let msg;\n  if (allowUndefined) {\n    msg = `Expected opts.${name} to be either a ${type}, or undefined.`;\n  } else {\n    msg = `Expected opts.${name} to be a ${type}.`;\n  }\n\n  throw makeError(msg, GENSYNC_OPTIONS_ERROR);\n}\nfunction makeError(msg, code) {\n  return Object.assign(new Error(msg), { code });\n}\n\n/**\n * Given an options object, return a new generator that dispatches the\n * correct handler based on sync or async execution.\n */\nfunction newGenerator({ name, arity, sync, async, errback }) {\n  assertTypeof(\"string\", \"name\", name, true /* allowUndefined */);\n  assertTypeof(\"number\", \"arity\", arity, true /* allowUndefined */);\n  assertTypeof(\"function\", \"sync\", sync);\n  assertTypeof(\"function\", \"async\", async, true /* allowUndefined */);\n  assertTypeof(\"function\", \"errback\", errback, true /* allowUndefined */);\n  if (async && errback) {\n    throw makeError(\n      \"Expected one of either opts.async or opts.errback, but got _both_.\",\n      GENSYNC_OPTIONS_ERROR\n    );\n  }\n\n  if (typeof name !== \"string\") {\n    let fnName;\n    if (errback && errback.name && errback.name !== \"errback\") {\n      fnName = errback.name;\n    }\n    if (async && async.name && async.name !== \"async\") {\n      fnName = async.name.replace(/Async$/, \"\");\n    }\n    if (sync && sync.name && sync.name !== \"sync\") {\n      fnName = sync.name.replace(/Sync$/, \"\");\n    }\n\n    if (typeof fnName === \"string\") {\n      name = fnName;\n    }\n  }\n\n  if (typeof arity !== \"number\") {\n    arity = sync.length;\n  }\n\n  return buildOperation({\n    name,\n    arity,\n    sync: function(args) {\n      return sync.apply(this, args);\n    },\n    async: function(args, resolve, reject) {\n      if (async) {\n        async.apply(this, args).then(resolve, reject);\n      } else if (errback) {\n        errback.call(this, ...args, (err, value) => {\n          if (err == null) resolve(value);\n          else reject(err);\n        });\n      } else {\n        resolve(sync.apply(this, args));\n      }\n    },\n  });\n}\n\nfunction wrapGenerator(genFn) {\n  return setFunctionMetadata(genFn.name, genFn.length, function(...args) {\n    return genFn.apply(this, args);\n  });\n}\n\nfunction buildOperation({ name, arity, sync, async }) {\n  return setFunctionMetadata(name, arity, function*(...args) {\n    const resume = yield GENSYNC_START;\n    if (!resume) {\n      return sync.call(this, args);\n    }\n\n    let result;\n    try {\n      async.call(\n        this,\n        args,\n        value => {\n          if (result) return;\n\n          result = { value };\n          resume();\n        },\n        err => {\n          if (result) return;\n\n          result = { err };\n          resume();\n        }\n      );\n    } catch (err) {\n      result = { err };\n      resume();\n    }\n\n    // Suspend until the callbacks run. Will resume synchronously if the\n    // callback was already called.\n    yield GENSYNC_SUSPEND;\n\n    if (result.hasOwnProperty(\"err\")) {\n      throw result.err;\n    }\n\n    return result.value;\n  });\n}\n\nfunction evaluateSync(gen) {\n  let value;\n  while (!({ value } = gen.next()).done) {\n    assertStart(value, gen);\n  }\n  return value;\n}\n\nfunction evaluateAsync(gen, resolve, reject) {\n  (function step() {\n    try {\n      let value;\n      while (!({ value } = gen.next()).done) {\n        assertStart(value, gen);\n\n        // If this throws, it is considered to have broken the contract\n        // established for async handlers. If these handlers are called\n        // synchronously, it is also considered bad behavior.\n        let sync = true;\n        let didSyncResume = false;\n        const out = gen.next(() => {\n          if (sync) {\n            didSyncResume = true;\n          } else {\n            step();\n          }\n        });\n        sync = false;\n\n        assertSuspend(out, gen);\n\n        if (!didSyncResume) {\n          // Callback wasn't called synchronously, so break out of the loop\n          // and let it call 'step' later.\n          return;\n        }\n      }\n\n      return resolve(value);\n    } catch (err) {\n      return reject(err);\n    }\n  })();\n}\n\nfunction assertStart(value, gen) {\n  if (value === GENSYNC_START) return;\n\n  throwError(\n    gen,\n    makeError(\n      `Got unexpected yielded value in gensync generator: ${JSON.stringify(\n        value\n      )}. Did you perhaps mean to use 'yield*' instead of 'yield'?`,\n      GENSYNC_EXPECTED_START\n    )\n  );\n}\nfunction assertSuspend({ value, done }, gen) {\n  if (!done && value === GENSYNC_SUSPEND) return;\n\n  throwError(\n    gen,\n    makeError(\n      done\n        ? \"Unexpected generator completion. If you get this, it is probably a gensync bug.\"\n        : `Expected GENSYNC_SUSPEND, got ${JSON.stringify(\n            value\n          )}. If you get this, it is probably a gensync bug.`,\n      GENSYNC_EXPECTED_SUSPEND\n    )\n  );\n}\n\nfunction throwError(gen, err) {\n  // Call `.throw` so that users can step in a debugger to easily see which\n  // 'yield' passed an unexpected value. If the `.throw` call didn't throw\n  // back to the generator, we explicitly do it to stop the error\n  // from being swallowed by user code try/catches.\n  if (gen.throw) gen.throw(err);\n  throw err;\n}\n\nfunction isIterable(value) {\n  return (\n    !!value &&\n    (typeof value === \"object\" || typeof value === \"function\") &&\n    !value[Symbol.iterator]\n  );\n}\n\nfunction setFunctionMetadata(name, arity, fn) {\n  if (typeof name === \"string\") {\n    // This should always work on the supported Node versions, but for the\n    // sake of users that are compiling to older versions, we check for\n    // configurability so we don't throw.\n    const nameDesc = Object.getOwnPropertyDescriptor(fn, \"name\");\n    if (!nameDesc || nameDesc.configurable) {\n      Object.defineProperty(\n        fn,\n        \"name\",\n        Object.assign(nameDesc || {}, {\n          configurable: true,\n          value: name,\n        })\n      );\n    }\n  }\n\n  if (typeof arity === \"number\") {\n    const lengthDesc = Object.getOwnPropertyDescriptor(fn, \"length\");\n    if (!lengthDesc || lengthDesc.configurable) {\n      Object.defineProperty(\n        fn,\n        \"length\",\n        Object.assign(lengthDesc || {}, {\n          configurable: true,\n          value: arity,\n        })\n      );\n    }\n  }\n\n  return fn;\n}\n"]},"metadata":{},"sourceType":"script"}