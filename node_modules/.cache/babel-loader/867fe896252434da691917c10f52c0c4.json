{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/ProjectComponents/Column.js\";\nimport React, { useState, useRef, useContext, useEffect } from 'react';\nimport Task from \"./Task\";\nimport { DeleteOutlined } from '@ant-design/icons';\nimport axios from \"axios\";\nimport UseComponentVisible from \"../../Utils/UseComponentVisible\";\nimport { ProjectContext } from \"../../Contexts/ProjectContext\";\nimport TaskCalls from \"../../Services/TaskCalls\";\n\nconst Column = ({\n  status,\n  onDragEnter,\n  dragItem,\n  onDragEnd,\n  deleteStatus,\n  refreshStatusesFromBackend,\n  statusFlag,\n  addNewTask,\n  usersOnProject,\n  projectAuthor\n}) => {\n  const newTaskNameRef = useRef();\n  const {\n    showErrorAlert,\n    showSuccessAlert\n  } = useContext(ProjectContext);\n  const [showAccept, setShowAccept] = useState(true); //Click outside effect fields\n\n  const {\n    ref,\n    isComponentVisible,\n    setIsComponentVisible\n  } = UseComponentVisible(false);\n\n  const handelDeleteClick = () => {\n    deleteStatus(status.id);\n  };\n\n  const handleDeleteTask = async taskId => {\n    console.log(\"delete\");\n    await TaskCalls.handleDeleteTask(taskId);\n    refreshStatusesFromBackend();\n  };\n\n  const handleAddNewTask = () => {\n    console.log(newTaskNameRef.current.value);\n\n    if (newTaskNameRef.current.value.length < 3) {\n      showErrorAlert(\"please minimum 3 character!\");\n      newTaskNameRef.current.value = \"\";\n      return;\n    }\n\n    let taskName = newTaskNameRef.current.value;\n    addNewTask(taskName, status.id);\n    newTaskNameRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_column\",\n    onDragEnter: e => onDragEnter(status.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status_tool_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n    onClick: handelDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, status.statusName, \" \")), status.tasks.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"No task yet\") : status.tasks.map(task => {\n    return showAccept ? /*#__PURE__*/React.createElement(Task, {\n      refreshStatusesFromBackend: refreshStatusesFromBackend,\n      handleDeleteTask: handleDeleteTask,\n      onDragEnd: onDragEnd,\n      dragItem: dragItem,\n      statusId: status.id,\n      key: task.id,\n      task: task,\n      onDragEnter: onDragEnter,\n      usersOnProject: usersOnProject,\n      projectAuthor: projectAuthor,\n      statusFlag: statusFlag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }) : task.finished ? \"\" : /*#__PURE__*/React.createElement(Task, {\n      refreshStatusesFromBackend: refreshStatusesFromBackend,\n      handleDeleteTask: handleDeleteTask,\n      onDragEnd: onDragEnd,\n      dragItem: dragItem,\n      statusId: status.id,\n      key: task.id,\n      task: task,\n      onDragEnter: onDragEnter,\n      usersOnProject: usersOnProject,\n      projectAuthor: projectAuthor,\n      statusFlag: statusFlag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, isComponentVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add_new_task_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add_new_task_text\",\n    ref: newTaskNameRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add_new_task_btn\",\n    onClick: handleAddNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"save\")), !isComponentVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add_new_task\",\n    onClick: () => setIsComponentVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"add new task\")));\n};\n\nexport default Column;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/ProjectComponents/Column.js"],"names":["React","useState","useRef","useContext","useEffect","Task","DeleteOutlined","axios","UseComponentVisible","ProjectContext","TaskCalls","Column","status","onDragEnter","dragItem","onDragEnd","deleteStatus","refreshStatusesFromBackend","statusFlag","addNewTask","usersOnProject","projectAuthor","newTaskNameRef","showErrorAlert","showSuccessAlert","showAccept","setShowAccept","ref","isComponentVisible","setIsComponentVisible","handelDeleteClick","id","handleDeleteTask","taskId","console","log","handleAddNewTask","current","value","length","taskName","e","statusName","tasks","map","task","finished"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useContext, useEffect} from 'react';\nimport Task from \"./Task\";\nimport {\n    DeleteOutlined\n} from '@ant-design/icons';\nimport axios from \"axios\";\nimport UseComponentVisible from \"../../Utils/UseComponentVisible\";\nimport {ProjectContext} from \"../../Contexts/ProjectContext\";\nimport TaskCalls from \"../../Services/TaskCalls\";\n\nconst Column = ({status, onDragEnter, dragItem, onDragEnd, deleteStatus, refreshStatusesFromBackend,\n                    statusFlag, addNewTask, usersOnProject, projectAuthor }) => {\n\n    const newTaskNameRef = useRef();\n    const {showErrorAlert,showSuccessAlert} = useContext(ProjectContext);\n    const [showAccept,setShowAccept] = useState(true);\n\n\n    //Click outside effect fields\n    const {\n        ref,\n        isComponentVisible,\n        setIsComponentVisible\n    } = UseComponentVisible(false);\n\n    const handelDeleteClick = () => {\n        deleteStatus(status.id);\n    };\n\n    const handleDeleteTask = async (taskId) => {\n        console.log(\"delete\");\n        await TaskCalls.handleDeleteTask(taskId);\n        refreshStatusesFromBackend();\n    };\n\n    const handleAddNewTask = () => {\n        console.log(newTaskNameRef.current.value);\n        if (newTaskNameRef.current.value.length < 3) {\n            showErrorAlert(\"please minimum 3 character!\");\n            newTaskNameRef.current.value = \"\";\n            return;\n        }\n        let taskName = newTaskNameRef.current.value;\n        addNewTask(taskName, status.id);\n        newTaskNameRef.current.value = \"\";\n    };\n\n    return (\n        <div className={\"project_column\"}\n             onDragEnter={(e) => (onDragEnter(status.id))}\n        >\n            <div>\n                <div className={\"status_tool_container\"}>\n                    <DeleteOutlined onClick={handelDeleteClick}/>\n                </div>\n                <h3>{status.statusName} </h3>\n            </div>\n            {status.tasks.length === 0 ?\n                <h4>No task yet</h4>\n                : status.tasks.map(task => {\n                   return  showAccept ?\n                    <Task\n                        refreshStatusesFromBackend={refreshStatusesFromBackend}\n                        handleDeleteTask={handleDeleteTask}\n                        onDragEnd={onDragEnd}\n                        dragItem={dragItem}\n                        statusId={status.id}\n                        key={task.id}\n                        task={task}\n                        onDragEnter={onDragEnter}\n                        usersOnProject={usersOnProject}\n                        projectAuthor = {projectAuthor}\n                        statusFlag ={statusFlag}\n                    />\n                    : task.finished? \"\"\n                           :<Task\n                               refreshStatusesFromBackend={refreshStatusesFromBackend}\n                               handleDeleteTask={handleDeleteTask}\n                               onDragEnd={onDragEnd}\n                               dragItem={dragItem}\n                               statusId={status.id}\n                               key={task.id}\n                               task={task}\n                               onDragEnter={onDragEnter}\n                               usersOnProject={usersOnProject}\n                               projectAuthor = {projectAuthor}\n                               statusFlag ={statusFlag}\n                           />;\n\n                })}\n            <div ref={ref}>\n                {isComponentVisible && (\n                    <div className=\"add_new_task_container\">\n                        <input className=\"add_new_task_text\" ref={newTaskNameRef}/>\n                        <div className=\"add_new_task_btn\" onClick={handleAddNewTask}>save</div>\n                    </div>\n                )}\n                {!isComponentVisible && (\n                    <div className=\"add_new_task\" onClick={() => setIsComponentVisible(true)}>\n                        add new task\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Column;"]},"metadata":{},"sourceType":"module"}