{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/Pages/ProjectPage/ProjectPage.js\";\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport ScrumTable from \"../../components/ProjectComponents/ScrumTable\";\nimport { ContentContainer } from \"../../Assets/StyledComps/styled\";\nimport UsersModal from \"../../components/ProjectComponents/UsersModal\";\nimport MailModal from \"../../components/MailModal\";\nimport { PieChart } from 'react-minimal-pie-chart';\nimport CustomPieChart from \"../../components/ProjectComponents/CustomPieChart\";\nimport ProjectCalls from \"../../Services/ProjectCalls\";\n\nconst ProjectPage = () => {\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState(null);\n  const [taskCount, setTaskCount] = useState({});\n  const [businessValueCount, setBusinessValueCount] = useState({});\n  const [mouseOverAccept, setMouseOverAccept] = useState(false);\n  const [usersOnProject, setUsersOnProject] = useState([]);\n\n  function getColaboratorsFromProject(project) {\n    let usersOnProject = [];\n    usersOnProject.push(project.author);\n\n    for (let participant of project.participants) {\n      usersOnProject.push(participant);\n    }\n\n    return usersOnProject;\n  }\n\n  const getProject = async () => {\n    let myProject = await ProjectCalls.getProject(id);\n    setUsersOnProject(getColaboratorsFromProject(myProject));\n    myProject.table.statuses.sort(function (a, b) {\n      return a.position - b.position;\n    });\n    myProject.table.statuses.map(status => {\n      status.tasks.sort(function (a, b) {\n        return a.position - b.position;\n      });\n    });\n    setProject(null);\n    setProject(myProject);\n    getTaskChartData(myProject.table.statuses);\n    getBusinessValueChartData(myProject.table.statuses);\n  };\n\n  function getTaskChartData(statuses) {\n    let projectStatuses = statuses;\n    let taskCounts = {\n      start: 0,\n      inProgress: 0,\n      finish: 0\n    };\n    projectStatuses.map(status => {\n      if (status.position === 1) {\n        taskCounts.start += status.tasks.length;\n      } else if (status.position === projectStatuses.length) {\n        taskCounts.finish += status.tasks.length;\n      } else {\n        taskCounts.inProgress += status.tasks.length;\n      }\n    });\n    setTaskCount(taskCounts);\n  }\n\n  const getBusinessValueChartData = statuses => {\n    let businessValueCount = {\n      start: 0,\n      inProgress: 0,\n      finish: 0\n    };\n    statuses.map(status => {\n      if (status.position === 1) {\n        status.tasks.map(task => {\n          businessValueCount.start += task.businessValue;\n        });\n      } else if (status.position === statuses.length) {\n        status.tasks.map(task => {\n          businessValueCount.finish += task.businessValue;\n        });\n      } else {\n        status.tasks.map(task => {\n          businessValueCount.inProgress += task.businessValue;\n        });\n      }\n    });\n    setBusinessValueCount(businessValueCount);\n  };\n\n  const addNewColumn = async columnName => {\n    let projectId = id;\n    let newStatus = {\n      statusName: columnName,\n      projectId: projectId\n    };\n    await ProjectCalls.addNewColumn(newStatus);\n    getProject();\n  };\n\n  const addNewTask = async (taskName, statusId) => {\n    let task = {\n      statusId: statusId,\n      title: taskName\n    };\n    await ProjectCalls.addNewTask(task);\n    getProject();\n  };\n\n  useEffect(() => {\n    getProject();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_item_container_canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, !project ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"loading....\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_item_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_title_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, project.title)), /*#__PURE__*/React.createElement(UsersModal, {\n    projectId: project.id,\n    participants: project.participants,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(MailModal, {\n    projectId: project.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrum_table_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ScrumTable, {\n    key: project.table.id,\n    table: project.table,\n    addNewColumn: addNewColumn,\n    addNewTask: addNewTask,\n    setTaskCount: setTaskCount,\n    tasksDistributionInStatuses: getTaskChartData,\n    countBusinessValue: getBusinessValueChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomPieChart, {\n    data: taskCount,\n    visualMark: \"percentage\",\n    label: \"Sprint progress by user story\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CustomPieChart, {\n    data: businessValueCount,\n    visualMark: \"value\",\n    label: \"Sprint progress by value distribution\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/Pages/ProjectPage/ProjectPage.js"],"names":["React","useState","useContext","useEffect","useRef","useParams","axios","ScrumTable","ContentContainer","UsersModal","MailModal","PieChart","CustomPieChart","ProjectCalls","ProjectPage","id","project","setProject","taskCount","setTaskCount","businessValueCount","setBusinessValueCount","mouseOverAccept","setMouseOverAccept","usersOnProject","setUsersOnProject","getColaboratorsFromProject","push","author","participant","participants","getProject","myProject","table","statuses","sort","a","b","position","map","status","tasks","getTaskChartData","getBusinessValueChartData","projectStatuses","taskCounts","start","inProgress","finish","length","task","businessValue","addNewColumn","columnName","projectId","newStatus","statusName","addNewTask","taskName","statusId","title"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\nimport ScrumTable from \"../../components/ProjectComponents/ScrumTable\";\nimport {ContentContainer} from \"../../Assets/StyledComps/styled\";\nimport UsersModal from \"../../components/ProjectComponents/UsersModal\";\nimport MailModal from \"../../components/MailModal\";\nimport {PieChart} from 'react-minimal-pie-chart';\nimport CustomPieChart from \"../../components/ProjectComponents/CustomPieChart\";\nimport ProjectCalls from \"../../Services/ProjectCalls\";\n\nconst ProjectPage = () => {\n\n    const {id} = useParams();\n    const [project, setProject] = useState(null);\n    const [taskCount, setTaskCount] = useState({});\n    const [businessValueCount, setBusinessValueCount] = useState({});\n    const [mouseOverAccept, setMouseOverAccept] = useState(false);\n    const [usersOnProject,setUsersOnProject] = useState([]);\n\n    function getColaboratorsFromProject(project) {\n        let usersOnProject = [];\n        usersOnProject.push(project.author);\n        for(let participant of project.participants ){\n            usersOnProject.push(participant);\n        }\n        return usersOnProject;\n    }\n\n\n    const getProject = async () => {\n        let myProject = await ProjectCalls.getProject(id);\n\n        setUsersOnProject(getColaboratorsFromProject(myProject));\n        \n        myProject.table.statuses.sort(function (a, b) {\n            return a.position - b.position;\n        });\n        myProject.table.statuses.map(status => {\n            status.tasks.sort(function (a, b) {\n                return a.position - b.position;\n            })\n        });\n        setProject(null);\n        setProject(myProject);\n        getTaskChartData(myProject.table.statuses);\n        getBusinessValueChartData(myProject.table.statuses);\n\n    };\n\n    function getTaskChartData(statuses) {\n        let projectStatuses = statuses;\n        let taskCounts = {start: 0, inProgress: 0, finish: 0};\n        projectStatuses.map((status) => {\n            if (status.position === 1) {\n                taskCounts.start += status.tasks.length;\n            } else if (status.position === projectStatuses.length) {\n                taskCounts.finish += status.tasks.length;\n            } else {\n                taskCounts.inProgress += status.tasks.length;\n            }\n        });\n        setTaskCount(taskCounts);\n    }\n\n    const getBusinessValueChartData = (statuses) => {\n        let businessValueCount = {start: 0, inProgress: 0, finish: 0};\n        statuses.map(status => {\n            if (status.position === 1) {\n                status.tasks.map(task => {\n                    businessValueCount.start += task.businessValue;\n                })\n            } else if (status.position === statuses.length) {\n                status.tasks.map(task => {\n                    businessValueCount.finish += task.businessValue;\n                })\n            } else {\n                status.tasks.map(task => {\n                    businessValueCount.inProgress += task.businessValue;\n                })\n            }\n        });\n        setBusinessValueCount(businessValueCount);\n    };\n\n    const addNewColumn = async (columnName) => {\n        let projectId = id;\n        let newStatus = {statusName: columnName, projectId: projectId};\n        await ProjectCalls.addNewColumn(newStatus)\n        getProject();\n    };\n\n    const addNewTask = async (taskName, statusId) => {\n        let task = {\n            statusId: statusId,\n            title: taskName\n        };\n        await ProjectCalls.addNewTask(task);\n        getProject();\n\n    };\n\n    useEffect(() => {\n        getProject();\n    }, []);\n\n\n    return (\n\n        <div className={\"project_item_container_canvas\"}>\n\n            {!project ?\n                <div className=\"loading\">loading....</div>\n                :\n                <div className={\"project_item_container\"}>\n                    <ContentContainer>\n                        <div className={\"project_title_container\"}>\n                            <h2>{project.title}</h2>\n                        </div>\n                        <UsersModal projectId={project.id} participants={project.participants}/>\n                        <MailModal projectId={project.id}/>\n                    </ContentContainer>\n                    <div className={\"scrum_table_container\"}>\n                        <ScrumTable key={project.table.id}\n                                    table={project.table}\n                                    addNewColumn={addNewColumn}\n                                    addNewTask={addNewTask}\n                                    setTaskCount={setTaskCount}\n                                    tasksDistributionInStatuses={getTaskChartData}\n                                    countBusinessValue={getBusinessValueChartData}\n\n                        />\n                    </div>\n                    <div className=\"chart_container\">\n                        <CustomPieChart data={taskCount}\n                                        visualMark={\"percentage\"}\n                                        label=\"Sprint progress by user story\"/>\n                        <CustomPieChart data={businessValueCount}\n                                        visualMark={\"value\"}\n                                        label=\"Sprint progress by value distribution\"/>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}