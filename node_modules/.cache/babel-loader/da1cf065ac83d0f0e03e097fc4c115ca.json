{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst SPACES_RE = /^[ \\t]+$/;\n\nclass Buffer {\n  constructor(map) {\n    this._map = null;\n    this._buf = [];\n    this._last = \"\";\n    this._queue = [];\n    this._position = {\n      line: 1,\n      column: 0\n    };\n    this._sourcePosition = {\n      identifierName: null,\n      line: null,\n      column: null,\n      filename: null\n    };\n    this._disallowedPop = null;\n    this._map = map;\n  }\n\n  get() {\n    this._flush();\n\n    const map = this._map;\n    const result = {\n      code: this._buf.join(\"\").trimRight(),\n      map: null,\n      rawMappings: map && map.getRawMappings()\n    };\n\n    if (map) {\n      Object.defineProperty(result, \"map\", {\n        configurable: true,\n        enumerable: true,\n\n        get() {\n          return this.map = map.get();\n        },\n\n        set(value) {\n          Object.defineProperty(this, \"map\", {\n            value,\n            writable: true\n          });\n        }\n\n      });\n    }\n\n    return result;\n  }\n\n  append(str) {\n    this._flush();\n\n    const {\n      line,\n      column,\n      filename,\n      identifierName,\n      force\n    } = this._sourcePosition;\n\n    this._append(str, line, column, identifierName, filename, force);\n  }\n\n  queue(str) {\n    if (str === \"\\n\") {\n      while (this._queue.length > 0 && SPACES_RE.test(this._queue[0][0])) {\n        this._queue.shift();\n      }\n    }\n\n    const {\n      line,\n      column,\n      filename,\n      identifierName,\n      force\n    } = this._sourcePosition;\n\n    this._queue.unshift([str, line, column, identifierName, filename, force]);\n  }\n\n  _flush() {\n    let item;\n\n    while (item = this._queue.pop()) this._append(...item);\n  }\n\n  _append(str, line, column, identifierName, filename, force) {\n    if (this._map && str[0] !== \"\\n\") {\n      this._map.mark(this._position.line, this._position.column, line, column, identifierName, filename, force);\n    }\n\n    this._buf.push(str);\n\n    this._last = str[str.length - 1];\n\n    for (let i = 0; i < str.length; i++) {\n      if (str[i] === \"\\n\") {\n        this._position.line++;\n        this._position.column = 0;\n      } else {\n        this._position.column++;\n      }\n    }\n  }\n\n  removeTrailingNewline() {\n    if (this._queue.length > 0 && this._queue[0][0] === \"\\n\") {\n      this._queue.shift();\n    }\n  }\n\n  removeLastSemicolon() {\n    if (this._queue.length > 0 && this._queue[0][0] === \";\") {\n      this._queue.shift();\n    }\n  }\n\n  endsWith(suffix) {\n    if (suffix.length === 1) {\n      let last;\n\n      if (this._queue.length > 0) {\n        const str = this._queue[0][0];\n        last = str[str.length - 1];\n      } else {\n        last = this._last;\n      }\n\n      return last === suffix;\n    }\n\n    const end = this._last + this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    if (suffix.length <= end.length) {\n      return end.slice(-suffix.length) === suffix;\n    }\n\n    return false;\n  }\n\n  hasContent() {\n    return this._queue.length > 0 || !!this._last;\n  }\n\n  exactSource(loc, cb) {\n    this.source(\"start\", loc, true);\n    cb();\n    this.source(\"end\", loc);\n\n    this._disallowPop(\"start\", loc);\n  }\n\n  source(prop, loc, force) {\n    if (prop && !loc) return;\n\n    this._normalizePosition(prop, loc, this._sourcePosition, force);\n  }\n\n  withSource(prop, loc, cb) {\n    if (!this._map) return cb();\n    const originalLine = this._sourcePosition.line;\n    const originalColumn = this._sourcePosition.column;\n    const originalFilename = this._sourcePosition.filename;\n    const originalIdentifierName = this._sourcePosition.identifierName;\n    this.source(prop, loc);\n    cb();\n\n    if ((!this._sourcePosition.force || this._sourcePosition.line !== originalLine || this._sourcePosition.column !== originalColumn || this._sourcePosition.filename !== originalFilename) && (!this._disallowedPop || this._disallowedPop.line !== originalLine || this._disallowedPop.column !== originalColumn || this._disallowedPop.filename !== originalFilename)) {\n      this._sourcePosition.line = originalLine;\n      this._sourcePosition.column = originalColumn;\n      this._sourcePosition.filename = originalFilename;\n      this._sourcePosition.identifierName = originalIdentifierName;\n      this._sourcePosition.force = false;\n      this._disallowedPop = null;\n    }\n  }\n\n  _disallowPop(prop, loc) {\n    if (prop && !loc) return;\n    this._disallowedPop = this._normalizePosition(prop, loc);\n  }\n\n  _normalizePosition(prop, loc, targetObj, force) {\n    const pos = loc ? loc[prop] : null;\n\n    if (targetObj === undefined) {\n      targetObj = {\n        identifierName: null,\n        line: null,\n        column: null,\n        filename: null,\n        force: false\n      };\n    }\n\n    const origLine = targetObj.line;\n    const origColumn = targetObj.column;\n    const origFilename = targetObj.filename;\n    targetObj.identifierName = prop === \"start\" && loc && loc.identifierName || null;\n    targetObj.line = pos ? pos.line : null;\n    targetObj.column = pos ? pos.column : null;\n    targetObj.filename = loc && loc.filename || null;\n\n    if (force || targetObj.line !== origLine || targetObj.column !== origColumn || targetObj.filename !== origFilename) {\n      targetObj.force = force;\n    }\n\n    return targetObj;\n  }\n\n  getCurrentColumn() {\n    const extra = this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    const lastIndex = extra.lastIndexOf(\"\\n\");\n    return lastIndex === -1 ? this._position.column + extra.length : extra.length - 1 - lastIndex;\n  }\n\n  getCurrentLine() {\n    const extra = this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    let count = 0;\n\n    for (let i = 0; i < extra.length; i++) {\n      if (extra[i] === \"\\n\") count++;\n    }\n\n    return this._position.line + count;\n  }\n\n}\n\nexports.default = Buffer;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/generator/lib/buffer.js"],"names":["Object","defineProperty","exports","value","default","SPACES_RE","Buffer","constructor","map","_map","_buf","_last","_queue","_position","line","column","_sourcePosition","identifierName","filename","_disallowedPop","get","_flush","result","code","join","trimRight","rawMappings","getRawMappings","configurable","enumerable","set","writable","append","str","force","_append","queue","length","test","shift","unshift","item","pop","mark","push","i","removeTrailingNewline","removeLastSemicolon","endsWith","suffix","last","end","reduce","acc","slice","hasContent","exactSource","loc","cb","source","_disallowPop","prop","_normalizePosition","withSource","originalLine","originalColumn","originalFilename","originalIdentifierName","targetObj","pos","undefined","origLine","origColumn","origFilename","getCurrentColumn","extra","lastIndex","lastIndexOf","getCurrentLine","count"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst SPACES_RE = /^[ \\t]+$/;\n\nclass Buffer {\n  constructor(map) {\n    this._map = null;\n    this._buf = [];\n    this._last = \"\";\n    this._queue = [];\n    this._position = {\n      line: 1,\n      column: 0\n    };\n    this._sourcePosition = {\n      identifierName: null,\n      line: null,\n      column: null,\n      filename: null\n    };\n    this._disallowedPop = null;\n    this._map = map;\n  }\n\n  get() {\n    this._flush();\n\n    const map = this._map;\n    const result = {\n      code: this._buf.join(\"\").trimRight(),\n      map: null,\n      rawMappings: map && map.getRawMappings()\n    };\n\n    if (map) {\n      Object.defineProperty(result, \"map\", {\n        configurable: true,\n        enumerable: true,\n\n        get() {\n          return this.map = map.get();\n        },\n\n        set(value) {\n          Object.defineProperty(this, \"map\", {\n            value,\n            writable: true\n          });\n        }\n\n      });\n    }\n\n    return result;\n  }\n\n  append(str) {\n    this._flush();\n\n    const {\n      line,\n      column,\n      filename,\n      identifierName,\n      force\n    } = this._sourcePosition;\n\n    this._append(str, line, column, identifierName, filename, force);\n  }\n\n  queue(str) {\n    if (str === \"\\n\") {\n      while (this._queue.length > 0 && SPACES_RE.test(this._queue[0][0])) {\n        this._queue.shift();\n      }\n    }\n\n    const {\n      line,\n      column,\n      filename,\n      identifierName,\n      force\n    } = this._sourcePosition;\n\n    this._queue.unshift([str, line, column, identifierName, filename, force]);\n  }\n\n  _flush() {\n    let item;\n\n    while (item = this._queue.pop()) this._append(...item);\n  }\n\n  _append(str, line, column, identifierName, filename, force) {\n    if (this._map && str[0] !== \"\\n\") {\n      this._map.mark(this._position.line, this._position.column, line, column, identifierName, filename, force);\n    }\n\n    this._buf.push(str);\n\n    this._last = str[str.length - 1];\n\n    for (let i = 0; i < str.length; i++) {\n      if (str[i] === \"\\n\") {\n        this._position.line++;\n        this._position.column = 0;\n      } else {\n        this._position.column++;\n      }\n    }\n  }\n\n  removeTrailingNewline() {\n    if (this._queue.length > 0 && this._queue[0][0] === \"\\n\") {\n      this._queue.shift();\n    }\n  }\n\n  removeLastSemicolon() {\n    if (this._queue.length > 0 && this._queue[0][0] === \";\") {\n      this._queue.shift();\n    }\n  }\n\n  endsWith(suffix) {\n    if (suffix.length === 1) {\n      let last;\n\n      if (this._queue.length > 0) {\n        const str = this._queue[0][0];\n        last = str[str.length - 1];\n      } else {\n        last = this._last;\n      }\n\n      return last === suffix;\n    }\n\n    const end = this._last + this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    if (suffix.length <= end.length) {\n      return end.slice(-suffix.length) === suffix;\n    }\n\n    return false;\n  }\n\n  hasContent() {\n    return this._queue.length > 0 || !!this._last;\n  }\n\n  exactSource(loc, cb) {\n    this.source(\"start\", loc, true);\n    cb();\n    this.source(\"end\", loc);\n\n    this._disallowPop(\"start\", loc);\n  }\n\n  source(prop, loc, force) {\n    if (prop && !loc) return;\n\n    this._normalizePosition(prop, loc, this._sourcePosition, force);\n  }\n\n  withSource(prop, loc, cb) {\n    if (!this._map) return cb();\n    const originalLine = this._sourcePosition.line;\n    const originalColumn = this._sourcePosition.column;\n    const originalFilename = this._sourcePosition.filename;\n    const originalIdentifierName = this._sourcePosition.identifierName;\n    this.source(prop, loc);\n    cb();\n\n    if ((!this._sourcePosition.force || this._sourcePosition.line !== originalLine || this._sourcePosition.column !== originalColumn || this._sourcePosition.filename !== originalFilename) && (!this._disallowedPop || this._disallowedPop.line !== originalLine || this._disallowedPop.column !== originalColumn || this._disallowedPop.filename !== originalFilename)) {\n      this._sourcePosition.line = originalLine;\n      this._sourcePosition.column = originalColumn;\n      this._sourcePosition.filename = originalFilename;\n      this._sourcePosition.identifierName = originalIdentifierName;\n      this._sourcePosition.force = false;\n      this._disallowedPop = null;\n    }\n  }\n\n  _disallowPop(prop, loc) {\n    if (prop && !loc) return;\n    this._disallowedPop = this._normalizePosition(prop, loc);\n  }\n\n  _normalizePosition(prop, loc, targetObj, force) {\n    const pos = loc ? loc[prop] : null;\n\n    if (targetObj === undefined) {\n      targetObj = {\n        identifierName: null,\n        line: null,\n        column: null,\n        filename: null,\n        force: false\n      };\n    }\n\n    const origLine = targetObj.line;\n    const origColumn = targetObj.column;\n    const origFilename = targetObj.filename;\n    targetObj.identifierName = prop === \"start\" && loc && loc.identifierName || null;\n    targetObj.line = pos ? pos.line : null;\n    targetObj.column = pos ? pos.column : null;\n    targetObj.filename = loc && loc.filename || null;\n\n    if (force || targetObj.line !== origLine || targetObj.column !== origColumn || targetObj.filename !== origFilename) {\n      targetObj.force = force;\n    }\n\n    return targetObj;\n  }\n\n  getCurrentColumn() {\n    const extra = this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    const lastIndex = extra.lastIndexOf(\"\\n\");\n    return lastIndex === -1 ? this._position.column + extra.length : extra.length - 1 - lastIndex;\n  }\n\n  getCurrentLine() {\n    const extra = this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    let count = 0;\n\n    for (let i = 0; i < extra.length; i++) {\n      if (extra[i] === \"\\n\") count++;\n    }\n\n    return this._position.line + count;\n  }\n\n}\n\nexports.default = Buffer;"]},"metadata":{},"sourceType":"script"}