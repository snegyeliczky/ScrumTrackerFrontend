{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/contexts/ProjectContext.js\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const ProjectContext = createContext();\nexport const ProjectProvider = props => {\n  const [projects, setProjects] = useState([]);\n\n  const getProjects = async () => {\n    let response = await axios.get(\"http://localhost:8080/project/getmyprojects\");\n    setProjects(response.data);\n  };\n\n  return /*#__PURE__*/React.createElement(ProjectContext.Provider, {\n    value: {\n      getProjects,\n      projects,\n      setProjects\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/contexts/ProjectContext.js"],"names":["React","useState","createContext","useEffect","axios","ProjectContext","ProjectProvider","props","projects","setProjects","getProjects","response","get","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,SAAxC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGH,aAAa,EAApC;AAEP,OAAO,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAEpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMS,WAAW,GAAG,YAAY;AAC5B,QAAIC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,6CAAV,CAArB;AACAH,IAAAA,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX;AACH,GAHD;;AAOA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AAACH,MAAAA,WAAD;AAAcF,MAAAA,QAAd;AAAuBC,MAAAA;AAAvB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKF,KAAK,CAACO,QAHX,CADJ;AAOH,CAlBM","sourcesContent":["import React, {useState, createContext, useEffect} from \"react\";\nimport axios from \"axios\";\n\nexport const ProjectContext = createContext();\n\nexport const ProjectProvider = props => {\n\n    const [projects, setProjects] = useState([]);\n\n    const getProjects = async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getmyprojects\");\n        setProjects(response.data);\n    };\n\n\n\n    return (\n        <ProjectContext.Provider\n            value={{getProjects, projects,setProjects}}\n        >\n            {props.children}\n        </ProjectContext.Provider>\n    )\n};\n\n"]},"metadata":{},"sourceType":"module"}