{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/TaskModal.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, ContentContainer, Input } from \"../Assets/StyledComps/styled\";\nimport TaskCalls from \"../Services/TaskCalls\";\nimport Select from \"antd/es/select\";\n\nconst TaskModal = ({\n  task,\n  setTask,\n  refreshStatusesFromBackend,\n  usersOnProject\n}) => {\n  const {\n    Option\n  } = Select;\n  const priorityList = Array.from({\n    length: 10\n  }, (k, v) => v + 1);\n  const [visible, setVisible] = useState(false);\n  const [priorityRef, setPriorityRef] = useState(task.priority);\n  const descriptionRef = useRef(task.description);\n  const titleRef = useRef(task.title);\n  const positionRef = useRef(task.position);\n  console.log(usersOnProject);\n\n  const handleEdit = () => {\n    uploadChanges();\n  };\n\n  async function uploadChanges() {\n    let editedTask = {\n      id: null,\n      author: null,\n      priority: task.priority == priorityRef ? null : priorityRef,\n      description: task.description == descriptionRef.current.value && task.description === null ? null : descriptionRef.current.value,\n      title: task.title == titleRef.current.value ? null : titleRef.current.value,\n      position: task.position == positionRef.current.value ? null : positionRef.current.value\n    };\n    let axiosResponse = await TaskCalls.uploadChanges(task.id, editedTask);\n    setTask(axiosResponse);\n    refreshStatusesFromBackend();\n  }\n\n  function handleOk() {\n    setVisible(false);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormOutlined, {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Edit Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"text_input title\",\n    placeholder: \"Story Title\",\n    defaultValue: task.title,\n    ref: titleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"textArea\", {\n    className: \"text_input userStory\",\n    placeholder: \"user story\",\n    ref: descriptionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, task.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Priority: \"), /*#__PURE__*/React.createElement(Select, {\n    className: \"priority\",\n    defaultValue: task.priority,\n    onChange: value => {\n      setPriorityRef(value);\n    },\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, priorityList.map(num => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 44\n      }\n    }, num);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Save\"))))));\n};\n\nexport default TaskModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/TaskModal.js"],"names":["React","useEffect","useRef","useState","Modal","Button","FormOutlined","AdderComponent","ContentContainer","Input","TaskCalls","Select","TaskModal","task","setTask","refreshStatusesFromBackend","usersOnProject","Option","priorityList","Array","from","length","k","v","visible","setVisible","priorityRef","setPriorityRef","priority","descriptionRef","description","titleRef","title","positionRef","position","console","log","handleEdit","uploadChanges","editedTask","id","author","current","value","axiosResponse","handleOk","handleCancel","showModal","map","num"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {Modal, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../Assets/StyledComps/styled\";\nimport TaskCalls from \"../Services/TaskCalls\";\nimport Select from \"antd/es/select\";\n\n\nconst TaskModal = ({task, setTask, refreshStatusesFromBackend, usersOnProject}) => {\n\n    const {Option} = Select;\n    const priorityList = Array.from({length: 10}, (k, v) => v + 1);\n\n    const [visible, setVisible] = useState(false);\n    const [priorityRef,setPriorityRef]= useState(task.priority);\n    const descriptionRef = useRef(task.description);\n    const titleRef = useRef(task.title);\n    const positionRef = useRef(task.position);\n\n    console.log(usersOnProject);\n\n    const handleEdit = () => {\n        uploadChanges();\n    };\n\n    async function uploadChanges() {\n        let editedTask = {\n            id: null,\n            author: null,\n            priority: task.priority == priorityRef ? null : priorityRef,\n            description: task.description == descriptionRef.current.value && task.description === null ? null : descriptionRef.current.value,\n            title: task.title == titleRef.current.value ? null : titleRef.current.value,\n            position: task.position == positionRef.current.value ? null : positionRef.current.value\n        };\n        let axiosResponse = await TaskCalls.uploadChanges(task.id, editedTask);\n        setTask(axiosResponse);\n        refreshStatusesFromBackend();\n    }\n\n\n    function handleOk() {\n        setVisible(false);\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true)\n    }\n\n    return (\n        <div>\n            <FormOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n                footer={null}\n            >\n                <h2>Edit Task</h2>\n                <div className={\"task_modal\"}>\n                    <div className={\"text_modal\"}>\n                        <label>Title: </label>\n                        <input\n                            className={\"text_input title\"}\n                            placeholder={\"Story Title\"}\n                            defaultValue={task.title}\n                            ref={titleRef}/>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <div className={\"text_modal\"}>\n                        <label>Description: </label>\n                        <textArea\n                            className={\"text_input userStory\"}\n                            placeholder={\"user story\"}\n                            ref={descriptionRef}>\n                            {task.description}\n                        </textArea>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                <ContentContainer>\n                    <AdderComponent>\n                        <label>Priority: </label>\n                        <Select\n                            className={\"priority\"}\n                            defaultValue={task.priority}\n                            onChange={(value) => {\n                                setPriorityRef(value);\n                                }\n                            }\n                            type=\"number\"\n                        >\n                            {\n                                priorityList.map((num) => {\n                                    return <Option value={num}>{num}</Option>\n                                })\n                            }\n                        </Select>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </AdderComponent>\n                </ContentContainer>\n                </div>\n\n            </Modal>\n\n\n        </div>\n    );\n};\n\nexport default TaskModal;"]},"metadata":{},"sourceType":"module"}