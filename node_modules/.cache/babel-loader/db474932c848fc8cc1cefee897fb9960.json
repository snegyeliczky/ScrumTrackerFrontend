{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/TaskModal.js\";\nimport React, { useRef, useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, Input } from \"../styledComps/styled\";\n\nconst TaskModal = ({\n  task,\n  setTask\n}) => {\n  const [visible, setVisible] = useState(false);\n  const BusinessValueRef = useRef(task.businessValue);\n  const DescriptionRef = useRef(task.description);\n  const TitleRef = useRef(task.title);\n  const PositionRef = useRef(task.position);\n\n  function editTask(BusinessValue, Description, Title, Position) {\n    let newTask = { ...task\n    };\n    newTask.businessValue = BusinessValue;\n    newTask.description = Description;\n    newTask.title = Title;\n    newTask.position = Position;\n    return newTask;\n  }\n\n  function handleOk() {\n    let editedTask = editTask(BusinessValueRef, DescriptionRef, TitleRef, PositionRef);\n    console.log(task);\n    console.log(editedTask);\n  }\n\n  function handleCancel() {\n    console.log(task);\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormOutlined, {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Edit Task\"), /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Business value: \"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Business Value\",\n    defaultValue: task.businessValue,\n    ref: BusinessValueRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Description\",\n    defaultValue: task.description,\n    ref: DescriptionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Title: \"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Title\",\n    defaultValue: task.title,\n    ref: TitleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Position: \"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Position\",\n    defaultValue: task.position,\n    ref: PositionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default TaskModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/TaskModal.js"],"names":["React","useRef","useState","Modal","Button","FormOutlined","AdderComponent","Input","TaskModal","task","setTask","visible","setVisible","BusinessValueRef","businessValue","DescriptionRef","description","TitleRef","title","PositionRef","position","editTask","BusinessValue","Description","Title","Position","newTask","handleOk","editedTask","console","log","handleCancel","showModal"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Modal, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, Input} from \"../styledComps/styled\";\n\n\nconst TaskModal = ({task, setTask}) => {\n\n    const [visible, setVisible] = useState(false);\n\n    const BusinessValueRef = useRef(task.businessValue);\n    const DescriptionRef = useRef(task.description);\n    const TitleRef = useRef(task.title);\n    const PositionRef = useRef(task.position);\n\n    function editTask(BusinessValue,Description,Title,Position) {\n        let newTask = {...task};\n        newTask.businessValue = BusinessValue;\n        newTask.description = Description;\n        newTask.title = Title;\n        newTask.position = Position;\n        return newTask;\n\n    }\n\n    function handleOk() {\n        let editedTask = editTask(BusinessValueRef,DescriptionRef,TitleRef,PositionRef);\n        console.log(task)\n        console.log(editedTask);\n\n\n    }\n\n    function handleCancel() {\n        console.log(task);\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true)\n    }\n\n    return (\n        <div>\n            < FormOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n            >\n                <h2>Edit Task</h2>\n                <AdderComponent>\n                    <label>Business value: </label>\n                    <Input placeholder={\"Business Value\"}\n                           defaultValue={task.businessValue}\n                           ref={BusinessValueRef}/>\n                </AdderComponent>\n                <AdderComponent>\n                    <label>Description: </label>\n                    <Input placeholder={\"Description\"}\n                           defaultValue={task.description}\n                           ref={DescriptionRef}/>\n                </AdderComponent>\n                <AdderComponent>\n                    <label>Title: </label>\n                    <Input placeholder={\"Title\"}\n                           defaultValue={task.title}\n                           ref={TitleRef}/>\n                </AdderComponent>\n                <AdderComponent>\n                    <label>Position: </label>\n                    <Input placeholder={\"Position\"}\n                           defaultValue={task.position}\n                           ref={PositionRef}/>\n                </AdderComponent>\n\n            </Modal>\n\n\n        </div>\n    );\n};\n\nexport default TaskModal;"]},"metadata":{},"sourceType":"module"}