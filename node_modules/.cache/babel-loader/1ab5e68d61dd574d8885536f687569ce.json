{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/TaskModal.js\";\nimport React, { useRef, useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, ContentContainer, Input } from \"../styledComps/styled\";\nimport axios from 'axios';\n\nconst TaskModal = ({\n  task,\n  setTask\n}) => {\n  const [visible, setVisible] = useState(false);\n  const businessValueRef = useRef(task.businessValue);\n  const descriptionRef = useRef(task.description);\n  const titleRef = useRef(task.title);\n  const positionRef = useRef(task.position);\n\n  const handleEdit = () => {\n    uploadChanges();\n  };\n\n  async function uploadChanges() {\n    let editedTask = {\n      id: null,\n      author: null,\n      businessValue: task.businessValue == businessValueRef.current.value ? null : businessValueRef.current.value,\n      description: task.description == descriptionRef.current.value && task.description === null ? null : descriptionRef.current.value,\n      title: task.title == titleRef.current.value ? null : titleRef.current.value,\n      position: task.position == positionRef.current.value ? null : positionRef.current.value\n    };\n    let axiosResponse = await axios.put(\"http://localhost:8080/task/edit/\" + task.id, editedTask);\n    setTask(axiosResponse.data);\n  }\n\n  function editTask(businessValue, description, title, position) {\n    let newTask = { ...task\n    };\n    newTask.businessValue = businessValue;\n    newTask.description = description;\n    newTask.title = title;\n    newTask.position = position;\n    return newTask;\n  }\n\n  function handleOk() {\n    let editedTask = editTask(businessValueRef.current.value, descriptionRef.current.value, titleRef.current.value, positionRef.current.value);\n    uploadChanges(editedTask);\n    setTask(editedTask);\n    setVisible(false);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormOutlined, {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Edit Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"text_input title\",\n    placeholder: \"Title\",\n    defaultValue: task.title,\n    ref: titleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"textArea\", {\n    className: \"text_input description\",\n    placeholder: \"Description\",\n    defaultValue: task.description,\n    ref: descriptionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Save\"))), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Business value: \"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Business Value\",\n    defaultValue: task.businessValue,\n    ref: businessValueRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"Position: \"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Position\",\n    defaultValue: task.position,\n    ref: positionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default TaskModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/TaskModal.js"],"names":["React","useRef","useState","Modal","Button","FormOutlined","AdderComponent","ContentContainer","Input","axios","TaskModal","task","setTask","visible","setVisible","businessValueRef","businessValue","descriptionRef","description","titleRef","title","positionRef","position","handleEdit","uploadChanges","editedTask","id","author","current","value","axiosResponse","put","data","editTask","newTask","handleOk","handleCancel","showModal"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,MAA5B;AACA,OAAO,oBAAP;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,EAA0CC,KAA1C,QAAsD,uBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AAEnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMa,gBAAgB,GAAGd,MAAM,CAACU,IAAI,CAACK,aAAN,CAA/B;AACA,QAAMC,cAAc,GAAGhB,MAAM,CAACU,IAAI,CAACO,WAAN,CAA7B;AACA,QAAMC,QAAQ,GAAGlB,MAAM,CAACU,IAAI,CAACS,KAAN,CAAvB;AACA,QAAMC,WAAW,GAAGpB,MAAM,CAACU,IAAI,CAACW,QAAN,CAA1B;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBC,IAAAA,aAAa;AACd,GAFD;;AAIA,iBAAeA,aAAf,GAA+B;AAC3B,QAAIC,UAAU,GAAG;AACbC,MAAAA,EAAE,EAAE,IADS;AAEbC,MAAAA,MAAM,EAAE,IAFK;AAGbX,MAAAA,aAAa,EAAEL,IAAI,CAACK,aAAL,IAAsBD,gBAAgB,CAACa,OAAjB,CAAyBC,KAA/C,GAAuD,IAAvD,GAA8Dd,gBAAgB,CAACa,OAAjB,CAAyBC,KAHzF;AAIbX,MAAAA,WAAW,EAAEP,IAAI,CAACO,WAAL,IAAoBD,cAAc,CAACW,OAAf,CAAuBC,KAA3C,IAAoDlB,IAAI,CAACO,WAAL,KAAqB,IAAzE,GAAgF,IAAhF,GAAuFD,cAAc,CAACW,OAAf,CAAuBC,KAJ9G;AAKbT,MAAAA,KAAK,EAAET,IAAI,CAACS,KAAL,IAAcD,QAAQ,CAACS,OAAT,CAAiBC,KAA/B,GAAuC,IAAvC,GAA8CV,QAAQ,CAACS,OAAT,CAAiBC,KALzD;AAMbP,MAAAA,QAAQ,EAAEX,IAAI,CAACW,QAAL,IAAiBD,WAAW,CAACO,OAAZ,CAAoBC,KAArC,GAA6C,IAA7C,GAAoDR,WAAW,CAACO,OAAZ,CAAoBC;AANrE,KAAjB;AAQA,QAAIC,aAAa,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,qCAAqCpB,IAAI,CAACe,EAApD,EAAwDD,UAAxD,CAA1B;AACAb,IAAAA,OAAO,CAACkB,aAAa,CAACE,IAAf,CAAP;AAEH;;AAED,WAASC,QAAT,CAAkBjB,aAAlB,EAAiCE,WAAjC,EAA8CE,KAA9C,EAAqDE,QAArD,EAA+D;AAC3D,QAAIY,OAAO,GAAG,EAAC,GAAGvB;AAAJ,KAAd;AACAuB,IAAAA,OAAO,CAAClB,aAAR,GAAwBA,aAAxB;AACAkB,IAAAA,OAAO,CAAChB,WAAR,GAAsBA,WAAtB;AACAgB,IAAAA,OAAO,CAACd,KAAR,GAAgBA,KAAhB;AACAc,IAAAA,OAAO,CAACZ,QAAR,GAAmBA,QAAnB;AACA,WAAOY,OAAP;AAEH;;AAED,WAASC,QAAT,GAAoB;AAChB,QAAIV,UAAU,GAAGQ,QAAQ,CAAClB,gBAAgB,CAACa,OAAjB,CAAyBC,KAA1B,EACrBZ,cAAc,CAACW,OAAf,CAAuBC,KADF,EAErBV,QAAQ,CAACS,OAAT,CAAiBC,KAFI,EAGrBR,WAAW,CAACO,OAAZ,CAAoBC,KAHC,CAAzB;AAIAL,IAAAA,aAAa,CAACC,UAAD,CAAb;AACAb,IAAAA,OAAO,CAACa,UAAD,CAAP;AACAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AAGH;;AAED,WAASsB,YAAT,GAAwB;AACpBtB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,WAASuB,SAAT,GAAqB;AACjBvB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEuB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AACI,IAAA,OAAO,EAAExB,OADb;AAEI,IAAA,IAAI,EAAEsB,QAFV;AAGI,IAAA,QAAQ,EAAEC,YAHd;AAII,IAAA,KAAK,EAAE,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,eAOI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACI,IAAA,SAAS,EAAE,kBADf;AAEI,IAAA,WAAW,EAAE,OAFjB;AAGI,IAAA,YAAY,EAAEzB,IAAI,CAACS,KAHvB;AAII,IAAA,GAAG,EAAED,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAOI;AAAK,IAAA,SAAS,EAAC,WAAf;AACK,IAAA,OAAO,EAAEI,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADJ,eAYI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AACI,IAAA,SAAS,EAAE,wBADf;AAEI,IAAA,WAAW,EAAE,aAFjB;AAGI,IAAA,YAAY,EAAEZ,IAAI,CAACO,WAHvB;AAII,IAAA,GAAG,EAAED,cAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAOI;AAAK,IAAA,SAAS,EAAC,WAAf;AACK,IAAA,OAAO,EAAEM,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CAZJ,CAPJ,eA+BI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,gBAApB;AACO,IAAA,YAAY,EAAEZ,IAAI,CAACK,aAD1B;AAEO,IAAA,GAAG,EAAED,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAOI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAE,UAApB;AACO,IAAA,YAAY,EAAEJ,IAAI,CAACW,QAD1B;AAEO,IAAA,GAAG,EAAED,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPJ,CA/BJ,CAFJ,CADJ;AAsDH,CA/GD;;AAiHA,eAAeX,SAAf","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Modal, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../styledComps/styled\";\nimport axios from 'axios';\n\n\nconst TaskModal = ({task, setTask}) => {\n\n    const [visible, setVisible] = useState(false);\n\n    const businessValueRef = useRef(task.businessValue);\n    const descriptionRef = useRef(task.description);\n    const titleRef = useRef(task.title);\n    const positionRef = useRef(task.position);\n\n    const handleEdit = () => {\n      uploadChanges();\n    };\n\n    async function uploadChanges() {\n        let editedTask = {\n            id: null,\n            author: null,\n            businessValue: task.businessValue == businessValueRef.current.value ? null : businessValueRef.current.value,\n            description: task.description == descriptionRef.current.value && task.description === null ? null : descriptionRef.current.value,\n            title: task.title == titleRef.current.value ? null : titleRef.current.value,\n            position: task.position == positionRef.current.value ? null : positionRef.current.value\n        };\n        let axiosResponse = await axios.put(\"http://localhost:8080/task/edit/\" + task.id, editedTask);\n        setTask(axiosResponse.data);\n\n    }\n\n    function editTask(businessValue, description, title, position) {\n        let newTask = {...task};\n        newTask.businessValue = businessValue;\n        newTask.description = description;\n        newTask.title = title;\n        newTask.position = position;\n        return newTask;\n\n    }\n\n    function handleOk() {\n        let editedTask = editTask(businessValueRef.current.value,\n            descriptionRef.current.value,\n            titleRef.current.value,\n            positionRef.current.value);\n        uploadChanges(editedTask);\n        setTask(editedTask);\n        setVisible(false);\n\n\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true)\n    }\n\n    return (\n        <div>\n            <FormOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n            >\n                <h2>Edit Task</h2>\n                <div className={\"task_modal\"}>\n                    <div className={\"text_modal\"}>\n                        <label>Title: </label>\n                        <input\n                            className={\"text_input title\"}\n                            placeholder={\"Title\"}\n                            defaultValue={task.title}\n                            ref={titleRef}/>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <div className={\"text_modal\"}>\n                        <label>Description: </label>\n                        <textArea\n                            className={\"text_input description\"}\n                            placeholder={\"Description\"}\n                            defaultValue={task.description}\n                            ref={descriptionRef}/>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                </div>\n                <ContentContainer>\n                    <AdderComponent>\n                        <label>Business value: </label>\n                        <Input placeholder={\"Business Value\"}\n                               defaultValue={task.businessValue}\n                               ref={businessValueRef}/>\n                    </AdderComponent>\n                    <AdderComponent>\n                        <label>Position: </label>\n                        <Input placeholder={\"Position\"}\n                               defaultValue={task.position}\n                               ref={positionRef}/>\n                    </AdderComponent>\n                </ContentContainer>\n\n            </Modal>\n\n\n        </div>\n    );\n};\n\nexport default TaskModal;"]},"metadata":{},"sourceType":"module"}