{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.minVersion = minVersion;\nexports.getDependencies = getDependencies;\nexports.ensure = ensure;\nexports.default = exports.list = void 0;\n\nvar _traverse = _interopRequireDefault(require(\"@babel/traverse\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _helpers = _interopRequireDefault(require(\"./helpers\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction makePath(path) {\n  const parts = [];\n\n  for (; path.parentPath; path = path.parentPath) {\n    parts.push(path.key);\n    if (path.inList) parts.push(path.listKey);\n  }\n\n  return parts.reverse().join(\".\");\n}\n\nlet fileClass = undefined;\n\nfunction getHelperMetadata(file) {\n  const globals = new Set();\n  const localBindingNames = new Set();\n  const dependencies = new Map();\n  let exportName;\n  let exportPath;\n  const exportBindingAssignments = [];\n  const importPaths = [];\n  const importBindingsReferences = [];\n  const dependencyVisitor = {\n    ImportDeclaration(child) {\n      const name = child.node.source.value;\n\n      if (!_helpers.default[name]) {\n        throw child.buildCodeFrameError(`Unknown helper ${name}`);\n      }\n\n      if (child.get(\"specifiers\").length !== 1 || !child.get(\"specifiers.0\").isImportDefaultSpecifier()) {\n        throw child.buildCodeFrameError(\"Helpers can only import a default value\");\n      }\n\n      const bindingIdentifier = child.node.specifiers[0].local;\n      dependencies.set(bindingIdentifier, name);\n      importPaths.push(makePath(child));\n    },\n\n    ExportDefaultDeclaration(child) {\n      const decl = child.get(\"declaration\");\n\n      if (decl.isFunctionDeclaration()) {\n        if (!decl.node.id) {\n          throw decl.buildCodeFrameError(\"Helpers should give names to their exported func declaration\");\n        }\n\n        exportName = decl.node.id.name;\n      }\n\n      exportPath = makePath(child);\n    },\n\n    ExportAllDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    ExportNamedDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    Statement(child) {\n      if (child.isModuleDeclaration()) return;\n      child.skip();\n    }\n\n  };\n  const referenceVisitor = {\n    Program(path) {\n      const bindings = path.scope.getAllBindings();\n      Object.keys(bindings).forEach(name => {\n        if (name === exportName) return;\n        if (dependencies.has(bindings[name].identifier)) return;\n        localBindingNames.add(name);\n      });\n    },\n\n    ReferencedIdentifier(child) {\n      const name = child.node.name;\n      const binding = child.scope.getBinding(name, true);\n\n      if (!binding) {\n        globals.add(name);\n      } else if (dependencies.has(binding.identifier)) {\n        importBindingsReferences.push(makePath(child));\n      }\n    },\n\n    AssignmentExpression(child) {\n      const left = child.get(\"left\");\n      if (!(exportName in left.getBindingIdentifiers())) return;\n\n      if (!left.isIdentifier()) {\n        throw left.buildCodeFrameError(\"Only simple assignments to exports are allowed in helpers\");\n      }\n\n      const binding = child.scope.getBinding(exportName);\n\n      if (binding && binding.scope.path.isProgram()) {\n        exportBindingAssignments.push(makePath(child));\n      }\n    }\n\n  };\n  (0, _traverse.default)(file.ast, dependencyVisitor, file.scope);\n  (0, _traverse.default)(file.ast, referenceVisitor, file.scope);\n  if (!exportPath) throw new Error(\"Helpers must default-export something.\");\n  exportBindingAssignments.reverse();\n  return {\n    globals: Array.from(globals),\n    localBindingNames: Array.from(localBindingNames),\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  };\n}\n\nfunction permuteHelperAST(file, metadata, id, localBindings, getDependency) {\n  if (localBindings && !id) {\n    throw new Error(\"Unexpected local bindings for module-based helpers.\");\n  }\n\n  if (!id) return;\n  const {\n    localBindingNames,\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  } = metadata;\n  const dependenciesRefs = {};\n  dependencies.forEach((name, id) => {\n    dependenciesRefs[id.name] = typeof getDependency === \"function\" && getDependency(name) || id;\n  });\n  const toRename = {};\n  const bindings = new Set(localBindings || []);\n  localBindingNames.forEach(name => {\n    let newName = name;\n\n    while (bindings.has(newName)) newName = \"_\" + newName;\n\n    if (newName !== name) toRename[name] = newName;\n  });\n\n  if (id.type === \"Identifier\" && exportName !== id.name) {\n    toRename[exportName] = id.name;\n  }\n\n  const visitor = {\n    Program(path) {\n      const exp = path.get(exportPath);\n      const imps = importPaths.map(p => path.get(p));\n      const impsBindingRefs = importBindingsReferences.map(p => path.get(p));\n      const decl = exp.get(\"declaration\");\n\n      if (id.type === \"Identifier\") {\n        if (decl.isFunctionDeclaration()) {\n          exp.replaceWith(decl);\n        } else {\n          exp.replaceWith(t.variableDeclaration(\"var\", [t.variableDeclarator(id, decl.node)]));\n        }\n      } else if (id.type === \"MemberExpression\") {\n        if (decl.isFunctionDeclaration()) {\n          exportBindingAssignments.forEach(assignPath => {\n            const assign = path.get(assignPath);\n            assign.replaceWith(t.assignmentExpression(\"=\", id, assign.node));\n          });\n          exp.replaceWith(decl);\n          path.pushContainer(\"body\", t.expressionStatement(t.assignmentExpression(\"=\", id, t.identifier(exportName))));\n        } else {\n          exp.replaceWith(t.expressionStatement(t.assignmentExpression(\"=\", id, decl.node)));\n        }\n      } else {\n        throw new Error(\"Unexpected helper format.\");\n      }\n\n      Object.keys(toRename).forEach(name => {\n        path.scope.rename(name, toRename[name]);\n      });\n\n      for (const path of imps) path.remove();\n\n      for (const path of impsBindingRefs) {\n        const node = t.cloneNode(dependenciesRefs[path.node.name]);\n        path.replaceWith(node);\n      }\n\n      path.stop();\n    }\n\n  };\n  (0, _traverse.default)(file.ast, visitor, file.scope);\n}\n\nconst helperData = Object.create(null);\n\nfunction loadHelper(name) {\n  if (!helperData[name]) {\n    const helper = _helpers.default[name];\n\n    if (!helper) {\n      throw Object.assign(new ReferenceError(`Unknown helper ${name}`), {\n        code: \"BABEL_HELPER_UNKNOWN\",\n        helper: name\n      });\n    }\n\n    const fn = () => {\n      const file = {\n        ast: t.file(helper.ast())\n      };\n\n      if (fileClass) {\n        return new fileClass({\n          filename: `babel-helper://${name}`\n        }, file);\n      }\n\n      return file;\n    };\n\n    const metadata = getHelperMetadata(fn());\n    helperData[name] = {\n      build(getDependency, id, localBindings) {\n        const file = fn();\n        permuteHelperAST(file, metadata, id, localBindings, getDependency);\n        return {\n          nodes: file.ast.program.body,\n          globals: metadata.globals\n        };\n      },\n\n      minVersion() {\n        return helper.minVersion;\n      },\n\n      dependencies: metadata.dependencies\n    };\n  }\n\n  return helperData[name];\n}\n\nfunction get(name, getDependency, id, localBindings) {\n  return loadHelper(name).build(getDependency, id, localBindings);\n}\n\nfunction minVersion(name) {\n  return loadHelper(name).minVersion();\n}\n\nfunction getDependencies(name) {\n  return Array.from(loadHelper(name).dependencies.values());\n}\n\nfunction ensure(name, newFileClass) {\n  if (!fileClass) {\n    fileClass = newFileClass;\n  }\n\n  loadHelper(name);\n}\n\nconst list = Object.keys(_helpers.default).map(name => name.replace(/^_/, \"\")).filter(name => name !== \"__esModule\");\nexports.list = list;\nvar _default = get;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/helpers/lib/index.js"],"names":["Object","defineProperty","exports","value","get","minVersion","getDependencies","ensure","default","list","_traverse","_interopRequireDefault","require","t","_interopRequireWildcard","_helpers","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","makePath","path","parts","parentPath","push","inList","listKey","reverse","join","fileClass","undefined","getHelperMetadata","file","globals","Set","localBindingNames","dependencies","Map","exportName","exportPath","exportBindingAssignments","importPaths","importBindingsReferences","dependencyVisitor","ImportDeclaration","child","name","node","source","buildCodeFrameError","length","isImportDefaultSpecifier","bindingIdentifier","specifiers","local","ExportDefaultDeclaration","decl","isFunctionDeclaration","id","ExportAllDeclaration","ExportNamedDeclaration","Statement","isModuleDeclaration","skip","referenceVisitor","Program","bindings","scope","getAllBindings","keys","forEach","identifier","add","ReferencedIdentifier","binding","getBinding","AssignmentExpression","left","getBindingIdentifiers","isIdentifier","isProgram","ast","Error","Array","from","permuteHelperAST","metadata","localBindings","getDependency","dependenciesRefs","toRename","newName","type","visitor","exp","imps","map","p","impsBindingRefs","replaceWith","variableDeclaration","variableDeclarator","assignPath","assign","assignmentExpression","pushContainer","expressionStatement","rename","remove","cloneNode","stop","helperData","create","loadHelper","helper","ReferenceError","code","fn","filename","build","nodes","program","body","values","newFileClass","replace","filter","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.minVersion = minVersion;\nexports.getDependencies = getDependencies;\nexports.ensure = ensure;\nexports.default = exports.list = void 0;\n\nvar _traverse = _interopRequireDefault(require(\"@babel/traverse\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _helpers = _interopRequireDefault(require(\"./helpers\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction makePath(path) {\n  const parts = [];\n\n  for (; path.parentPath; path = path.parentPath) {\n    parts.push(path.key);\n    if (path.inList) parts.push(path.listKey);\n  }\n\n  return parts.reverse().join(\".\");\n}\n\nlet fileClass = undefined;\n\nfunction getHelperMetadata(file) {\n  const globals = new Set();\n  const localBindingNames = new Set();\n  const dependencies = new Map();\n  let exportName;\n  let exportPath;\n  const exportBindingAssignments = [];\n  const importPaths = [];\n  const importBindingsReferences = [];\n  const dependencyVisitor = {\n    ImportDeclaration(child) {\n      const name = child.node.source.value;\n\n      if (!_helpers.default[name]) {\n        throw child.buildCodeFrameError(`Unknown helper ${name}`);\n      }\n\n      if (child.get(\"specifiers\").length !== 1 || !child.get(\"specifiers.0\").isImportDefaultSpecifier()) {\n        throw child.buildCodeFrameError(\"Helpers can only import a default value\");\n      }\n\n      const bindingIdentifier = child.node.specifiers[0].local;\n      dependencies.set(bindingIdentifier, name);\n      importPaths.push(makePath(child));\n    },\n\n    ExportDefaultDeclaration(child) {\n      const decl = child.get(\"declaration\");\n\n      if (decl.isFunctionDeclaration()) {\n        if (!decl.node.id) {\n          throw decl.buildCodeFrameError(\"Helpers should give names to their exported func declaration\");\n        }\n\n        exportName = decl.node.id.name;\n      }\n\n      exportPath = makePath(child);\n    },\n\n    ExportAllDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    ExportNamedDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    Statement(child) {\n      if (child.isModuleDeclaration()) return;\n      child.skip();\n    }\n\n  };\n  const referenceVisitor = {\n    Program(path) {\n      const bindings = path.scope.getAllBindings();\n      Object.keys(bindings).forEach(name => {\n        if (name === exportName) return;\n        if (dependencies.has(bindings[name].identifier)) return;\n        localBindingNames.add(name);\n      });\n    },\n\n    ReferencedIdentifier(child) {\n      const name = child.node.name;\n      const binding = child.scope.getBinding(name, true);\n\n      if (!binding) {\n        globals.add(name);\n      } else if (dependencies.has(binding.identifier)) {\n        importBindingsReferences.push(makePath(child));\n      }\n    },\n\n    AssignmentExpression(child) {\n      const left = child.get(\"left\");\n      if (!(exportName in left.getBindingIdentifiers())) return;\n\n      if (!left.isIdentifier()) {\n        throw left.buildCodeFrameError(\"Only simple assignments to exports are allowed in helpers\");\n      }\n\n      const binding = child.scope.getBinding(exportName);\n\n      if (binding && binding.scope.path.isProgram()) {\n        exportBindingAssignments.push(makePath(child));\n      }\n    }\n\n  };\n  (0, _traverse.default)(file.ast, dependencyVisitor, file.scope);\n  (0, _traverse.default)(file.ast, referenceVisitor, file.scope);\n  if (!exportPath) throw new Error(\"Helpers must default-export something.\");\n  exportBindingAssignments.reverse();\n  return {\n    globals: Array.from(globals),\n    localBindingNames: Array.from(localBindingNames),\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  };\n}\n\nfunction permuteHelperAST(file, metadata, id, localBindings, getDependency) {\n  if (localBindings && !id) {\n    throw new Error(\"Unexpected local bindings for module-based helpers.\");\n  }\n\n  if (!id) return;\n  const {\n    localBindingNames,\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  } = metadata;\n  const dependenciesRefs = {};\n  dependencies.forEach((name, id) => {\n    dependenciesRefs[id.name] = typeof getDependency === \"function\" && getDependency(name) || id;\n  });\n  const toRename = {};\n  const bindings = new Set(localBindings || []);\n  localBindingNames.forEach(name => {\n    let newName = name;\n\n    while (bindings.has(newName)) newName = \"_\" + newName;\n\n    if (newName !== name) toRename[name] = newName;\n  });\n\n  if (id.type === \"Identifier\" && exportName !== id.name) {\n    toRename[exportName] = id.name;\n  }\n\n  const visitor = {\n    Program(path) {\n      const exp = path.get(exportPath);\n      const imps = importPaths.map(p => path.get(p));\n      const impsBindingRefs = importBindingsReferences.map(p => path.get(p));\n      const decl = exp.get(\"declaration\");\n\n      if (id.type === \"Identifier\") {\n        if (decl.isFunctionDeclaration()) {\n          exp.replaceWith(decl);\n        } else {\n          exp.replaceWith(t.variableDeclaration(\"var\", [t.variableDeclarator(id, decl.node)]));\n        }\n      } else if (id.type === \"MemberExpression\") {\n        if (decl.isFunctionDeclaration()) {\n          exportBindingAssignments.forEach(assignPath => {\n            const assign = path.get(assignPath);\n            assign.replaceWith(t.assignmentExpression(\"=\", id, assign.node));\n          });\n          exp.replaceWith(decl);\n          path.pushContainer(\"body\", t.expressionStatement(t.assignmentExpression(\"=\", id, t.identifier(exportName))));\n        } else {\n          exp.replaceWith(t.expressionStatement(t.assignmentExpression(\"=\", id, decl.node)));\n        }\n      } else {\n        throw new Error(\"Unexpected helper format.\");\n      }\n\n      Object.keys(toRename).forEach(name => {\n        path.scope.rename(name, toRename[name]);\n      });\n\n      for (const path of imps) path.remove();\n\n      for (const path of impsBindingRefs) {\n        const node = t.cloneNode(dependenciesRefs[path.node.name]);\n        path.replaceWith(node);\n      }\n\n      path.stop();\n    }\n\n  };\n  (0, _traverse.default)(file.ast, visitor, file.scope);\n}\n\nconst helperData = Object.create(null);\n\nfunction loadHelper(name) {\n  if (!helperData[name]) {\n    const helper = _helpers.default[name];\n\n    if (!helper) {\n      throw Object.assign(new ReferenceError(`Unknown helper ${name}`), {\n        code: \"BABEL_HELPER_UNKNOWN\",\n        helper: name\n      });\n    }\n\n    const fn = () => {\n      const file = {\n        ast: t.file(helper.ast())\n      };\n\n      if (fileClass) {\n        return new fileClass({\n          filename: `babel-helper://${name}`\n        }, file);\n      }\n\n      return file;\n    };\n\n    const metadata = getHelperMetadata(fn());\n    helperData[name] = {\n      build(getDependency, id, localBindings) {\n        const file = fn();\n        permuteHelperAST(file, metadata, id, localBindings, getDependency);\n        return {\n          nodes: file.ast.program.body,\n          globals: metadata.globals\n        };\n      },\n\n      minVersion() {\n        return helper.minVersion;\n      },\n\n      dependencies: metadata.dependencies\n    };\n  }\n\n  return helperData[name];\n}\n\nfunction get(name, getDependency, id, localBindings) {\n  return loadHelper(name).build(getDependency, id, localBindings);\n}\n\nfunction minVersion(name) {\n  return loadHelper(name).minVersion();\n}\n\nfunction getDependencies(name) {\n  return Array.from(loadHelper(name).dependencies.values());\n}\n\nfunction ensure(name, newFileClass) {\n  if (!fileClass) {\n    fileClass = newFileClass;\n  }\n\n  loadHelper(name);\n}\n\nconst list = Object.keys(_helpers.default).map(name => name.replace(/^_/, \"\")).filter(name => name !== \"__esModule\");\nexports.list = list;\nvar _default = get;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}