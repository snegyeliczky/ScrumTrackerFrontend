{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/Task.js\";\nimport React, { useState, useRef, useContext } from 'react';\nimport Column from \"./Column\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { ContentContainer } from \"../styledComps/styled\";\nimport TaskModal from \"./TaskModal\";\n\nconst Task = ({\n  task,\n  statusId,\n  onDragEnd,\n  dragItem,\n  handleDeleteTask\n}) => {\n  const [thisTask, setTask] = useState(task);\n  const [dragging, setDragging] = useState(false);\n\n  const handleDrag = e => {\n    let dragItemParams = {\n      statusId: statusId,\n      taskObject: task\n    };\n    dragItem.current = dragItemParams;\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const draggingStyle = currTaskId => {\n    return currTaskId === dragItem.current.taskObject.id ? \"dragged task_card\" : \"task_card\";\n  };\n\n  const handleDragEnd = e => {\n    onDragEnd(task);\n    setDragging(false);\n    dragItem.current = null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: dragging ? draggingStyle(task.id) : \"task_card\",\n    draggable: true,\n    \"aria-dropeffect\": \"none\",\n    onDragStart: event => handleDrag(event),\n    onDragEnd: e => handleDragEnd(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status_tool_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n    onClick: e => handleDeleteTask(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TaskModal, {\n    task: thisTask,\n    setTask: setTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, thisTask.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"businessValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Value: \", thisTask.businessValue));\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/Task.js"],"names":["React","useState","useRef","useContext","Column","DeleteOutlined","ContentContainer","TaskModal","Task","task","statusId","onDragEnd","dragItem","handleDeleteTask","thisTask","setTask","dragging","setDragging","handleDrag","e","dragItemParams","taskObject","current","setTimeout","draggingStyle","currTaskId","id","handleDragEnd","event","title","businessValue"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,gBAAR,QAA+B,uBAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,SAAjB;AAA4BC,EAAAA,QAA5B;AAAsCC,EAAAA;AAAtC,CAAD,KAA6D;AAEtE,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBd,QAAQ,CAACQ,IAAD,CAApC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMiB,UAAU,GAAIC,CAAD,IAAO;AACtB,QAAIC,cAAc,GAAG;AACjBV,MAAAA,QAAQ,EAAEA,QADO;AAEjBW,MAAAA,UAAU,EAAEZ;AAFK,KAArB;AAIAG,IAAAA,QAAQ,CAACU,OAAT,GAAmBF,cAAnB;AACAG,IAAAA,UAAU,CAAC,MAAM;AACbN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAFS,EAEP,CAFO,CAAV;AAGH,GATD;;AAWA,QAAMO,aAAa,GAAIC,UAAD,IAAgB;AAClC,WAAOA,UAAU,KAAKb,QAAQ,CAACU,OAAT,CAAiBD,UAAjB,CAA4BK,EAA3C,GAAgD,mBAAhD,GAAsE,WAA7E;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIR,CAAD,IAAO;AACzBR,IAAAA,SAAS,CAACF,IAAD,CAAT;AACAQ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAL,IAAAA,QAAQ,CAACU,OAAT,GAAmB,IAAnB;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEN,QAAQ,GAAGQ,aAAa,CAACf,IAAI,CAACiB,EAAN,CAAhB,GAA4B,WAApD;AACK,IAAA,SAAS,EAAE,IADhB;AAEK,uBAAiB,MAFtB;AAGK,IAAA,WAAW,EAAGE,KAAD,IAAYV,UAAU,CAACU,KAAD,CAHxC;AAIK,IAAA,SAAS,EAAGT,CAAD,IAAOQ,aAAa,CAACR,CAAD,CAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAK,IAAA,SAAS,EAAE,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAGA,CAAD,IAAON,gBAAgB,CAACJ,IAAI,CAACiB,EAAN,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEZ,QAAjB;AAA2B,IAAA,OAAO,EAAEC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CANJ,eAYI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCD,QAAQ,CAACe,KAAzC,CAZJ,eAaI;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAyCf,QAAQ,CAACgB,aAAlD,CAbJ,CADJ;AAiBH,CA3CD;;AA6CA,eAAetB,IAAf","sourcesContent":["import React, {useState, useRef, useContext} from 'react';\nimport Column from \"./Column\";\nimport {DeleteOutlined} from \"@ant-design/icons\";\nimport {ContentContainer} from \"../styledComps/styled\";\nimport TaskModal from \"./TaskModal\";\n\n\nconst Task = ({task, statusId, onDragEnd, dragItem, handleDeleteTask}) => {\n\n    const [thisTask, setTask] = useState(task);\n    const [dragging, setDragging] = useState(false);\n\n    const handleDrag = (e) => {\n        let dragItemParams = {\n            statusId: statusId,\n            taskObject: task\n        };\n        dragItem.current = dragItemParams;\n        setTimeout(() => {\n            setDragging(true);\n        }, 0)\n    };\n\n    const draggingStyle = (currTaskId) => {\n        return currTaskId === dragItem.current.taskObject.id ? \"dragged task_card\" : \"task_card\";\n    };\n\n    const handleDragEnd = (e) => {\n        onDragEnd(task);\n        setDragging(false);\n        dragItem.current = null;\n    };\n\n    return (\n        <div className={dragging ? draggingStyle(task.id) : \"task_card\"}\n             draggable={true}\n             aria-dropeffect={\"none\"}\n             onDragStart={(event) => (handleDrag(event))}\n             onDragEnd={(e) => handleDragEnd(e)}\n        >\n            <div className={\"status_tool_container\"}>\n                <div>\n                    <DeleteOutlined onClick={(e) => handleDeleteTask(task.id)}/>\n                </div>\n                <TaskModal task={thisTask} setTask={setTask}/>\n            </div>\n            <div className=\"project_title\">{thisTask.title}</div>\n            <div className={\"businessValue\"}>Value: {thisTask.businessValue}</div>\n        </div>\n    );\n};\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}