{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/TaskModal.js\";\nimport React, { useRef, useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, ContentContainer, Input } from \"../styledComps/styled\";\nimport axios from 'axios';\n\nconst TaskModal = ({\n  task,\n  setTask,\n  refreshStatusesFromBackend\n}) => {\n  const [visible, setVisible] = useState(false);\n  const businessValueRef = useRef(task.businessValue);\n  const acceptanceCriteriaRef = useRef(task.acceptanceCriteria);\n  const userStoryRef = useRef(task.userStory);\n  const titleRef = useRef(task.storyTitle);\n  const positionRef = useRef(task.position);\n\n  const handleEdit = () => {\n    uploadChanges();\n  };\n\n  async function uploadChanges() {\n    let editedTask = {\n      id: null,\n      author: null,\n      businessValue: task.businessValue == businessValueRef.current.value ? null : businessValueRef.current.value,\n      userStory: task.userStory == userStoryRef.current.value && task.userStory === null ? null : userStoryRef.current.value,\n      acceptanceCriteria: task.acceptanceCriteria == acceptanceCriteriaRef.current.value && task.acceptanceCriteria === null ? null : acceptanceCriteriaRef.current.value,\n      title: task.storyTitle == titleRef.current.value ? null : titleRef.current.value,\n      position: task.position == positionRef.current.value ? null : positionRef.current.value\n    };\n    let axiosResponse = await axios.put(\"http://localhost:8080/task/edit/\" + task.id, editedTask);\n    refreshStatusesFromBackend();\n    console.log(axiosResponse);\n    setTask(axiosResponse.data);\n  }\n\n  function handleOk() {\n    setVisible(false);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormOutlined, {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Edit Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Story Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"text_input title\",\n    placeholder: \"Story Title\",\n    defaultValue: task.storyTitle,\n    ref: titleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"User Story: \"), /*#__PURE__*/React.createElement(\"textArea\", {\n    className: \"text_input userStory\",\n    placeholder: \"user story\",\n    defaultValue: task.userStory,\n    ref: userStoryRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Acceptance Criteria: \"), /*#__PURE__*/React.createElement(\"textArea\", {\n    className: \"text_input userStory\",\n    placeholder: \"acceptance criteria\",\n    defaultValue: task.acceptanceCriteria,\n    ref: acceptanceCriteriaRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Save\"))), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Business value: \"), /*#__PURE__*/React.createElement(Input, {\n    className: \"business_value\",\n    placeholder: \"Business Value\",\n    defaultValue: task.businessValue,\n    ref: businessValueRef,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"Save\")))));\n};\n\nexport default TaskModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/TaskModal.js"],"names":["React","useRef","useState","Modal","Button","FormOutlined","AdderComponent","ContentContainer","Input","axios","TaskModal","task","setTask","refreshStatusesFromBackend","visible","setVisible","businessValueRef","businessValue","acceptanceCriteriaRef","acceptanceCriteria","userStoryRef","userStory","titleRef","storyTitle","positionRef","position","handleEdit","uploadChanges","editedTask","id","author","current","value","title","axiosResponse","put","console","log","data","handleOk","handleCancel","showModal"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Modal, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../styledComps/styled\";\nimport axios from 'axios';\n\n\nconst TaskModal = ({task, setTask, refreshStatusesFromBackend}) => {\n\n    const [visible, setVisible] = useState(false);\n\n    const businessValueRef = useRef(task.businessValue);\n    const acceptanceCriteriaRef = useRef(task.acceptanceCriteria);\n    const userStoryRef = useRef(task.userStory);\n    const titleRef = useRef(task.storyTitle);\n    const positionRef = useRef(task.position);\n\n    const handleEdit = () => {\n        uploadChanges();\n    };\n\n    async function uploadChanges() {\n        let editedTask = {\n            id: null,\n            author: null,\n            businessValue: task.businessValue == businessValueRef.current.value ? null : businessValueRef.current.value,\n            userStory: task.userStory == userStoryRef.current.value && task.userStory === null ? null : userStoryRef.current.value,\n            acceptanceCriteria: task.acceptanceCriteria == acceptanceCriteriaRef.current.value && task.acceptanceCriteria === null ? null : acceptanceCriteriaRef.current.value,\n            title: task.storyTitle == titleRef.current.value ? null : titleRef.current.value,\n            position: task.position == positionRef.current.value ? null : positionRef.current.value\n        };\n        let axiosResponse = await axios.put(\"http://localhost:8080/task/edit/\" + task.id, editedTask);\n        refreshStatusesFromBackend();\n        console.log(axiosResponse);\n        setTask(axiosResponse.data);\n    }\n\n    function handleOk() {\n        setVisible(false);\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true)\n    }\n\n    return (\n        <div>\n            <FormOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n            >\n                <h2>Edit Task</h2>\n                <div className={\"task_modal\"}>\n                    <div className={\"text_modal\"}>\n                        <label>Story Title: </label>\n                        <input\n                            className={\"text_input title\"}\n                            placeholder={\"Story Title\"}\n                            defaultValue={task.storyTitle}\n                            ref={titleRef}/>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <div className={\"text_modal\"}>\n                        <label>User Story: </label>\n                        <textArea\n                            className={\"text_input userStory\"}\n                            placeholder={\"user story\"}\n                            defaultValue={task.userStory}\n                            ref={userStoryRef}/>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <div className={\"text_modal\"}>\n                        <label>Acceptance Criteria: </label>\n                        <textArea\n                            className={\"text_input userStory\"}\n                            placeholder={\"acceptance criteria\"}\n                            defaultValue={task.acceptanceCriteria}\n                            ref={acceptanceCriteriaRef}/>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                </div>\n                <ContentContainer>\n                    <AdderComponent>\n                        <label>Business value: </label>\n                        <Input\n                            className=\"business_value\"\n                            placeholder={\"Business Value\"}\n                            defaultValue={task.businessValue}\n                            ref={businessValueRef}\n                            type=\"number\"\n                        />\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </AdderComponent>\n                </ContentContainer>\n\n            </Modal>\n\n\n        </div>\n    );\n};\n\nexport default TaskModal;"]},"metadata":{},"sourceType":"module"}