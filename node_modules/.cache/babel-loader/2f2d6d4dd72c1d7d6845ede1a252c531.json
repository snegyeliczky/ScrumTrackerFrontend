{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnyTypeAnnotation = AnyTypeAnnotation;\nexports.ArrayTypeAnnotation = ArrayTypeAnnotation;\nexports.BooleanTypeAnnotation = BooleanTypeAnnotation;\nexports.BooleanLiteralTypeAnnotation = BooleanLiteralTypeAnnotation;\nexports.NullLiteralTypeAnnotation = NullLiteralTypeAnnotation;\nexports.DeclareClass = DeclareClass;\nexports.DeclareFunction = DeclareFunction;\nexports.InferredPredicate = InferredPredicate;\nexports.DeclaredPredicate = DeclaredPredicate;\nexports.DeclareInterface = DeclareInterface;\nexports.DeclareModule = DeclareModule;\nexports.DeclareModuleExports = DeclareModuleExports;\nexports.DeclareTypeAlias = DeclareTypeAlias;\nexports.DeclareOpaqueType = DeclareOpaqueType;\nexports.DeclareVariable = DeclareVariable;\nexports.DeclareExportDeclaration = DeclareExportDeclaration;\nexports.DeclareExportAllDeclaration = DeclareExportAllDeclaration;\nexports.EnumDeclaration = EnumDeclaration;\nexports.EnumBooleanBody = EnumBooleanBody;\nexports.EnumNumberBody = EnumNumberBody;\nexports.EnumStringBody = EnumStringBody;\nexports.EnumSymbolBody = EnumSymbolBody;\nexports.EnumDefaultedMember = EnumDefaultedMember;\nexports.EnumBooleanMember = EnumBooleanMember;\nexports.EnumNumberMember = EnumNumberMember;\nexports.EnumStringMember = EnumStringMember;\nexports.ExistsTypeAnnotation = ExistsTypeAnnotation;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.FunctionTypeParam = FunctionTypeParam;\nexports.GenericTypeAnnotation = exports.ClassImplements = exports.InterfaceExtends = InterfaceExtends;\nexports._interfaceish = _interfaceish;\nexports._variance = _variance;\nexports.InterfaceDeclaration = InterfaceDeclaration;\nexports.InterfaceTypeAnnotation = InterfaceTypeAnnotation;\nexports.IntersectionTypeAnnotation = IntersectionTypeAnnotation;\nexports.MixedTypeAnnotation = MixedTypeAnnotation;\nexports.EmptyTypeAnnotation = EmptyTypeAnnotation;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.NumberTypeAnnotation = NumberTypeAnnotation;\nexports.StringTypeAnnotation = StringTypeAnnotation;\nexports.ThisTypeAnnotation = ThisTypeAnnotation;\nexports.TupleTypeAnnotation = TupleTypeAnnotation;\nexports.TypeofTypeAnnotation = TypeofTypeAnnotation;\nexports.TypeAlias = TypeAlias;\nexports.TypeAnnotation = TypeAnnotation;\nexports.TypeParameterDeclaration = exports.TypeParameterInstantiation = TypeParameterInstantiation;\nexports.TypeParameter = TypeParameter;\nexports.OpaqueType = OpaqueType;\nexports.ObjectTypeAnnotation = ObjectTypeAnnotation;\nexports.ObjectTypeInternalSlot = ObjectTypeInternalSlot;\nexports.ObjectTypeCallProperty = ObjectTypeCallProperty;\nexports.ObjectTypeIndexer = ObjectTypeIndexer;\nexports.ObjectTypeProperty = ObjectTypeProperty;\nexports.ObjectTypeSpreadProperty = ObjectTypeSpreadProperty;\nexports.QualifiedTypeIdentifier = QualifiedTypeIdentifier;\nexports.SymbolTypeAnnotation = SymbolTypeAnnotation;\nexports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.TypeCastExpression = TypeCastExpression;\nexports.Variance = Variance;\nexports.VoidTypeAnnotation = VoidTypeAnnotation;\nObject.defineProperty(exports, \"NumberLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.NumericLiteral;\n  }\n});\nObject.defineProperty(exports, \"StringLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.StringLiteral;\n  }\n});\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _modules = require(\"./modules\");\n\nvar _types2 = require(\"./types\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction AnyTypeAnnotation() {\n  this.word(\"any\");\n}\n\nfunction ArrayTypeAnnotation(node) {\n  this.print(node.elementType, node);\n  this.token(\"[\");\n  this.token(\"]\");\n}\n\nfunction BooleanTypeAnnotation() {\n  this.word(\"boolean\");\n}\n\nfunction BooleanLiteralTypeAnnotation(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteralTypeAnnotation() {\n  this.word(\"null\");\n}\n\nfunction DeclareClass(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"class\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction DeclareFunction(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"function\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation.typeAnnotation, node);\n\n  if (node.predicate) {\n    this.space();\n    this.print(node.predicate, node);\n  }\n\n  this.semicolon();\n}\n\nfunction InferredPredicate() {\n  this.token(\"%\");\n  this.word(\"checks\");\n}\n\nfunction DeclaredPredicate(node) {\n  this.token(\"%\");\n  this.word(\"checks\");\n  this.token(\"(\");\n  this.print(node.value, node);\n  this.token(\")\");\n}\n\nfunction DeclareInterface(node) {\n  this.word(\"declare\");\n  this.space();\n  this.InterfaceDeclaration(node);\n}\n\nfunction DeclareModule(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.space();\n  this.print(node.id, node);\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction DeclareModuleExports(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.token(\".\");\n  this.word(\"exports\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction DeclareTypeAlias(node) {\n  this.word(\"declare\");\n  this.space();\n  this.TypeAlias(node);\n}\n\nfunction DeclareOpaqueType(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.OpaqueType(node);\n}\n\nfunction DeclareVariable(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"var\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation, node);\n  this.semicolon();\n}\n\nfunction DeclareExportDeclaration(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"export\");\n  this.space();\n\n  if (node.default) {\n    this.word(\"default\");\n    this.space();\n  }\n\n  FlowExportDeclaration.apply(this, arguments);\n}\n\nfunction DeclareExportAllDeclaration() {\n  this.word(\"declare\");\n  this.space();\n\n  _modules.ExportAllDeclaration.apply(this, arguments);\n}\n\nfunction EnumDeclaration(node) {\n  const {\n    id,\n    body\n  } = node;\n  this.word(\"enum\");\n  this.space();\n  this.print(id, node);\n  this.print(body, node);\n}\n\nfunction enumExplicitType(context, name, hasExplicitType) {\n  if (hasExplicitType) {\n    context.space();\n    context.word(\"of\");\n    context.space();\n    context.word(name);\n  }\n\n  context.space();\n}\n\nfunction enumBody(context, node) {\n  const {\n    members\n  } = node;\n  context.token(\"{\");\n  context.indent();\n  context.newline();\n\n  for (const member of members) {\n    context.print(member, node);\n    context.newline();\n  }\n\n  context.dedent();\n  context.token(\"}\");\n}\n\nfunction EnumBooleanBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"boolean\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumNumberBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"number\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumStringBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"string\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumSymbolBody(node) {\n  enumExplicitType(this, \"symbol\", true);\n  enumBody(this, node);\n}\n\nfunction EnumDefaultedMember(node) {\n  const {\n    id\n  } = node;\n  this.print(id, node);\n  this.token(\",\");\n}\n\nfunction enumInitializedMember(context, node) {\n  const {\n    id,\n    init\n  } = node;\n  context.print(id, node);\n  context.space();\n  context.token(\"=\");\n  context.space();\n  context.print(init, node);\n  context.token(\",\");\n}\n\nfunction EnumBooleanMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumNumberMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumStringMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction FlowExportDeclaration(node) {\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar, node);\n    if (!t.isStatement(declar)) this.semicolon();\n  } else {\n    this.token(\"{\");\n\n    if (node.specifiers.length) {\n      this.space();\n      this.printList(node.specifiers, node);\n      this.space();\n    }\n\n    this.token(\"}\");\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ExistsTypeAnnotation() {\n  this.token(\"*\");\n}\n\nfunction FunctionTypeAnnotation(node, parent) {\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n  this.printList(node.params, node);\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.token(\",\");\n      this.space();\n    }\n\n    this.token(\"...\");\n    this.print(node.rest, node);\n  }\n\n  this.token(\")\");\n\n  if (parent.type === \"ObjectTypeCallProperty\" || parent.type === \"DeclareFunction\" || parent.type === \"ObjectTypeProperty\" && parent.method) {\n    this.token(\":\");\n  } else {\n    this.space();\n    this.token(\"=>\");\n  }\n\n  this.space();\n  this.print(node.returnType, node);\n}\n\nfunction FunctionTypeParam(node) {\n  this.print(node.name, node);\n  if (node.optional) this.token(\"?\");\n\n  if (node.name) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.typeAnnotation, node);\n}\n\nfunction InterfaceExtends(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction _interfaceish(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if (node.extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  if (node.mixins && node.mixins.length) {\n    this.space();\n    this.word(\"mixins\");\n    this.space();\n    this.printList(node.mixins, node);\n  }\n\n  if (node.implements && node.implements.length) {\n    this.space();\n    this.word(\"implements\");\n    this.space();\n    this.printList(node.implements, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction _variance(node) {\n  if (node.variance) {\n    if (node.variance.kind === \"plus\") {\n      this.token(\"+\");\n    } else if (node.variance.kind === \"minus\") {\n      this.token(\"-\");\n    }\n  }\n}\n\nfunction InterfaceDeclaration(node) {\n  this.word(\"interface\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction andSeparator() {\n  this.space();\n  this.token(\"&\");\n  this.space();\n}\n\nfunction InterfaceTypeAnnotation(node) {\n  this.word(\"interface\");\n\n  if (node.extends && node.extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction IntersectionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: andSeparator\n  });\n}\n\nfunction MixedTypeAnnotation() {\n  this.word(\"mixed\");\n}\n\nfunction EmptyTypeAnnotation() {\n  this.word(\"empty\");\n}\n\nfunction NullableTypeAnnotation(node) {\n  this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction NumberTypeAnnotation() {\n  this.word(\"number\");\n}\n\nfunction StringTypeAnnotation() {\n  this.word(\"string\");\n}\n\nfunction ThisTypeAnnotation() {\n  this.word(\"this\");\n}\n\nfunction TupleTypeAnnotation(node) {\n  this.token(\"[\");\n  this.printList(node.types, node);\n  this.token(\"]\");\n}\n\nfunction TypeofTypeAnnotation(node) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.argument, node);\n}\n\nfunction TypeAlias(node) {\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right, node);\n  this.semicolon();\n}\n\nfunction TypeAnnotation(node) {\n  this.token(\":\");\n  this.space();\n  if (node.optional) this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TypeParameterInstantiation(node) {\n  this.token(\"<\");\n  this.printList(node.params, node, {});\n  this.token(\">\");\n}\n\nfunction TypeParameter(node) {\n  this._variance(node);\n\n  this.word(node.name);\n\n  if (node.bound) {\n    this.print(node.bound, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nfunction OpaqueType(node) {\n  this.word(\"opaque\");\n  this.space();\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if (node.supertype) {\n    this.token(\":\");\n    this.space();\n    this.print(node.supertype, node);\n  }\n\n  if (node.impltype) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.impltype, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ObjectTypeAnnotation(node) {\n  if (node.exact) {\n    this.token(\"{|\");\n  } else {\n    this.token(\"{\");\n  }\n\n  const props = node.properties.concat(node.callProperties || [], node.indexers || [], node.internalSlots || []);\n\n  if (props.length) {\n    this.space();\n    this.printJoin(props, node, {\n      addNewlines(leading) {\n        if (leading && !props[0]) return 1;\n      },\n\n      indent: true,\n      statement: true,\n      iterator: () => {\n        if (props.length !== 1 || node.inexact) {\n          this.token(\",\");\n          this.space();\n        }\n      }\n    });\n    this.space();\n  }\n\n  if (node.inexact) {\n    this.indent();\n    this.token(\"...\");\n\n    if (props.length) {\n      this.newline();\n    }\n\n    this.dedent();\n  }\n\n  if (node.exact) {\n    this.token(\"|}\");\n  } else {\n    this.token(\"}\");\n  }\n}\n\nfunction ObjectTypeInternalSlot(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.token(\"[\");\n  this.token(\"[\");\n  this.print(node.id, node);\n  this.token(\"]\");\n  this.token(\"]\");\n  if (node.optional) this.token(\"?\");\n\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeCallProperty(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeIndexer(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.token(\"[\");\n\n  if (node.id) {\n    this.print(node.id, node);\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.key, node);\n  this.token(\"]\");\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeProperty(node) {\n  if (node.proto) {\n    this.word(\"proto\");\n    this.space();\n  }\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.print(node.key, node);\n  if (node.optional) this.token(\"?\");\n\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeSpreadProperty(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction QualifiedTypeIdentifier(node) {\n  this.print(node.qualification, node);\n  this.token(\".\");\n  this.print(node.id, node);\n}\n\nfunction SymbolTypeAnnotation() {\n  this.word(\"symbol\");\n}\n\nfunction orSeparator() {\n  this.space();\n  this.token(\"|\");\n  this.space();\n}\n\nfunction UnionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: orSeparator\n  });\n}\n\nfunction TypeCastExpression(node) {\n  this.token(\"(\");\n  this.print(node.expression, node);\n  this.print(node.typeAnnotation, node);\n  this.token(\")\");\n}\n\nfunction Variance(node) {\n  if (node.kind === \"plus\") {\n    this.token(\"+\");\n  } else {\n    this.token(\"-\");\n  }\n}\n\nfunction VoidTypeAnnotation() {\n  this.word(\"void\");\n}","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/generator/lib/generators/flow.js"],"names":["Object","defineProperty","exports","value","AnyTypeAnnotation","ArrayTypeAnnotation","BooleanTypeAnnotation","BooleanLiteralTypeAnnotation","NullLiteralTypeAnnotation","DeclareClass","DeclareFunction","InferredPredicate","DeclaredPredicate","DeclareInterface","DeclareModule","DeclareModuleExports","DeclareTypeAlias","DeclareOpaqueType","DeclareVariable","DeclareExportDeclaration","DeclareExportAllDeclaration","EnumDeclaration","EnumBooleanBody","EnumNumberBody","EnumStringBody","EnumSymbolBody","EnumDefaultedMember","EnumBooleanMember","EnumNumberMember","EnumStringMember","ExistsTypeAnnotation","FunctionTypeAnnotation","FunctionTypeParam","GenericTypeAnnotation","ClassImplements","InterfaceExtends","_interfaceish","_variance","InterfaceDeclaration","InterfaceTypeAnnotation","IntersectionTypeAnnotation","MixedTypeAnnotation","EmptyTypeAnnotation","NullableTypeAnnotation","NumberTypeAnnotation","StringTypeAnnotation","ThisTypeAnnotation","TupleTypeAnnotation","TypeofTypeAnnotation","TypeAlias","TypeAnnotation","TypeParameterDeclaration","TypeParameterInstantiation","TypeParameter","OpaqueType","ObjectTypeAnnotation","ObjectTypeInternalSlot","ObjectTypeCallProperty","ObjectTypeIndexer","ObjectTypeProperty","ObjectTypeSpreadProperty","QualifiedTypeIdentifier","SymbolTypeAnnotation","UnionTypeAnnotation","TypeCastExpression","Variance","VoidTypeAnnotation","enumerable","get","_types2","NumericLiteral","StringLiteral","t","_interopRequireWildcard","require","_modules","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","default","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","word","node","print","elementType","token","parent","isDeclareExportDeclaration","space","id","typeAnnotation","predicate","semicolon","body","FlowExportDeclaration","apply","arguments","ExportAllDeclaration","enumExplicitType","context","name","hasExplicitType","enumBody","members","indent","newline","member","dedent","explicitType","enumInitializedMember","init","declaration","declar","isStatement","specifiers","length","printList","source","typeParameters","params","rest","type","method","returnType","optional","extends","mixins","implements","variance","kind","andSeparator","printJoin","types","separator","argument","right","bound","supertype","impltype","exact","props","properties","concat","callProperties","indexers","internalSlots","addNewlines","leading","statement","iterator","inexact","static","proto","qualification","orSeparator","expression"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnyTypeAnnotation = AnyTypeAnnotation;\nexports.ArrayTypeAnnotation = ArrayTypeAnnotation;\nexports.BooleanTypeAnnotation = BooleanTypeAnnotation;\nexports.BooleanLiteralTypeAnnotation = BooleanLiteralTypeAnnotation;\nexports.NullLiteralTypeAnnotation = NullLiteralTypeAnnotation;\nexports.DeclareClass = DeclareClass;\nexports.DeclareFunction = DeclareFunction;\nexports.InferredPredicate = InferredPredicate;\nexports.DeclaredPredicate = DeclaredPredicate;\nexports.DeclareInterface = DeclareInterface;\nexports.DeclareModule = DeclareModule;\nexports.DeclareModuleExports = DeclareModuleExports;\nexports.DeclareTypeAlias = DeclareTypeAlias;\nexports.DeclareOpaqueType = DeclareOpaqueType;\nexports.DeclareVariable = DeclareVariable;\nexports.DeclareExportDeclaration = DeclareExportDeclaration;\nexports.DeclareExportAllDeclaration = DeclareExportAllDeclaration;\nexports.EnumDeclaration = EnumDeclaration;\nexports.EnumBooleanBody = EnumBooleanBody;\nexports.EnumNumberBody = EnumNumberBody;\nexports.EnumStringBody = EnumStringBody;\nexports.EnumSymbolBody = EnumSymbolBody;\nexports.EnumDefaultedMember = EnumDefaultedMember;\nexports.EnumBooleanMember = EnumBooleanMember;\nexports.EnumNumberMember = EnumNumberMember;\nexports.EnumStringMember = EnumStringMember;\nexports.ExistsTypeAnnotation = ExistsTypeAnnotation;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.FunctionTypeParam = FunctionTypeParam;\nexports.GenericTypeAnnotation = exports.ClassImplements = exports.InterfaceExtends = InterfaceExtends;\nexports._interfaceish = _interfaceish;\nexports._variance = _variance;\nexports.InterfaceDeclaration = InterfaceDeclaration;\nexports.InterfaceTypeAnnotation = InterfaceTypeAnnotation;\nexports.IntersectionTypeAnnotation = IntersectionTypeAnnotation;\nexports.MixedTypeAnnotation = MixedTypeAnnotation;\nexports.EmptyTypeAnnotation = EmptyTypeAnnotation;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.NumberTypeAnnotation = NumberTypeAnnotation;\nexports.StringTypeAnnotation = StringTypeAnnotation;\nexports.ThisTypeAnnotation = ThisTypeAnnotation;\nexports.TupleTypeAnnotation = TupleTypeAnnotation;\nexports.TypeofTypeAnnotation = TypeofTypeAnnotation;\nexports.TypeAlias = TypeAlias;\nexports.TypeAnnotation = TypeAnnotation;\nexports.TypeParameterDeclaration = exports.TypeParameterInstantiation = TypeParameterInstantiation;\nexports.TypeParameter = TypeParameter;\nexports.OpaqueType = OpaqueType;\nexports.ObjectTypeAnnotation = ObjectTypeAnnotation;\nexports.ObjectTypeInternalSlot = ObjectTypeInternalSlot;\nexports.ObjectTypeCallProperty = ObjectTypeCallProperty;\nexports.ObjectTypeIndexer = ObjectTypeIndexer;\nexports.ObjectTypeProperty = ObjectTypeProperty;\nexports.ObjectTypeSpreadProperty = ObjectTypeSpreadProperty;\nexports.QualifiedTypeIdentifier = QualifiedTypeIdentifier;\nexports.SymbolTypeAnnotation = SymbolTypeAnnotation;\nexports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.TypeCastExpression = TypeCastExpression;\nexports.Variance = Variance;\nexports.VoidTypeAnnotation = VoidTypeAnnotation;\nObject.defineProperty(exports, \"NumberLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.NumericLiteral;\n  }\n});\nObject.defineProperty(exports, \"StringLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.StringLiteral;\n  }\n});\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _modules = require(\"./modules\");\n\nvar _types2 = require(\"./types\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction AnyTypeAnnotation() {\n  this.word(\"any\");\n}\n\nfunction ArrayTypeAnnotation(node) {\n  this.print(node.elementType, node);\n  this.token(\"[\");\n  this.token(\"]\");\n}\n\nfunction BooleanTypeAnnotation() {\n  this.word(\"boolean\");\n}\n\nfunction BooleanLiteralTypeAnnotation(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteralTypeAnnotation() {\n  this.word(\"null\");\n}\n\nfunction DeclareClass(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"class\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction DeclareFunction(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"function\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation.typeAnnotation, node);\n\n  if (node.predicate) {\n    this.space();\n    this.print(node.predicate, node);\n  }\n\n  this.semicolon();\n}\n\nfunction InferredPredicate() {\n  this.token(\"%\");\n  this.word(\"checks\");\n}\n\nfunction DeclaredPredicate(node) {\n  this.token(\"%\");\n  this.word(\"checks\");\n  this.token(\"(\");\n  this.print(node.value, node);\n  this.token(\")\");\n}\n\nfunction DeclareInterface(node) {\n  this.word(\"declare\");\n  this.space();\n  this.InterfaceDeclaration(node);\n}\n\nfunction DeclareModule(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.space();\n  this.print(node.id, node);\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction DeclareModuleExports(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.token(\".\");\n  this.word(\"exports\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction DeclareTypeAlias(node) {\n  this.word(\"declare\");\n  this.space();\n  this.TypeAlias(node);\n}\n\nfunction DeclareOpaqueType(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.OpaqueType(node);\n}\n\nfunction DeclareVariable(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"var\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation, node);\n  this.semicolon();\n}\n\nfunction DeclareExportDeclaration(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"export\");\n  this.space();\n\n  if (node.default) {\n    this.word(\"default\");\n    this.space();\n  }\n\n  FlowExportDeclaration.apply(this, arguments);\n}\n\nfunction DeclareExportAllDeclaration() {\n  this.word(\"declare\");\n  this.space();\n\n  _modules.ExportAllDeclaration.apply(this, arguments);\n}\n\nfunction EnumDeclaration(node) {\n  const {\n    id,\n    body\n  } = node;\n  this.word(\"enum\");\n  this.space();\n  this.print(id, node);\n  this.print(body, node);\n}\n\nfunction enumExplicitType(context, name, hasExplicitType) {\n  if (hasExplicitType) {\n    context.space();\n    context.word(\"of\");\n    context.space();\n    context.word(name);\n  }\n\n  context.space();\n}\n\nfunction enumBody(context, node) {\n  const {\n    members\n  } = node;\n  context.token(\"{\");\n  context.indent();\n  context.newline();\n\n  for (const member of members) {\n    context.print(member, node);\n    context.newline();\n  }\n\n  context.dedent();\n  context.token(\"}\");\n}\n\nfunction EnumBooleanBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"boolean\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumNumberBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"number\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumStringBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"string\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumSymbolBody(node) {\n  enumExplicitType(this, \"symbol\", true);\n  enumBody(this, node);\n}\n\nfunction EnumDefaultedMember(node) {\n  const {\n    id\n  } = node;\n  this.print(id, node);\n  this.token(\",\");\n}\n\nfunction enumInitializedMember(context, node) {\n  const {\n    id,\n    init\n  } = node;\n  context.print(id, node);\n  context.space();\n  context.token(\"=\");\n  context.space();\n  context.print(init, node);\n  context.token(\",\");\n}\n\nfunction EnumBooleanMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumNumberMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumStringMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction FlowExportDeclaration(node) {\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar, node);\n    if (!t.isStatement(declar)) this.semicolon();\n  } else {\n    this.token(\"{\");\n\n    if (node.specifiers.length) {\n      this.space();\n      this.printList(node.specifiers, node);\n      this.space();\n    }\n\n    this.token(\"}\");\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ExistsTypeAnnotation() {\n  this.token(\"*\");\n}\n\nfunction FunctionTypeAnnotation(node, parent) {\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n  this.printList(node.params, node);\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.token(\",\");\n      this.space();\n    }\n\n    this.token(\"...\");\n    this.print(node.rest, node);\n  }\n\n  this.token(\")\");\n\n  if (parent.type === \"ObjectTypeCallProperty\" || parent.type === \"DeclareFunction\" || parent.type === \"ObjectTypeProperty\" && parent.method) {\n    this.token(\":\");\n  } else {\n    this.space();\n    this.token(\"=>\");\n  }\n\n  this.space();\n  this.print(node.returnType, node);\n}\n\nfunction FunctionTypeParam(node) {\n  this.print(node.name, node);\n  if (node.optional) this.token(\"?\");\n\n  if (node.name) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.typeAnnotation, node);\n}\n\nfunction InterfaceExtends(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction _interfaceish(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if (node.extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  if (node.mixins && node.mixins.length) {\n    this.space();\n    this.word(\"mixins\");\n    this.space();\n    this.printList(node.mixins, node);\n  }\n\n  if (node.implements && node.implements.length) {\n    this.space();\n    this.word(\"implements\");\n    this.space();\n    this.printList(node.implements, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction _variance(node) {\n  if (node.variance) {\n    if (node.variance.kind === \"plus\") {\n      this.token(\"+\");\n    } else if (node.variance.kind === \"minus\") {\n      this.token(\"-\");\n    }\n  }\n}\n\nfunction InterfaceDeclaration(node) {\n  this.word(\"interface\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction andSeparator() {\n  this.space();\n  this.token(\"&\");\n  this.space();\n}\n\nfunction InterfaceTypeAnnotation(node) {\n  this.word(\"interface\");\n\n  if (node.extends && node.extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction IntersectionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: andSeparator\n  });\n}\n\nfunction MixedTypeAnnotation() {\n  this.word(\"mixed\");\n}\n\nfunction EmptyTypeAnnotation() {\n  this.word(\"empty\");\n}\n\nfunction NullableTypeAnnotation(node) {\n  this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction NumberTypeAnnotation() {\n  this.word(\"number\");\n}\n\nfunction StringTypeAnnotation() {\n  this.word(\"string\");\n}\n\nfunction ThisTypeAnnotation() {\n  this.word(\"this\");\n}\n\nfunction TupleTypeAnnotation(node) {\n  this.token(\"[\");\n  this.printList(node.types, node);\n  this.token(\"]\");\n}\n\nfunction TypeofTypeAnnotation(node) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.argument, node);\n}\n\nfunction TypeAlias(node) {\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right, node);\n  this.semicolon();\n}\n\nfunction TypeAnnotation(node) {\n  this.token(\":\");\n  this.space();\n  if (node.optional) this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TypeParameterInstantiation(node) {\n  this.token(\"<\");\n  this.printList(node.params, node, {});\n  this.token(\">\");\n}\n\nfunction TypeParameter(node) {\n  this._variance(node);\n\n  this.word(node.name);\n\n  if (node.bound) {\n    this.print(node.bound, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nfunction OpaqueType(node) {\n  this.word(\"opaque\");\n  this.space();\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if (node.supertype) {\n    this.token(\":\");\n    this.space();\n    this.print(node.supertype, node);\n  }\n\n  if (node.impltype) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.impltype, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ObjectTypeAnnotation(node) {\n  if (node.exact) {\n    this.token(\"{|\");\n  } else {\n    this.token(\"{\");\n  }\n\n  const props = node.properties.concat(node.callProperties || [], node.indexers || [], node.internalSlots || []);\n\n  if (props.length) {\n    this.space();\n    this.printJoin(props, node, {\n      addNewlines(leading) {\n        if (leading && !props[0]) return 1;\n      },\n\n      indent: true,\n      statement: true,\n      iterator: () => {\n        if (props.length !== 1 || node.inexact) {\n          this.token(\",\");\n          this.space();\n        }\n      }\n    });\n    this.space();\n  }\n\n  if (node.inexact) {\n    this.indent();\n    this.token(\"...\");\n\n    if (props.length) {\n      this.newline();\n    }\n\n    this.dedent();\n  }\n\n  if (node.exact) {\n    this.token(\"|}\");\n  } else {\n    this.token(\"}\");\n  }\n}\n\nfunction ObjectTypeInternalSlot(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.token(\"[\");\n  this.token(\"[\");\n  this.print(node.id, node);\n  this.token(\"]\");\n  this.token(\"]\");\n  if (node.optional) this.token(\"?\");\n\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeCallProperty(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeIndexer(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.token(\"[\");\n\n  if (node.id) {\n    this.print(node.id, node);\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.key, node);\n  this.token(\"]\");\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeProperty(node) {\n  if (node.proto) {\n    this.word(\"proto\");\n    this.space();\n  }\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.print(node.key, node);\n  if (node.optional) this.token(\"?\");\n\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeSpreadProperty(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction QualifiedTypeIdentifier(node) {\n  this.print(node.qualification, node);\n  this.token(\".\");\n  this.print(node.id, node);\n}\n\nfunction SymbolTypeAnnotation() {\n  this.word(\"symbol\");\n}\n\nfunction orSeparator() {\n  this.space();\n  this.token(\"|\");\n  this.space();\n}\n\nfunction UnionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: orSeparator\n  });\n}\n\nfunction TypeCastExpression(node) {\n  this.token(\"(\");\n  this.print(node.expression, node);\n  this.print(node.typeAnnotation, node);\n  this.token(\")\");\n}\n\nfunction Variance(node) {\n  if (node.kind === \"plus\") {\n    this.token(\"+\");\n  } else {\n    this.token(\"-\");\n  }\n}\n\nfunction VoidTypeAnnotation() {\n  this.word(\"void\");\n}"]},"metadata":{},"sourceType":"script"}