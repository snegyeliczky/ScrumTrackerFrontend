{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/ProjectComponents/Task.js\";\nimport React, { useState, useRef, useContext, useEffect } from 'react';\nimport { DeleteOutlined, ApiOutlined } from \"@ant-design/icons\";\nimport { ContentContainer } from \"../../Assets/StyledComps/styled\";\nimport TaskModal from \"../TaskModal\";\nimport TaskCalls from \"../../Services/TaskCalls\";\nimport moment from 'moment';\n\nconst Task = ({\n  task,\n  statusId,\n  onDragEnd,\n  dragItem,\n  handleDeleteTask,\n  refreshStatusesFromBackend,\n  usersOnProject\n}) => {\n  const [thisTask, setTask] = useState(task);\n  const [dragging, setDragging] = useState(false);\n  var options = {\n    month: 'long'\n  };\n  console.log(new Date(thisTask.deadline).getDate());\n  console.log(new Intl.DateTimeFormat('en-US', options).format(new Date(thisTask.deadline).getDate()));\n\n  const handleDrag = e => {\n    let dragItemParams = {\n      statusId: statusId,\n      taskObject: task\n    };\n    dragItem.current = dragItemParams;\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const draggingStyle = currTaskId => {\n    return currTaskId === dragItem.current.taskObject.id ? \"dragged task_card\" : \"task_card\";\n  };\n\n  const handleDragEnd = e => {\n    onDragEnd(task);\n    setDragging(false);\n    dragItem.current = null;\n  };\n\n  async function archiveTask(e) {\n    e.stopPropagation();\n    await TaskCalls.archiveTask(task.id);\n    refreshStatusesFromBackend();\n  }\n\n  const deleteTask = () => {\n    handleDeleteTask(task.id);\n  };\n\n  const backgroundIfMyTask = {\n    backgroundColor: localStorage.getItem(\"username\") === task.owner.username ? \"rgba(95, 194, 226,0.8)\" : \"\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: backgroundIfMyTask,\n    className: dragging ? draggingStyle(task.id) : \"task_card\",\n    draggable: true,\n    \"aria-dropeffect\": \"none\",\n    onDragStart: event => handleDrag(event),\n    onDragEnd: e => handleDragEnd(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status_tool_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n    onClick: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TaskModal, {\n    task: thisTask,\n    setTask: setTask,\n    refreshStatusesFromBackend: refreshStatusesFromBackend,\n    usersOnProject: usersOnProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ApiOutlined, {\n    onClick: e => archiveTask(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, thisTask.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"businessValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Priority: \", thisTask.priority), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"businessValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Dl.: \", new Date(thisTask.deadline).getDate()));\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/ProjectComponents/Task.js"],"names":["React","useState","useRef","useContext","useEffect","DeleteOutlined","ApiOutlined","ContentContainer","TaskModal","TaskCalls","moment","Task","task","statusId","onDragEnd","dragItem","handleDeleteTask","refreshStatusesFromBackend","usersOnProject","thisTask","setTask","dragging","setDragging","options","month","console","log","Date","deadline","getDate","Intl","DateTimeFormat","format","handleDrag","e","dragItemParams","taskObject","current","setTimeout","draggingStyle","currTaskId","id","handleDragEnd","archiveTask","stopPropagation","deleteTask","backgroundIfMyTask","backgroundColor","localStorage","getItem","owner","username","event","display","title","priority"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useContext, useEffect} from 'react';\nimport {DeleteOutlined, ApiOutlined} from \"@ant-design/icons\";\nimport {ContentContainer} from \"../../Assets/StyledComps/styled\";\nimport TaskModal from \"../TaskModal\";\nimport TaskCalls from \"../../Services/TaskCalls\";\nimport moment from 'moment';\n\n\nconst Task = ({task, statusId, onDragEnd, dragItem, handleDeleteTask, refreshStatusesFromBackend, usersOnProject}) => {\n\n    const [thisTask, setTask] = useState(task);\n    const [dragging, setDragging] = useState(false);\n\n    var options = { month: 'long'};\n\n    console.log(new Date(thisTask.deadline).getDate())\n    console.log(new Intl.DateTimeFormat('en-US', options).format(new Date(thisTask.deadline).getDate()));\n    const handleDrag = (e) => {\n        let dragItemParams = {\n            statusId: statusId,\n            taskObject: task\n        };\n        dragItem.current = dragItemParams;\n        setTimeout(() => {\n            setDragging(true);\n        }, 0)\n    };\n\n    const draggingStyle = (currTaskId) => {\n        return currTaskId === dragItem.current.taskObject.id ? \"dragged task_card\" : \"task_card\";\n    };\n\n    const handleDragEnd = (e) => {\n        onDragEnd(task);\n        setDragging(false);\n        dragItem.current = null;\n    };\n\n    async function archiveTask(e) {\n        e.stopPropagation();\n        await TaskCalls.archiveTask(task.id);\n        refreshStatusesFromBackend();\n    }\n\n    const deleteTask = () => {\n        handleDeleteTask(task.id)\n    };\n\n    const backgroundIfMyTask ={\n        backgroundColor : localStorage.getItem(\"username\")===task.owner.username ? \"rgba(95, 194, 226,0.8)\" : \"\"\n    };\n\n\n\n    return (\n        <div style={backgroundIfMyTask}\n            className={dragging ? draggingStyle(task.id) : \"task_card\"}\n            draggable={true}\n            aria-dropeffect={\"none\"}\n            onDragStart={(event) => (handleDrag(event))}\n            onDragEnd={(e) => handleDragEnd(e)}\n        >\n            <div className={\"status_tool_container\"}>\n                <div>\n                    <DeleteOutlined onClick={deleteTask}/>\n                </div>\n                <TaskModal\n                    task={thisTask}\n                    setTask={setTask}\n                    refreshStatusesFromBackend={refreshStatusesFromBackend}\n                    usersOnProject={usersOnProject}\n                />\n                <div style={{display: \"none\"}}>\n                    <ApiOutlined onClick={(e) => archiveTask(e)}/>\n                </div>\n            </div>\n            <div className=\"project_title\">{thisTask.title}</div>\n            <div className={\"businessValue\"}>Priority: {thisTask.priority}</div>\n            <div className={\"businessValue\"}>Dl.: {new Date(thisTask.deadline).getDate()}</div>\n        </div>\n    );\n};\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}