{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nclass SourceMap {\n  constructor(opts, code) {\n    this._cachedMap = null;\n    this._code = code;\n    this._opts = opts;\n    this._rawMappings = [];\n  }\n\n  get() {\n    if (!this._cachedMap) {\n      const map = this._cachedMap = new _sourceMap.default.SourceMapGenerator({\n        sourceRoot: this._opts.sourceRoot\n      });\n      const code = this._code;\n\n      if (typeof code === \"string\") {\n        map.setSourceContent(this._opts.sourceFileName.replace(/\\\\/g, \"/\"), code);\n      } else if (typeof code === \"object\") {\n        Object.keys(code).forEach(sourceFileName => {\n          map.setSourceContent(sourceFileName.replace(/\\\\/g, \"/\"), code[sourceFileName]);\n        });\n      }\n\n      this._rawMappings.forEach(mapping => map.addMapping(mapping), map);\n    }\n\n    return this._cachedMap.toJSON();\n  }\n\n  getRawMappings() {\n    return this._rawMappings.slice();\n  }\n\n  mark(generatedLine, generatedColumn, line, column, identifierName, filename, force) {\n    if (this._lastGenLine !== generatedLine && line === null) return;\n\n    if (!force && this._lastGenLine === generatedLine && this._lastSourceLine === line && this._lastSourceColumn === column) {\n      return;\n    }\n\n    this._cachedMap = null;\n    this._lastGenLine = generatedLine;\n    this._lastSourceLine = line;\n    this._lastSourceColumn = column;\n\n    this._rawMappings.push({\n      name: identifierName || undefined,\n      generated: {\n        line: generatedLine,\n        column: generatedColumn\n      },\n      source: line == null ? undefined : (filename || this._opts.sourceFileName).replace(/\\\\/g, \"/\"),\n      original: line == null ? undefined : {\n        line: line,\n        column: column\n      }\n    });\n  }\n\n}\n\nexports.default = SourceMap;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/generator/lib/source-map.js"],"names":["Object","defineProperty","exports","value","default","_sourceMap","_interopRequireDefault","require","obj","__esModule","SourceMap","constructor","opts","code","_cachedMap","_code","_opts","_rawMappings","get","map","SourceMapGenerator","sourceRoot","setSourceContent","sourceFileName","replace","keys","forEach","mapping","addMapping","toJSON","getRawMappings","slice","mark","generatedLine","generatedColumn","line","column","identifierName","filename","force","_lastGenLine","_lastSourceLine","_lastSourceColumn","push","name","undefined","generated","source","original"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass SourceMap {\n  constructor(opts, code) {\n    this._cachedMap = null;\n    this._code = code;\n    this._opts = opts;\n    this._rawMappings = [];\n  }\n\n  get() {\n    if (!this._cachedMap) {\n      const map = this._cachedMap = new _sourceMap.default.SourceMapGenerator({\n        sourceRoot: this._opts.sourceRoot\n      });\n      const code = this._code;\n\n      if (typeof code === \"string\") {\n        map.setSourceContent(this._opts.sourceFileName.replace(/\\\\/g, \"/\"), code);\n      } else if (typeof code === \"object\") {\n        Object.keys(code).forEach(sourceFileName => {\n          map.setSourceContent(sourceFileName.replace(/\\\\/g, \"/\"), code[sourceFileName]);\n        });\n      }\n\n      this._rawMappings.forEach(mapping => map.addMapping(mapping), map);\n    }\n\n    return this._cachedMap.toJSON();\n  }\n\n  getRawMappings() {\n    return this._rawMappings.slice();\n  }\n\n  mark(generatedLine, generatedColumn, line, column, identifierName, filename, force) {\n    if (this._lastGenLine !== generatedLine && line === null) return;\n\n    if (!force && this._lastGenLine === generatedLine && this._lastSourceLine === line && this._lastSourceColumn === column) {\n      return;\n    }\n\n    this._cachedMap = null;\n    this._lastGenLine = generatedLine;\n    this._lastSourceLine = line;\n    this._lastSourceColumn = column;\n\n    this._rawMappings.push({\n      name: identifierName || undefined,\n      generated: {\n        line: generatedLine,\n        column: generatedColumn\n      },\n      source: line == null ? undefined : (filename || this._opts.sourceFileName).replace(/\\\\/g, \"/\"),\n      original: line == null ? undefined : {\n        line: line,\n        column: column\n      }\n    });\n  }\n\n}\n\nexports.default = SourceMap;"]},"metadata":{},"sourceType":"script"}