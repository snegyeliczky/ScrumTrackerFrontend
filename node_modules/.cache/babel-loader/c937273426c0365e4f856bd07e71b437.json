{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectPage.js\";\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport ScrumTable from \"./ScrumTable\";\nimport { AdderComponent, ContentContainer, Input } from \"../styledComps/styled\";\nimport UsersModal from \"./UsersModal\";\nimport MailModal from \"./MailModal\";\n\nconst ProjectPage = () => {\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState();\n  const [statuses, setStatuses] = useState();\n  const [loading, setLoading] = useState(true);\n  const [mouseOverAccept, setMouseOverAccept] = useState(false);\n\n  const getProject = async () => {\n    setLoading(true);\n    let response = await axios.get(\"http://localhost:8080/project/\" + id);\n    response.data.table.statuses.sort(function (a, b) {\n      return a.position - b.position;\n    });\n    response.data.table.statuses.map(status => {\n      status.tasks.sort(function (a, b) {\n        return a.position - b.position;\n      });\n    });\n    setProject(response.data);\n    setLoading(false);\n  };\n\n  const addNewColumn = async columnName => {\n    //setLoading(true);\n    let projectId = id;\n    let newStatus = {\n      statusName: columnName,\n      projectId: projectId\n    };\n    await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n    getProject();\n  };\n\n  const addNewTask = async (taskName, statusId) => {\n    setLoading(true);\n    let task = {\n      statusId: statusId,\n      title: taskName\n    };\n    await axios.post(\"http://localhost:8080/project/newtask\", task);\n    getProject();\n  };\n\n  useEffect(() => {\n    getProject();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_item_container_canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"loading....\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_item_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_title_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, project.title)), /*#__PURE__*/React.createElement(UsersModal, {\n    projectId: project.id,\n    participants: project.participants,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MailModal, {\n    projectId: project.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrum_table_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ScrumTable, {\n    key: project.table.id,\n    table: project.table,\n    addNewColumn: addNewColumn,\n    addNewTask: addNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectPage.js"],"names":["React","useState","useContext","useEffect","useRef","useParams","axios","ScrumTable","AdderComponent","ContentContainer","Input","UsersModal","MailModal","ProjectPage","id","project","setProject","statuses","setStatuses","loading","setLoading","mouseOverAccept","setMouseOverAccept","getProject","response","get","data","table","sort","a","b","position","map","status","tasks","addNewColumn","columnName","projectId","newStatus","statusName","post","addNewTask","taskName","statusId","task","title","participants"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\nimport ScrumTable from \"./ScrumTable\";\nimport {AdderComponent, ContentContainer, Input} from \"../styledComps/styled\";\nimport UsersModal from \"./UsersModal\";\nimport MailModal from \"./MailModal\";\n\n\nconst ProjectPage = () => {\n\n    const {id} = useParams();\n    const [project, setProject] = useState();\n    const [statuses, setStatuses] = useState();\n    const [loading, setLoading] = useState(true);\n    const [mouseOverAccept, setMouseOverAccept] = useState(false);\n\n    const getProject = async () => {\n        setLoading(true);\n        let response = await axios.get(\"http://localhost:8080/project/\" + id);\n        response.data.table.statuses.sort(function (a, b) {\n            return a.position - b.position;\n        });\n        response.data.table.statuses.map(status => {\n            status.tasks.sort(function (a, b) {\n                return a.position - b.position;\n            })\n        });\n        setProject(response.data);\n        setLoading(false);\n    };\n\n    const addNewColumn = async (columnName) => {\n        //setLoading(true);\n        let projectId = id;\n        let newStatus = {statusName: columnName, projectId: projectId};\n        await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n        getProject();\n    };\n\n    const addNewTask = async (taskName, statusId) => {\n        setLoading(true);\n        let task = {\n            statusId: statusId,\n            title: taskName\n        };\n        await axios.post(\"http://localhost:8080/project/newtask\", task);\n        getProject();\n\n    };\n\n    useEffect(() => {\n        getProject();\n    }, []);\n\n\n    return (\n\n        <div className={\"project_item_container_canvas\"}>\n\n            {loading ?\n                <h1>loading....</h1>\n                :\n                <div className={\"project_item_container\"}>\n                    <ContentContainer>\n                        <div className={\"project_title_container\"}>\n                            <h2>{project.title}</h2>\n                        </div>\n                            <UsersModal projectId={project.id} participants={project.participants}/>\n                            <MailModal projectId={project.id} />\n                    </ContentContainer>\n                    <div className={\"scrum_table_container\"}>\n                    <ScrumTable key={project.table.id}\n                                table={project.table}\n                                addNewColumn={addNewColumn}\n                                addNewTask={addNewTask}\n                    />\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}