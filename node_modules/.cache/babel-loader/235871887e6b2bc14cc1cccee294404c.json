{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ScrumTable.js\";\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport Column from \"./Column\";\nimport Task from \"./Task\";\n\nconst ScrumTable = ({\n  table\n}) => {\n  const dragItem = useRef(); //dragged task id and status id where it come from\n\n  const dragNodeItem = useRef(); // dragged html element\n\n  const [statuses, setStatuses] = useState(table.statuses);\n\n  const onDragEnter = (e, statusId) => {\n    console.log(table.statuses);\n    let newStatuses = table.statuses;\n\n    for (let status of newStatuses) {\n      if (status.id === dragItem.current.statusId) {\n        let taskArr = [];\n\n        for (let task of status.tasks) {\n          if (task.id === dragItem.current.taskId) {\n            continue;\n          }\n\n          taskArr.push(task);\n        }\n\n        status.tasks = taskArr;\n      }\n    }\n\n    console.log(dragNodeItem.current);\n    console.log(e.target);\n    console.log(dragItem.current);\n    console.log(\"draged card in column: \" + statusId);\n    let statuses = table.statuses;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrumTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, statuses.map(status => {\n    return /*#__PURE__*/React.createElement(Column, {\n      dragItem: dragItem,\n      dragNodeItem: dragNodeItem,\n      key: status.id,\n      status: status,\n      onDragEnter: onDragEnter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }\n    });\n  }));\n};\n\nexport default ScrumTable;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ScrumTable.js"],"names":["React","useState","useContext","useEffect","useRef","useParams","axios","Column","Task","ScrumTable","table","dragItem","dragNodeItem","statuses","setStatuses","onDragEnter","e","statusId","console","log","newStatuses","status","id","current","taskArr","task","tasks","taskId","push","target","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAE5B,QAAMC,QAAQ,GAAGP,MAAM,EAAvB,CAF4B,CAED;;AAC3B,QAAMQ,YAAY,GAAGR,MAAM,EAA3B,CAH4B,CAGG;;AAE/B,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACS,KAAK,CAACG,QAAP,CAAxC;;AAGA,QAAME,WAAW,GAAG,CAACC,CAAD,EAAGC,QAAH,KAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACG,QAAlB;AACA,QAAIO,WAAW,GAAGV,KAAK,CAACG,QAAxB;;AACA,SAAK,IAAIQ,MAAT,IAAmBD,WAAnB,EAA+B;AAC3B,UAAIC,MAAM,CAACC,EAAP,KAAcX,QAAQ,CAACY,OAAT,CAAiBN,QAAnC,EAA4C;AACxC,YAAIO,OAAO,GAAE,EAAb;;AACA,aAAK,IAAIC,IAAT,IAAiBJ,MAAM,CAACK,KAAxB,EAA8B;AAC1B,cAAID,IAAI,CAACH,EAAL,KAAYX,QAAQ,CAACY,OAAT,CAAiBI,MAAjC,EAAwC;AACpC;AACH;;AACDH,UAAAA,OAAO,CAACI,IAAR,CAAaH,IAAb;AACH;;AACDJ,QAAAA,MAAM,CAACK,KAAP,GAAeF,OAAf;AACH;AACJ;;AAEDN,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAY,CAACW,OAAzB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACa,MAAd;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACY,OAArB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA0BF,QAAtC;AACA,QAAIJ,QAAQ,GAAGH,KAAK,CAACG,QAArB;AACH,GArBD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QAAQ,CAACiB,GAAT,CAAaT,MAAM,IAAI;AACpB,wBAAO,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAGV,QAAnB;AACQ,MAAA,YAAY,EAAIC,YADxB;AAEQ,MAAA,GAAG,EAAES,MAAM,CAACC,EAFpB;AAGQ,MAAA,MAAM,EAAED,MAHhB;AAIQ,MAAA,WAAW,EAAEN,WAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOH,GARA,CADL,CADJ;AAaH,CA5CD;;AA8CA,eAAeN,UAAf","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\nimport Column from \"./Column\";\nimport Task from \"./Task\";\n\nconst ScrumTable = ({table}) => {\n\n    const dragItem = useRef(); //dragged task id and status id where it come from\n    const dragNodeItem = useRef(); // dragged html element\n\n    const [statuses, setStatuses] = useState(table.statuses)\n\n\n    const onDragEnter = (e,statusId)=>{\n        console.log(table.statuses)\n        let newStatuses = table.statuses;\n        for (let status of newStatuses){\n            if (status.id === dragItem.current.statusId){\n                let taskArr =[];\n                for (let task of status.tasks){\n                    if (task.id === dragItem.current.taskId){\n                        continue;\n                    }\n                    taskArr.push(task);\n                }\n                status.tasks = taskArr\n            }\n        }\n\n        console.log(dragNodeItem.current);\n        console.log(e.target);\n        console.log(dragItem.current);\n        console.log(\"draged card in column: \"+statusId);\n        let statuses = table.statuses;\n    };\n\n    return (\n        <div className={\"scrumTable\"}>\n            {statuses.map(status => {\n                return <Column dragItem ={dragItem}\n                               dragNodeItem = {dragNodeItem}\n                               key={status.id}\n                               status={status}\n                               onDragEnter={onDragEnter}\n                />\n\n            })}\n        </div>\n    );\n};\n\nexport default ScrumTable;"]},"metadata":{},"sourceType":"module"}