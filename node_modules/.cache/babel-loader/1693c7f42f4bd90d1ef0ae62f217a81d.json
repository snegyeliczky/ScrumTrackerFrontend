{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = _interopRequireWildcard(require(\"./path/lib/virtual-types\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _clone = _interopRequireDefault(require(\"lodash/clone\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = t.FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecratedKey = t.DEPRECATED_KEYS[nodeType];\n\n    if (deprecratedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecratedKey}`);\n      aliases = [deprecratedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = (0, _clone.default)(fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"blacklist\" || key === \"noScope\" || key === \"skipKeys\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/traverse/lib/visitors.js"],"names":["Object","defineProperty","exports","value","explode","verify","merge","virtualTypes","_interopRequireWildcard","require","t","_clone","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","visitor","_exploded","nodeType","keys","shouldIgnoreKey","parts","split","length","fns","part","ensureEntranceObjects","ensureCallbackArrays","wrapper","type","wrapCheck","types","mergePair","aliases","FLIPPED_ALIAS_KEYS","deprecratedKey","DEPRECATED_KEYS","console","trace","alias","existing","_verified","Error","validateVisitorMethods","TYPES","indexOf","visitors","visitorKey","path","val","concat","fn","TypeError","states","rootVisitor","i","state","visitorType","wrapWithStateOrWrapper","nodeVisitor","oldVisitor","newVisitor","Array","isArray","map","newFn","toString","enter","exit","checkPath","apply","arguments","dest","src"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = _interopRequireWildcard(require(\"./path/lib/virtual-types\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _clone = _interopRequireDefault(require(\"lodash/clone\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = t.FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecratedKey = t.DEPRECATED_KEYS[nodeType];\n\n    if (deprecratedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecratedKey}`);\n      aliases = [deprecratedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = (0, _clone.default)(fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"blacklist\" || key === \"noScope\" || key === \"skipKeys\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}"]},"metadata":{},"sourceType":"script"}