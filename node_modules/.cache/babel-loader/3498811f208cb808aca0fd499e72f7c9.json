{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport AddNewProject from \"./AddNewProject\";\nimport ProjectCard from \"./ProjectCard\";\nimport { ContentContainer } from \"../styledComps/styled\";\nimport { ApiOutlined } from \"@ant-design/icons\";\n\nconst ProjectList = () => {\n  const {\n    getProjects,\n    projects,\n    setShowArchive,\n    showArchive,\n    archiveProjects,\n    getArchiveProjects,\n    setArchiveProjects,\n    participateProjects\n  } = useContext(ProjectContext);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  function tasksDistributionInStatuses(project) {\n    let projectStatuses = project.table.statuses;\n    let taskCounts = {\n      start: 0,\n      inProgress: 0,\n      finish: 0,\n      all: 0\n    };\n    projectStatuses.map(status => {\n      taskCounts.all += status.tasks.length;\n\n      if (status.position === 1) {\n        taskCounts.start += status.tasks.length;\n      } else if (status.position === projectStatuses.length) {\n        taskCounts.finish += status.tasks.length;\n      } else {\n        taskCounts.inProgress += status.tasks.length;\n      }\n    });\n    return taskCounts;\n  }\n\n  function countTaskPercentageInProjectStatuses(project) {\n    let taskPercentageInStatuses = tasksDistributionInStatuses(project);\n\n    for (let [key, value] of Object.entries(taskPercentageInStatuses)) {\n      taskPercentageInStatuses[key] = parseInt((taskPercentageInStatuses[key] / taskPercentageInStatuses.all * 100).toFixed(0));\n    }\n\n    return taskPercentageInStatuses;\n  }\n\n  const showArchiveStyle = {\n    color: showArchive ? \"red\" : \"green\",\n    marginRight: \"10px\"\n  };\n\n  const handleShowArchives = () => {\n    setShowArchive(!showArchive);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Your Projects\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    className: \"project_page__project_list_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, projects.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"You don't have any project yet.\") : projects.map(project => {\n    let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      key: project.id,\n      project: project,\n      taskPercentageInProjectStatuses: taskPercentageInProjectStatuses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 36\n      }\n    });\n  })), /*#__PURE__*/React.createElement(AddNewProject, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_text participate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Projects I participated in\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    className: \"project_page__project_list_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, participateProjects.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"You don't have any project yet.\") : participateProjects.map(project => {\n    let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      key: project.id,\n      project: project,\n      taskPercentageInProjectStatuses: taskPercentageInProjectStatuses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 36\n      }\n    });\n  })), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_text archive\",\n    onClick: handleShowArchives,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ApiOutlined, {\n    onClick: e => setShowArchive(!showArchive),\n    style: showArchiveStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 51\n    }\n  }), \" \", !showArchive ? \"Show Archives\" : \"Hide Archives\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, !showArchive ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }) : archiveProjects.map(project => {\n    let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      key: project.id,\n      project: project,\n      taskPercentageInProjectStatuses: taskPercentageInProjectStatuses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 28\n      }\n    });\n  })));\n};\n\nexport default ProjectList;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectList.js"],"names":["React","useContext","useEffect","useState","ProjectContext","AddNewProject","ProjectCard","ContentContainer","ApiOutlined","ProjectList","getProjects","projects","setShowArchive","showArchive","archiveProjects","getArchiveProjects","setArchiveProjects","participateProjects","loading","setLoading","tasksDistributionInStatuses","project","projectStatuses","table","statuses","taskCounts","start","inProgress","finish","all","map","status","tasks","length","position","countTaskPercentageInProjectStatuses","taskPercentageInStatuses","key","value","Object","entries","parseInt","toFixed","showArchiveStyle","color","marginRight","handleShowArchives","taskPercentageInProjectStatuses","id","e"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {ProjectContext} from \"../contexts/ProjectContext\";\nimport AddNewProject from \"./AddNewProject\";\nimport ProjectCard from \"./ProjectCard\";\nimport {ContentContainer} from \"../styledComps/styled\"\nimport {ApiOutlined} from \"@ant-design/icons\";\n\nconst ProjectList = () => {\n\n    const {getProjects,\n           projects,\n           setShowArchive,\n           showArchive,\n           archiveProjects,\n           getArchiveProjects,\n           setArchiveProjects,\n           participateProjects} = useContext(ProjectContext);\n\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n            getProjects();\n        }, []\n    );\n\n\n    function tasksDistributionInStatuses(project) {\n        let projectStatuses = project.table.statuses;\n        let taskCounts = {start: 0, inProgress: 0, finish: 0, all: 0};\n        projectStatuses.map((status) => {\n            taskCounts.all += status.tasks.length;\n            if (status.position === 1) {\n                taskCounts.start += status.tasks.length;\n            } else if (status.position === projectStatuses.length) {\n                taskCounts.finish += status.tasks.length;\n            } else {\n                taskCounts.inProgress += status.tasks.length;\n            }\n        });\n        return taskCounts;\n    }\n\n    function countTaskPercentageInProjectStatuses(project) {\n\n        let taskPercentageInStatuses = tasksDistributionInStatuses(project);\n        for (let [key, value] of Object.entries(taskPercentageInStatuses)) {\n            taskPercentageInStatuses[key] = parseInt(((taskPercentageInStatuses[key] / taskPercentageInStatuses.all) * 100).toFixed(0));\n        }\n        return taskPercentageInStatuses;\n    }\n\n    const showArchiveStyle={\n        color: showArchive?\"red\":\"green\",\n        marginRight:\"10px\",\n    };\n\n    const handleShowArchives = () => {\n        setShowArchive(!showArchive);\n    };\n\n    return (\n        <div className=\"project_page\">\n            <ContentContainer>\n                <div className=\"project_text\">Your Projects</div>\n            </ContentContainer>\n            <ContentContainer className=\"project_page__project_list_container\">\n                {projects.length === 0 ?\n                    <div>You don't have any project yet.</div>\n                    :\n                    projects.map((project) => {\n                            let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n                            return <ProjectCard key={project.id}\n                                                project={project}\n                                                taskPercentageInProjectStatuses={taskPercentageInProjectStatuses}/>\n                        }\n                    )}\n            </ContentContainer>\n            <AddNewProject/>\n            <ContentContainer>\n                <div className=\"project_text participate\">\n                    Projects I participated in\n                </div>\n            </ContentContainer>\n            <ContentContainer className=\"project_page__project_list_container\">\n                {participateProjects.length === 0 ?\n                    <div>You don't have any project yet.</div>\n                    :\n                    participateProjects.map((project) => {\n                            let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n                            return <ProjectCard key={project.id}\n                                                project={project}\n                                                taskPercentageInProjectStatuses={taskPercentageInProjectStatuses}/>\n                        }\n                    )}\n            </ContentContainer>\n            <ContentContainer>\n                <div className=\"project_text archive\"\n                     onClick={handleShowArchives}><ApiOutlined onClick={(e) => setShowArchive(!showArchive)} style={showArchiveStyle}/> {!showArchive ? \"Show Archives\" : \"Hide Archives\"}\n                </div>\n            </ContentContainer>\n            <ContentContainer>\n            {!showArchive ? <div></div> :\n                archiveProjects.map(project => {\n                    let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n                    return <ProjectCard key={project.id}\n                                        project={project}\n                                        taskPercentageInProjectStatuses={taskPercentageInProjectStatuses}/>\n                })}\n            </ContentContainer>\n        </div>\n    )\n};\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}