{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectPage.js\";\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport ScrumTable from \"./ScrumTable\";\nimport { AdderComponent } from \"../styledComps/styled\";\nimport { PlusCircleOutlined, CheckOutlined } from '@ant-design/icons';\n\nconst ProjectPage = () => {\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState();\n  const [statuses, setStatuses] = useState();\n  const [loading, setLoading] = useState(true);\n  const newColumnRef = useRef();\n  const newTaskRef = useRef();\n  const [mouseOverAccept, setMouseOverAccept] = useState(false);\n\n  const getProject = async () => {\n    let response = await axios.get(\"http://localhost:8080/project/\" + id);\n    response.data.table.statuses.sort(function (a, b) {\n      return a.position - b.position;\n    });\n    response.data.table.statuses.map(status => {\n      status.tasks.sort(function (a, b) {\n        return a.position - b.position;\n      });\n    });\n    setProject(response.data);\n    console.log(response.data);\n    setLoading(false);\n  };\n\n  const addNewColumn = async columnName => {\n    if (newColumnRef.current.value.length < 3) {\n      alert(\"add name (minimum 3 character) to your status\");\n      return;\n    }\n\n    setLoading(true);\n    columnName = newColumnRef.current.value;\n    let projectId = id;\n    let newStatus = {\n      statusName: columnName,\n      projectId: projectId\n    };\n    await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n    getProject();\n  };\n\n  const addNewTask = async description => {\n    if (newTaskRef.current.value.length < 3) {\n      alert(\"add title (minimum 3 character) to the new task\");\n      return;\n    }\n\n    setLoading(true);\n    let projectId = id;\n    let task = {\n      statusId: project.table.statuses[0].id,\n      title: newTaskRef.current.value\n    };\n    await axios.post(\"http://localhost:8080/project/newtask\", task);\n    getProject();\n  };\n\n  useEffect(() => {\n    getProject();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_item_container_canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_item_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add_component_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AdderComponent, {\n    className: \"add_new_status adder_component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addNewColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \" new status\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: newColumnRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(AdderComponent, {\n    className: \"add_new_task adder_component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"Add new Task\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: newTaskRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onMouseLeave: setMouseOverAccept(false),\n    onMouseEnter: setMouseOverAccept(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, mouseOverAccept ? /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    style: {\n      fontSize: \"35px\",\n      padding: \"10px\",\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(CheckOutlined, {\n    style: {\n      fontSize: \"35px\",\n      padding: \"10px\",\n      color: \"green\"\n    },\n    onClick: addNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 38\n    }\n  })))), /*#__PURE__*/React.createElement(ScrumTable, {\n    key: project.table.id,\n    table: project.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectPage.js"],"names":["React","useState","useContext","useEffect","useRef","useParams","axios","ScrumTable","AdderComponent","PlusCircleOutlined","CheckOutlined","ProjectPage","id","project","setProject","statuses","setStatuses","loading","setLoading","newColumnRef","newTaskRef","mouseOverAccept","setMouseOverAccept","getProject","response","get","data","table","sort","a","b","position","map","status","tasks","console","log","addNewColumn","columnName","current","value","length","alert","projectId","newStatus","statusName","post","addNewTask","description","task","statusId","title","fontSize","padding","color"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\nimport ScrumTable from \"./ScrumTable\";\nimport {AdderComponent} from \"../styledComps/styled\";\nimport {\n    PlusCircleOutlined,\n    CheckOutlined\n} from '@ant-design/icons';\n\n\nconst ProjectPage = () => {\n\n    const {id} = useParams();\n    const [project, setProject] = useState();\n    const [statuses, setStatuses] = useState();\n    const [loading, setLoading] = useState(true);\n    const newColumnRef = useRef();\n    const newTaskRef = useRef();\n    const [mouseOverAccept, setMouseOverAccept] = useState(false);\n\n    const getProject = async () => {\n        let response = await axios.get(\"http://localhost:8080/project/\" + id);\n        response.data.table.statuses.sort(function (a, b) {\n            return a.position - b.position;\n        });\n        response.data.table.statuses.map(status => {\n            status.tasks.sort(function (a, b) {\n                return a.position - b.position;\n            })\n        });\n        setProject(response.data);\n        console.log(response.data);\n        setLoading(false);\n    };\n\n    const addNewColumn = async (columnName) => {\n        if (newColumnRef.current.value.length < 3) {\n            alert(\"add name (minimum 3 character) to your status\");\n            return;\n        }\n        setLoading(true);\n        columnName = newColumnRef.current.value;\n        let projectId = id;\n        let newStatus = {statusName: columnName, projectId: projectId};\n        await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n        getProject();\n    };\n\n    const addNewTask = async (description) => {\n        if (newTaskRef.current.value.length < 3) {\n            alert(\"add title (minimum 3 character) to the new task\");\n            return;\n        }\n        setLoading(true);\n        let projectId = id;\n        let task = {\n            statusId: project.table.statuses[0].id,\n            title: newTaskRef.current.value\n        };\n        await axios.post(\"http://localhost:8080/project/newtask\", task);\n        getProject();\n\n    };\n\n    useEffect(() => {\n        getProject();\n    }, []);\n\n    return (\n\n        <div className={\"project_item_container_canvas\"}>\n                <div className={\"project_item_container\"}>\n                    <div className={\"add_component_container\"}>\n                        <AdderComponent className={\"add_new_status adder_component\"}>\n                            <button onClick={addNewColumn}> new status</button>\n                            <input ref={newColumnRef}/>\n                        </AdderComponent>\n                        <AdderComponent className={\"add_new_task adder_component\"}>\n                            <label>Add new Task</label>\n                            <input ref={newTaskRef}/>\n\n                            <div onMouseLeave={setMouseOverAccept(false)}\n                                 onMouseEnter={setMouseOverAccept(true)}>\n                                {mouseOverAccept ?\n                                    <PlusCircleOutlined style={{fontSize: \"35px\", padding: \"10px\", color: \"green\"}}/>\n                                    :<CheckOutlined style={{fontSize: \"35px\", padding: \"10px\", color: \"green\"}}\n                                                         onClick={addNewTask}/>\n                                }\n                            </div>\n\n                        </AdderComponent>\n                    </div>\n\n                    <ScrumTable key={project.table.id} table={project.table}/>\n                </div>\n        </div>\n    );\n};\n\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}