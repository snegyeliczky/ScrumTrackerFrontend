{"version":3,"sources":["Services/ProjectCalls.js","Contexts/ProjectContext.js","Assets/StyledComps/styled.js","components/ProjectComponents/AddNewProject.js","components/ProjectComponents/ProjectCard.js","components/ProjectComponents/ProjectList.js","components/alertModal.js","Pages/ProjectPage/MyProjects.js","Services/TaskCalls.js","components/TaskModal.js","components/ProjectComponents/Task.js","Utils/UseComponentVisible.js","components/ProjectComponents/Column.js","components/ProjectComponents/ScrumTable.js","components/ProjectComponents/UsersModal.js","components/MailModal.js","components/ProjectComponents/CustomPieChart.js","components/InProgressLimitModal.js","components/ProjectComponents/taskDistibution.js","Pages/ProjectPage/ProjectPage.js","Services/AuthCalls.js","Parts/Navbar.js","Services/UserCalls.js","Pages/HomePage.js","Pages/AuthPage/Registration.js","Pages/AuthPage/Login.js","Pages/AuthPage/AuthPage.js","Utils/AuthCheck.js","App.js","serviceWorker.js","index.js"],"names":["getMyProjects","a","axios","get","response","data","getArchiveProjects","getParticipatedProjects","addNewProject","projectNameObject","post","getProject","id","alert","errors","addNewColumn","newStatus","addNewTask","task","deleteProject","projectId","delete","archiveProject","put","sendMail","emailCred","deleteStatus","statusID","tableId","getScrumTable","axiosResponse","sendProjectInProgressLimit","tableCredentials","ProjectContext","createContext","ProjectProvider","props","useState","projects","setProjects","archiveProjects","setArchiveProjects","showArchive","setShowArchive","participateProjects","setParticipateProjects","useEffect","getProjects","ProjectCalls","myProjects","participatedProjects","alertVisible","setAlertVisible","alertText","setAlertText","alertType","setAlertType","Provider","value","showErrorAlert","text","showSuccessAlert","handleAlertCancel","children","styled","button","AdderComponent","div","Input","input","ContentContainer","AddNewProject","projectNameRef","useRef","useContext","current","length","projectName","className","placeholder","ref","PlusCircleOutlined","style","fontSize","padding","color","onClick","ProjectCard","project","taskPercentageInProjectStatuses","history","useHistory","startEndColor","start","inProgressEndColorPercentage","inProgress","finalEndColorPercentage","finish","showArchiveStyle","archive","ProjectBackground","background","handleDelete","e","stopPropagation","push","DeleteOutlined","ApiOutlined","title","ProjectList","countTaskPercentageInProjectStatuses","taskPercentageInStatuses","projectStatuses","table","statuses","taskCounts","all","map","status","tasks","position","tasksDistributionInStatuses","Object","entries","key","parseInt","toFixed","marginRight","AlertModal","visible","onCancel","footer","width","message","description","type","showIcon","border","backgroundColor","MyProjects","handleDeleteTask","taskId","uploadStatusChangeToDatabase","newCardPosition","acceptTask","uploadChanges","editedTask","TaskModal","setTask","refreshStatusesFromBackend","usersOnProject","Option","Select","priorityList","Array","from","k","v","setVisible","priority","priorityRef","setPriorityRef","owner","ownerRef","setOwnerRef","descriptionRef","titleRef","positionRef","deadline","deadlineRef","setDeadlineRef","handleEdit","author","TaskCalls","FormOutlined","onOk","defaultValue","onChange","num","username","user","moment","format","date","dateString","Date","Task","statusId","onDragEnd","dragItem","statusFlag","projectAuthor","thisTask","dragging","setDragging","handleDragEnd","backgroundIfMyTask","localStorage","getItem","currTaskId","showAcceptStyle","finished","taskObject","draggable","aria-dropeffect","onDragStart","event","dragItemParams","setTimeout","handleDrag","LikeOutlined","SmileTwoTone","Intl","DateTimeFormat","month","day","AlertTwoTone","twoToneColor","number","alertColor","UseComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","handleClickOutside","contains","target","document","addEventListener","removeEventListener","Column","onDragEnter","newTaskNameRef","showAccept","setShowAccept","console","log","statusName","taskName","ScrumTable","countBusinessValue","refreshScrumTableBackend","setStatuses","newColumnRef","DragItemColumnId","setDragItemColumnId","sort","b","prevColumn","refreshItem","toStatusId","fromStatusId","newStatusId","refreshStatus","newStatuses","taskArr","index","indexOf","splice","onDragOver","preventDefault","i","PlusOutlined","UsersModal","participants","setValue","users","setUsers","projectParticipants","setProjectParticipants","userName","userObj","UsergroupAddOutlined","paddingLeft","borderBottom","paddingBottom","getItemValue","item","items","renderItem","highlighted","handelSearchChange","onSelect","UserAddOutlined","marginLeft","participant","UserOutlined","MailModal","email","setEmail","validateEmail","test","String","toLowerCase","MailOutlined","CustomPieChart","visualMark","label","segmentsStyle","transition","cursor","strokeWidth","selectedPart","setSelectedPart","dataEntry","Math","round","percentage","handleVisual","labelStyle","fontWeight","animate","animationDuration","lineWidth","radius","segmentIndex","handleSelectPart","InProgressLimitModal","taskLimit","limit","setLimit","FileExcelOutlined","TaskDistibution","SnippetsOutlined","ProjectPage","useParams","setProject","scrumTable","setScrumTable","taskCount","setTaskCount","businessValueCount","setBusinessValueCount","setUsersOnProject","getColaboratorsFromProject","myProject","getTaskChartData","getBusinessValueChartData","newScrumTable","columnName","usersWithTasks","getUsersWithTasks","login","registration","handleLogout","Navbar","AuthCalls","clear","to","getUser","HomePage","setUser","UserCalls","href","BookOutlined","projectsCount","participantCount","tasksCount","RegistrationPage","handleLogin","setUsername","password","setPassword","validateInput","onSubmit","ReferenceError","TypeError","RangeError","LoginPage","onLogin","setItem","AuthPage","setLogin","loginBtnStyle","registrationBtnStyle","Login","Registration","OriginalComponent","isPrivate","App","exact","path","component","AuthCheck","Boolean","window","location","hostname","match","defaults","withCredentials","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","unregister","catch","error"],"mappings":"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","file":"static/js/main.e1bdaae4.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\nexport default {\n\n\n    getMyProjects: async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getactiveprojects\");\n        return response.data;\n    },\n\n    getArchiveProjects: async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getarchiveprojects\");\n        return response.data;\n    },\n\n    getParticipatedProjects: async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getparticipateprojects\");\n        return response.data;\n    },\n\n    addNewProject: async (projectNameObject) => {\n        await axios.post(\"http://localhost:8080/project/create\", projectNameObject);\n    },\n\n    getProject: async (id) => {\n        try {\n            let response = await axios.get(\"http://localhost:8080/project/\" + id);\n            return response.data;\n        } catch (e) {\n\n            alert(e.response.data.errors);\n            return [];\n\n        }\n\n    },\n\n    addNewColumn : async (newStatus) => {\n        await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n    },\n\n    addNewTask : async (task) => {\n        await axios.post(\"http://localhost:8080/project/newtask\", task);\n    },\n\n     deleteProject : async (projectId) => {\n        await axios.delete(\"http://localhost:8080/project/delete/\" + projectId);\n    },\n\n    archiveProject : async (projectId) =>{\n        await axios.put(\"http://localhost:8080/project/archive/\"+projectId);\n    },\n\n    sendMail : async (projectId,emailCred) =>{\n       await axios.post(\"http://localhost:8080/project/email/\"+projectId,emailCred);\n    },\n\n    deleteStatus : async (statusID, tableId) => {\n        await axios.delete(\"http://localhost:8080/project/deletestatus?statusid=\" + statusID + \"&tableid=\" + tableId);\n    },\n\n    getScrumTable : async (tableId) =>{\n        let axiosResponse = await axios.get(\"http://localhost:8080/project/gettable/\" + tableId);\n        return axiosResponse.data;\n    },\n\n    sendProjectInProgressLimit : async (tableCredentials) =>{\n        let axiosResponse = await axios.put(\"http://localhost:8080/project/table/limit/\", tableCredentials);\n        return axiosResponse.data;\n    }\n\n\n\n}","import React, {useState, createContext, useEffect} from \"react\";\nimport axios from \"axios\";\nimport ProjectCalls from \"../Services/ProjectCalls\";\nexport const ProjectContext = createContext();\n\nexport const ProjectProvider = props => {\n\n    const [projects, setProjects] = useState([]);\n    const [archiveProjects, setArchiveProjects] = useState([]);\n    const [showArchive,setShowArchive] = useState(false);\n    const [participateProjects, setParticipateProjects] = useState([]);\n\n    useEffect(() => {\n        getProjects();\n    },[]);\n\n    const getProjects = () => {\n        getMyProjects();\n        getArchiveProjects();\n        getParticipatedProjects();\n    };\n\n    const getMyProjects = async () => {\n        let myProjects =await ProjectCalls.getMyProjects();\n        setProjects(myProjects);\n    };\n\n    /*const getProjectsWithArchive = async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getmyprojectswitharchive\");\n        setProjects(response.data);\n    };\n*/\n    const getArchiveProjects = async () => {\n        let archiveProjects = await ProjectCalls.getArchiveProjects();\n        setArchiveProjects(archiveProjects);\n    };\n\n    const getParticipatedProjects = async () => {\n            let participatedProjects = await ProjectCalls.getParticipatedProjects();\n            setParticipateProjects(participatedProjects);\n        };\n\n\n    /*Alert modal*/\n\n    const[alertVisible,setAlertVisible]=useState(false);\n    const [alertText,setAlertText] =useState(\"semmi\");\n    const [alertType,setAlertType] =useState(\"\");\n\n    function handleAlertCancel() {\n        setAlertVisible(false);\n        setAlertText(\"\")\n    }\n\n    function showErrorAlert(text) {\n        setAlertText(text);\n        setAlertType(\"error\");\n        setAlertVisible(true);\n    }\n\n    function showSuccessAlert(text) {\n        setAlertText(text);\n        setAlertType(\"success\");\n        setAlertVisible(true);\n    }\n\n\n\n\n    return (\n        <ProjectContext.Provider\n            value={{getProjects,\n                    projects,\n                    setProjects,\n                    setShowArchive,\n                    showArchive,\n                    archiveProjects,\n                    getArchiveProjects,\n                    setArchiveProjects,\n                    participateProjects,\n\n                    setAlertVisible,\n                    alertVisible,\n                    showErrorAlert,\n                    showSuccessAlert,\n                    handleAlertCancel,\n                    alertType,\n                    alertText\n\n            }}\n        >\n            {props.children}\n        </ProjectContext.Provider>\n    )\n};\n\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n    background: transparent;\n    border-radius: 3px;\n    border: 2px solid palevioletred;\n    color: palevioletred;\n    margin: 0 1em;\n    padding: 0.25em 1em;`;\n\nexport const AdderComponent = styled.div`\n    display: flex;\n    max-width: 170px;\n    flex-wrap: wrap;\n    justify-content: center;\n    font-size: 18px;\n    font-weight: bolder;\n    color: #373A55;\n    margin: 10px;\n    padding: 10px;\n    `;\n\nexport const Input = styled.input`\n    color: #373A55;\n    border: 1px solid #373A55;\n    padding: 6px;\n    max-width: 100%;\n    `;\n\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction:row;\n    justify-content: center;\n    padding: 1.5rem;\n    `;","import React, {useContext, useRef} from \"react\";\nimport axios from 'axios';\nimport {ProjectContext} from '../../Contexts/ProjectContext'\nimport {AdderComponent,Input} from \"../../Assets/StyledComps/styled\";\nimport {\n    PlusCircleOutlined,\n} from '@ant-design/icons';\nimport ProjectCalls from \"../../Services/ProjectCalls\";\n\nconst AddNewProject = () => {\n\n    const projectNameRef = useRef();\n    const {getProjects} = useContext(ProjectContext);\n    const {showErrorAlert,showSuccessAlert} = useContext(ProjectContext);\n\n    async function addNewProject() {\n        if (projectNameRef.current.value.length < 3) {\n            showErrorAlert(\"Project title must be minimum 3 character\");\n            return;\n        }\n        let projectNameObject = {\n            projectName: projectNameRef.current.value\n        };\n        await ProjectCalls.addNewProject(projectNameObject);\n        projectNameRef.current.value = \"\";\n        getProjects();\n    }\n\n    return (\n        <div className=\"project_page__create_project_container\">\n            <AdderComponent>\n                <label>Create Project</label>\n                <Input\n                    placeholder={\"Project Name\"}\n                    ref={projectNameRef}\n                />\n                <PlusCircleOutlined\n                    style={{fontSize: \"35px\", padding: \"10px\", color: \"green\"}}\n                    onClick={addNewProject}\n                />\n            </AdderComponent>\n        </div>\n    )\n};\nexport default AddNewProject;","import React, {useContext} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {ApiOutlined, DeleteOutlined} from \"@ant-design/icons\";\nimport {ProjectContext} from \"../../Contexts/ProjectContext\";\nimport ProjectCalls from \"../../Services/ProjectCalls\";\n\nconst ProjectCard = ({project, taskPercentageInProjectStatuses}) => {\n\n    const {showErrorAlert,showSuccessAlert} = useContext(ProjectContext);\n    const history = useHistory();\n    const {getProjects} = useContext(ProjectContext);\n\n    const handleClick = () => {\n        history.push(\"/project/\" + project.id)\n    };\n\n    const startEndColor=taskPercentageInProjectStatuses.start;\n    const inProgressEndColorPercentage =taskPercentageInProjectStatuses.start + taskPercentageInProjectStatuses.inProgress;\n    const finalEndColorPercentage = taskPercentageInProjectStatuses.inProgress+taskPercentageInProjectStatuses.finish;\n\n    const showArchiveStyle={\n        color: project.archive?\"red\":\"green\",\n    };\n\n    const ProjectBackground = {\n\n        background: `linear-gradient(90deg, rgba(124,33,33,0.8) 0% ${startEndColor}% ,\n         rgba(253,192,29,0.8) ${startEndColor}%  ${inProgressEndColorPercentage}% ,\n         rgba(69,252,70,0.8) ${inProgressEndColorPercentage}%  ${finalEndColorPercentage}% )`,\n    };\n\n    const handleDelete = async (e) => {\n        e.stopPropagation();\n        try {\n            await ProjectCalls.deleteProject(project.id);\n            getProjects();\n        } catch (e) {\n            showErrorAlert(e.response.data.errors)\n        }\n\n    };\n\n    const archiveProject = async (e) =>{\n        e.stopPropagation();\n        await ProjectCalls.archiveProject(project.id);\n        getProjects();\n\n    };\n\n    return (\n        <div className={\"project_card\"} onClick={handleClick} style={ProjectBackground}>\n            <div className={\"project_tool_container\"}>\n                <DeleteOutlined onClick={(e) => handleDelete(e)}/>\n                <ApiOutlined onClick={(e)=>archiveProject(e)} style={showArchiveStyle}/>\n            </div>\n            <div className={\"project_card_title\"}>{project.title}</div>\n        </div>\n    );\n};\n\nexport default ProjectCard;","import React, {useContext, useEffect, useState} from \"react\";\nimport {ProjectContext} from \"../../Contexts/ProjectContext\";\nimport AddNewProject from \"./AddNewProject\";\nimport ProjectCard from \"./ProjectCard\";\nimport {ContentContainer} from \"../../Assets/StyledComps/styled\"\nimport {ApiOutlined} from \"@ant-design/icons\";\n\nconst ProjectList = () => {\n\n    const {getProjects,\n           projects,\n           setShowArchive,\n           showArchive,\n           archiveProjects,\n           getArchiveProjects,\n           setArchiveProjects,\n           participateProjects} = useContext(ProjectContext);\n\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n            getProjects();\n        }, []\n    );\n\n\n    function tasksDistributionInStatuses(project) {\n        let projectStatuses = project.table.statuses;\n        let taskCounts = {start: 0, inProgress: 0, finish: 0, all: 0};\n        projectStatuses.map((status) => {\n            taskCounts.all += status.tasks.length;\n            if (status.position === 1) {\n                taskCounts.start += status.tasks.length;\n            } else if (status.position === projectStatuses.length) {\n                taskCounts.finish += status.tasks.length;\n            } else {\n                taskCounts.inProgress += status.tasks.length;\n            }\n        });\n        return taskCounts;\n    }\n\n    function countTaskPercentageInProjectStatuses(project) {\n\n        let taskPercentageInStatuses = tasksDistributionInStatuses(project);\n        for (let [key, value] of Object.entries(taskPercentageInStatuses)) {\n            taskPercentageInStatuses[key] = parseInt(((taskPercentageInStatuses[key] / taskPercentageInStatuses.all) * 100).toFixed(0));\n        }\n        return taskPercentageInStatuses;\n    }\n\n    const showArchiveStyle={\n        color: showArchive?\"red\":\"green\",\n        marginRight:\"10px\",\n    };\n\n    const handleShowArchives = () => {\n        setShowArchive(!showArchive);\n    };\n\n    return (\n        <div className=\"project_page\">\n            <ContentContainer>\n                <div className=\"project_text\">Your Projects</div>\n            </ContentContainer>\n            <ContentContainer className=\"project_page__project_list_container\">\n                {projects.length === 0 ?\n                    <div>You don't have any project yet.</div>\n                    :\n                    projects.map((project) => {\n                            let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n                            return <ProjectCard key={project.id}\n                                                project={project}\n                                                taskPercentageInProjectStatuses={taskPercentageInProjectStatuses}/>\n                        }\n                    )}\n            </ContentContainer>\n            <AddNewProject/>\n            <ContentContainer>\n                <div className=\"project_text participate\">\n                    Projects I participated in\n                </div>\n            </ContentContainer>\n            <ContentContainer className=\"project_page__project_list_container\">\n                {participateProjects.length === 0 ?\n                    <div>You don't have any project yet.</div>\n                    :\n                    participateProjects.map((project) => {\n                            let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n                            return <ProjectCard key={project.id}\n                                                project={project}\n                                                taskPercentageInProjectStatuses={taskPercentageInProjectStatuses}/>\n                        }\n                    )}\n            </ContentContainer>\n            <ContentContainer>\n                <div className=\"project_text archive\"\n                     onClick={handleShowArchives}><ApiOutlined onClick={(e) => setShowArchive(!showArchive)} style={showArchiveStyle}/> {!showArchive ? \"Show Archives\" : \"Hide Archives\"}\n                </div>\n            </ContentContainer>\n            <ContentContainer>\n            {!showArchive ? <div></div> :\n                archiveProjects.map(project => {\n                    let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n                    return <ProjectCard key={project.id}\n                                        project={project}\n                                        taskPercentageInProjectStatuses={taskPercentageInProjectStatuses}/>\n                })}\n            </ContentContainer>\n        </div>\n    )\n};\n\nexport default ProjectList;","import React, {useContext, useState} from 'react';\nimport { Alert } from 'antd';\nimport {Modal} from \"antd\";\nimport {ProjectContext} from \"../Contexts/ProjectContext\";\n\nconst AlertModal = () => {\n\n    const {\n        alertVisible,\n        handleAlertCancel,\n        alertText,\n        alertType\n        } = useContext(ProjectContext);\n\n    return (\n            <Modal\n                visible={alertVisible}\n                onCancel={handleAlertCancel}\n                footer={null}\n                width={400}\n            >\n            <Alert\n                message={alertType===\"error\"?\"Error\":\"Success\"}\n                description={alertText}\n                type={alertType}\n                showIcon\n                style={{border:\"0px\", backgroundColor: \"inherit\"}}\n            />\n            </Modal>\n    );\n};\n\nexport default AlertModal;","import React from \"react\";\nimport ProjectList from \"../../components/ProjectComponents/ProjectList\";\nimport \"../../Assets/Styles/ProjectStyle.css\"\nimport AlertModal from \"../../components/alertModal\";\nconst MyProjects = () => {\n    return (\n        <ProjectList/>\n    )\n};\nexport default MyProjects;","import React from 'react';\nimport axios from 'axios'\n\nexport default {\n\n    handleDeleteTask : async (taskId) => {\n        await axios.delete(\"http://localhost:8080/task/delete/\" + taskId);\n    },\n\n    uploadStatusChangeToDatabase : async (newCardPosition) => {\n        await axios.put(\"http://localhost:8080/task/transfer\", newCardPosition);\n    },\n\n    acceptTask : async(taskId)=> {\n        await axios.put(\"http://localhost:8080/task/finishtask/\" + taskId);\n    },\n\n    uploadChanges: async (taskId,editedTask)=> {\n        let axiosResponse = await axios.put(\"http://localhost:8080/task/edit/\" + taskId, editedTask);\n        return axiosResponse.data;\n    },\n}","import React, {useContext, useEffect, useRef, useState} from 'react';\nimport {Modal, Button, DatePicker} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../Assets/StyledComps/styled\";\nimport TaskCalls from \"../Services/TaskCalls\";\nimport Select from \"antd/es/select\";\nimport moment from 'moment';\nimport locale from 'antd/es/date-picker/locale/hu_HU';\nimport {LocalDate} from \"@js-joda/core\";\nimport {ProjectContext} from \"../Contexts/ProjectContext\";\n\n\n\nconst TaskModal = ({task, setTask, refreshStatusesFromBackend, usersOnProject}) => {\n\n    const {Option} = Select;\n    const priorityList = Array.from({length: 10}, (k, v) => v + 1);\n\n    const {showErrorAlert, showSuccessAlert} = useContext(ProjectContext);\n    const [visible, setVisible] = useState(false);\n    const [priorityRef, setPriorityRef] = useState(task.priority);\n    const [ownerRef, setOwnerRef] = useState(task.owner);\n    const descriptionRef = useRef(task.description);\n    const titleRef = useRef(task.title);\n    const positionRef = useRef(task.position);\n    const [deadlineRef,setDeadlineRef] = useState(task.deadline);\n\n    const options = {\n        year: 'numeric', month: 'numeric', day: 'numeric',\n        hour: 'numeric', minute: 'numeric', second: 'numeric'\n    };\n\n    const handleEdit = () => {\n        if (titleRef.current.value === \"\") {\n            showErrorAlert(\"please add name to your task\");\n            titleRef.current.value = task.title;\n            return;\n        }\n        uploadChanges();\n    };\n\n    async function uploadChanges() {\n        let editedTask = {\n            id: null,\n            author: null,\n            position: task.position === positionRef.current.value ? null : positionRef.current.value,\n            priority: task.priority === priorityRef ? null : priorityRef,\n            description: task.description === descriptionRef.current.value && task.description === null ? null : descriptionRef.current.value,\n            title: task.title === titleRef.current.value ? null : titleRef.current.value,\n            owner: task.owner === ownerRef ? null : ownerRef,\n            deadline: task.deadline === deadlineRef ? null : deadlineRef\n        };\n        let axiosResponse = await TaskCalls.uploadChanges(task.id, editedTask);\n        setTask(axiosResponse);\n        refreshStatusesFromBackend();\n    }\n\n\n    function handleOk() {\n        setVisible(false);\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true)\n    }\n\n    function handleTimeChange(date, dateString){\n        date= new Date(date);\n        setDeadlineRef(date);\n    }\n\n\n    return (\n        <div>\n            <FormOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n                footer={null}\n            >\n                <h2>Edit Task</h2>\n                <div className={\"task_modal\"}>\n                    <div className={\"text_modal\"}>\n                        <label>Title: </label>\n                        <input\n                            className={\"text_input title\"}\n                            placeholder={\"Story Title\"}\n                            defaultValue={task.title}\n                            ref={titleRef}/>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <div className={\"text_modal\"}>\n                        <label>Description: </label>\n                        <textArea\n                            className={\"text_input userStory\"}\n                            placeholder={\"user story\"}\n                            ref={descriptionRef}>\n                            {task.description}\n                        </textArea>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <ContentContainer>\n                        <div className={\"task_data_selector\"}>\n                            <label>Priority: </label>\n                            <Select\n                                style={{width:\"90%\"}}\n                                className={\"priority\"}\n                                defaultValue={task.priority}\n                                onChange={(value) => {\n                                    setPriorityRef(value);\n                                }\n                                }\n                                type=\"number\"\n                            >\n                                {\n                                    priorityList.map((num) => {\n                                        return <Option key={num} value={num}>{num}</Option>\n                                    })\n                                }\n                            </Select>\n                            <div className=\"modal_btn\"\n                                 onClick={handleEdit}>Save\n                            </div>\n                        </div>\n                        <div className={\"task_data_selector\"}>\n                            <label>Owner: </label>\n                            <Select\n                                style={{width:\"90%\"}}\n                                className={\"owner\"}\n                                defaultValue={task.owner ? task.owner.username : \"No Owner Yet\"}\n                                onChange={(value) => {\n                                    usersOnProject.map((user) => {\n                                        if (user.username === value) {\n                                            setOwnerRef(user);\n                                        }\n                                    });\n                                }}>\n                                {usersOnProject.map((user) => {\n                                    return <Option key={user.id} value={user.username}>{user.username}</Option>\n                                })}\n\n                            </Select>\n                            <div className=\"modal_btn\"\n                                 onClick={handleEdit}>Save\n                            </div>\n                        </div>\n                        <div className={\"task_data_selector\"}>\n                            <label>Deadline: </label>\n                            <DatePicker\n                                //locale={locale}\n                                style={{width:\"90%\"}}\n                                className={\"deadline_picker\"}\n                                defaultValue={deadlineRef?moment(deadlineRef):''}\n                                format={'MM.DD'/* + \"hh.mm\"*/}\n                                onChange={handleTimeChange}\n                                //showTime={true}\n                            />\n\n                            <div className=\"modal_btn\"\n                                 onClick={handleEdit}>Save\n                            </div>\n                        </div>\n                    </ContentContainer>\n                </div>\n\n            </Modal>\n\n\n        </div>\n    );\n};\n\nexport default TaskModal;","import React, {useState, useRef, useContext, useEffect} from 'react';\nimport {DeleteOutlined, ApiOutlined, AlertTwoTone, SmileTwoTone,LikeOutlined} from \"@ant-design/icons\";\nimport {ContentContainer} from \"../../Assets/StyledComps/styled\";\nimport TaskModal from \"../TaskModal\";\nimport TaskCalls from \"../../Services/TaskCalls\";\n\nconst Task = ({\n                  task, statusId, onDragEnd, dragItem, handleDeleteTask, refreshStatusesFromBackend,\n                  usersOnProject, statusFlag, projectAuthor\n              }) => {\n\n    const [thisTask, setTask] = useState(task);\n    const [dragging, setDragging] = useState(false);\n\n    const visualDateFormat = {month: 'long', day: 'numeric'};\n\n\n\n    const handleDrag = (e) => {\n        let dragItemParams = {\n            statusId: statusId,\n            taskObject: task\n        };\n        dragItem.current = dragItemParams;\n        setTimeout(() => {\n            setDragging(true);\n        }, 0)\n    };\n\n    const draggingStyle = (currTaskId) => {\n        return currTaskId === dragItem.current.taskObject.id ? \"dragged task_card\" : \"task_card\";\n    };\n\n    const handleDragEnd = (e) => {\n        onDragEnd(task);\n        setDragging(false);\n        dragItem.current = null;\n    };\n\n    async function acceptTask(e) {\n        e.stopPropagation();\n        await TaskCalls.acceptTask(task.id);\n        refreshStatusesFromBackend();\n    }\n\n    const deleteTask = () => {\n        handleDeleteTask(task.id)\n    };\n\n    const backgroundIfMyTask = {\n        backgroundColor: localStorage.getItem(\"username\") === (task.owner?.username ?? \"\") ? \"rgba(95, 194, 226,0.8)\" : \"\"\n    };\n\n    function alertColor() {\n        let number = new Date(task.deadline) - new Date();\n        if (number < 40000000) {\n            return \"red\";\n        } else if (number < 100000000) {\n            return \"Orange\";\n        } else {\n            return \"\";\n        }\n\n    };\n\n    const showAcceptStyle={\n        color: task.finished?\"green\":\"\",\n    };\n\n    return (\n        <div style={backgroundIfMyTask}\n             className={dragging ? draggingStyle(task.id) : \"task_card\"}\n             draggable={true}\n             aria-dropeffect={\"none\"}\n             onDragStart={(event) => (handleDrag(event))}\n             onDragEnd={(e) => handleDragEnd(e)}\n        >\n            <div className={\"status_tool_container\"}>\n                <div>\n                    <DeleteOutlined onClick={deleteTask}/>\n                </div>\n                <TaskModal\n                    task={thisTask}\n                    setTask={setTask}\n                    refreshStatusesFromBackend={refreshStatusesFromBackend}\n                    usersOnProject={usersOnProject}\n                />\n                {\n                    (projectAuthor === localStorage.getItem(\"username\") && statusFlag === \"finish\") ?\n                        <div>\n                            <LikeOutlined style={showAcceptStyle} onClick={(e) => acceptTask(e)}/>\n                        </div>\n                        :\n                        ''\n\n                }\n            </div>\n            <div className=\"project_title\">{thisTask.title}</div>\n            <div className={\"task_data_container\"}>\n                <div className={\"owner\"}>{thisTask.owner ? <SmileTwoTone/> : ''}</div>\n                <div className={\"businessValue\"}>{thisTask.priority > 0 ? \"Pri.: \" + thisTask.priority : ''}</div>\n                <div className={\"deadline\"}>\n                    {thisTask.deadline ? new Intl.DateTimeFormat('en-US', visualDateFormat).format(new Date(thisTask.deadline)) : \"\"}\n                    {\" \"}\n                    {thisTask.deadline ? <AlertTwoTone twoToneColor={alertColor()}/> : ''}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Task;","import { useState, useEffect, useRef } from 'react';\n\nfunction UseComponentVisible(initialIsVisible) {\n    const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\n    const ref = useRef(null);\n\n    const handleClickOutside = (event) => {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setIsComponentVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('click', handleClickOutside, true);\n        return () => {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    });\n\n    return { ref, isComponentVisible, setIsComponentVisible };\n}\n\nexport default UseComponentVisible;","import React, {useState, useRef, useContext, useEffect} from 'react';\nimport Task from \"./Task\";\nimport {\n    DeleteOutlined\n} from '@ant-design/icons';\nimport axios from \"axios\";\nimport UseComponentVisible from \"../../Utils/UseComponentVisible\";\nimport {ProjectContext} from \"../../Contexts/ProjectContext\";\nimport TaskCalls from \"../../Services/TaskCalls\";\nimport LikeOutlined from \"@ant-design/icons/lib/icons/LikeOutlined\";\n\nconst Column = ({status, onDragEnter, dragItem, onDragEnd, deleteStatus, refreshStatusesFromBackend,\n                    statusFlag, addNewTask, usersOnProject, projectAuthor }) => {\n\n    const newTaskNameRef = useRef();\n    const {showErrorAlert,showSuccessAlert} = useContext(ProjectContext);\n    const [showAccept,setShowAccept] = useState(true);\n\n\n    const handleShowAcceptChange =()=>{\n        setShowAccept(!showAccept);\n        refreshStatusesFromBackend();\n    };\n\n    //Click outside effect fields\n    const {\n        ref,\n        isComponentVisible,\n        setIsComponentVisible\n    } = UseComponentVisible(false);\n\n    const handelDeleteClick = () => {\n        deleteStatus(status.id);\n    };\n\n    const handleDeleteTask = async (taskId) => {\n        console.log(\"delete\");\n        await TaskCalls.handleDeleteTask(taskId);\n        refreshStatusesFromBackend();\n    };\n\n    const handleAddNewTask = () => {\n        console.log(newTaskNameRef.current.value);\n        if (newTaskNameRef.current.value.length < 3) {\n            showErrorAlert(\"please minimum 3 character!\");\n            newTaskNameRef.current.value = \"\";\n            return;\n        }\n        let taskName = newTaskNameRef.current.value;\n        addNewTask(taskName, status.id);\n        newTaskNameRef.current.value = \"\";\n    };\n\n    const showAcceptStyle={\n        color: showAccept?\"green\":\"\",\n    };\n\n    return (\n        <div className={\"project_column\"}\n             onDragEnter={(e) => (onDragEnter(status.id))}\n        >\n            <div>\n                <div className={\"status_tool_container\"}>\n                    <DeleteOutlined onClick={handelDeleteClick}/>\n                    {statusFlag===\"finish\"? <LikeOutlined style={showAcceptStyle} onClick={handleShowAcceptChange}/>:\"\"}\n                </div>\n                <h3>{status.statusName} </h3>\n            </div>\n            {status.tasks.length === 0 ?\n                <h4>No task yet</h4>\n                : status.tasks.map(task => {\n                   return  showAccept ?\n                    <Task\n                        refreshStatusesFromBackend={refreshStatusesFromBackend}\n                        handleDeleteTask={handleDeleteTask}\n                        onDragEnd={onDragEnd}\n                        dragItem={dragItem}\n                        statusId={status.id}\n                        key={task.id}\n                        task={task}\n                        onDragEnter={onDragEnter}\n                        usersOnProject={usersOnProject}\n                        projectAuthor = {projectAuthor}\n                        statusFlag ={statusFlag}\n                    />\n                    : task.finished? \"\"\n                           :<Task\n                               refreshStatusesFromBackend={refreshStatusesFromBackend}\n                               handleDeleteTask={handleDeleteTask}\n                               onDragEnd={onDragEnd}\n                               dragItem={dragItem}\n                               statusId={status.id}\n                               key={task.id}\n                               task={task}\n                               onDragEnter={onDragEnter}\n                               usersOnProject={usersOnProject}\n                               projectAuthor = {projectAuthor}\n                               statusFlag ={statusFlag}\n                           />;\n\n                })}\n            <div ref={ref}>\n                {isComponentVisible && (\n                    <div className=\"add_new_task_container\">\n                        <input className=\"add_new_task_text\" ref={newTaskNameRef}/>\n                        <div className=\"add_new_task_btn\" onClick={handleAddNewTask}>save</div>\n                    </div>\n                )}\n                {!isComponentVisible && (\n                    <div className=\"add_new_task\" onClick={() => setIsComponentVisible(true)}>\n                        add new task\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Column;","import React, {useState, useContext, useEffect, useRef} from 'react';\nimport Column from \"./Column\";\nimport axios from \"axios\";\nimport {ContentContainer} from \"../../Assets/StyledComps/styled\"\nimport {PlusOutlined} from \"@ant-design/icons\";\nimport UseComponentVisible from \"../../Utils/UseComponentVisible\";\nimport ProjectCalls from \"../../Services/ProjectCalls\";\nimport TaskCalls from \"../../Services/TaskCalls\";\nimport {ProjectContext} from \"../../Contexts/ProjectContext\";\n\nconst ScrumTable = ({\n                        table, addNewColumn, addNewTask, countBusinessValue,\n                        usersOnProject, tasksDistributionInStatuses, refreshScrumTableBackend,\n                        projectAuthor\n                    }) => {\n\n    const {showErrorAlert,showSuccessAlert} = useContext(ProjectContext);\n    const [statuses, setStatuses] = useState(table.statuses);\n    const newColumnRef = useRef();\n    const [DragItemColumnId, setDragItemColumnId] = useState();\n    const dragItem = useRef(); //dragged task id and status id where it come from\n\n\n    //Click outside effect fields\n    const {\n        ref,\n        isComponentVisible,\n        setIsComponentVisible\n    } = UseComponentVisible(false);\n\n\n    const deleteStatus = async (statusID) => {\n        await ProjectCalls.deleteStatus(statusID, table.id);\n        refreshScrumTableBackend();\n    };\n\n    const refreshStatusesFromBackend = async () => {\n        let ScrumTable = await ProjectCalls.getScrumTable(table.id);\n        ScrumTable.statuses.sort(function (a, b) {\n            return a.position - b.position;\n        });\n        ScrumTable.statuses.map(status =>{\n            status.tasks.sort(function (a,b) {\n                return a.position - b.position;\n            });\n        });\n        tasksDistributionInStatuses(ScrumTable.statuses);\n        countBusinessValue(ScrumTable.statuses);\n        setStatuses(ScrumTable.statuses);\n    };\n\n    const uploadStatusChangeToDatabase = async () => {\n        let prevColumn = dragItem.current.statusId;\n        let refreshItem = {\n            toStatusId: DragItemColumnId,\n            fromStatusId: dragItem.current.statusId,\n            taskId: dragItem.current.taskObject.id\n        };\n        try {\n            await TaskCalls.uploadStatusChangeToDatabase(refreshItem);\n        } catch (e) {\n            showErrorAlert(e.response.data.errors);\n            //alert(e.response.data.errors);\n            refreshStatusesFromBackend();\n            console.log(prevColumn);\n\n        }\n    };\n\n\n    const onDragEnter = (newStatusId) => {\n        setDragItemColumnId(newStatusId);\n    };\n\n    const onDragEnd = async () => {\n        setStatuses(refreshStatus(DragItemColumnId));\n        await uploadStatusChangeToDatabase();\n    };\n\n\n    const refreshStatus = (newStatusId) => {\n        let newStatuses = [...statuses];\n        for (let status of newStatuses) {\n            if (status.id === dragItem.current.statusId) {\n                let taskArr = [...status.tasks];\n                let index = taskArr.indexOf(dragItem.current.taskObject);\n                if (index > -1) {\n                    taskArr.splice(index, 1)\n                }\n                status.tasks = taskArr\n            }\n            if (newStatusId === status.id) {\n                status.tasks.push(dragItem.current.taskObject)\n            }\n        }\n        tasksDistributionInStatuses(newStatuses);\n        countBusinessValue(newStatuses);\n        return newStatuses;\n    };\n\n    const handleSaveNewColumn = () => {\n        if (newColumnRef.current.value.length < 3) {\n            alert(\"add name (minimum 3 character) to your status\");\n            return;\n        }\n        addNewColumn(newColumnRef.current.value);\n        newColumnRef.current.value = \"\";\n\n    };\n\n    return (\n        <div className={\"scrum_table\"}\n             onDragOver={(e) => e.preventDefault()}>\n            {\n                statuses.map((status, i) => {\n                    let statusFlag = null;\n                    if (i === 0) {\n                        statusFlag = \"start\";\n                    }\n                    if (i === statuses.length - 1) {\n                        statusFlag = \"finish\";\n                    }\n\n\n                    return <Column\n                        statusFlag={statusFlag}\n                        deleteStatus={deleteStatus}\n                        onDragEnd={onDragEnd}\n                        dragItem={dragItem}\n                        key={status.id}\n                        status={status}\n                        onDragEnter={onDragEnter}\n                        refreshStatusesFromBackend={refreshStatusesFromBackend}\n                        addNewTask={addNewTask}\n                        usersOnProject={usersOnProject}\n                        projectAuthor = {projectAuthor}\n                    />\n\n                })\n            }\n\n            <div>\n                {isComponentVisible && (\n                    <div ref={ref} className=\"add_new_column_container\">\n                        <input className=\"add_new_column_text\" ref={newColumnRef}/>\n                        <div className=\"add_new_column_btn\" onClick={handleSaveNewColumn}>save</div>\n                    </div>\n                )}\n                {!isComponentVisible && (\n                    <div onClick={() => setIsComponentVisible(true)}>\n                        <PlusOutlined id={\"add_status_icon\"}/>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ScrumTable;","import React, {useState} from 'react';\nimport {Modal, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {UsergroupAddOutlined, UserAddOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../../Assets/StyledComps/styled\";\nimport Autocomplete from 'react-autocomplete';\nimport axios from \"axios\";\n\n\nconst UsersModal = ({projectId, participants}) => {\n\n    const [value, setValue] = useState();\n    const [visible, setVisible] = useState(false);\n    const [users, setUsers] = useState([{username: \"type for search...\"}]);\n    const [projectParticipants, setProjectParticipants] = useState(participants);\n\n    async function handelSearchChange(e) {\n        let userName = e.target.value;\n        setValue(userName);\n        if (userName.length > 2) {\n            let userObj = {username: userName};\n            let axiosResponse = await axios.post(\"http://localhost:8080/user/search\", userObj);\n            setUsers(axiosResponse.data);\n        }\n\n\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true);\n    }\n\n\n    async function handleAddUser() {\n        let user = {username: value};\n        let axiosResponse = await axios.post(\"http://localhost:8080/project/adduser/\" + projectId, user);\n        setProjectParticipants(axiosResponse.data);\n    }\n\n    return (\n        <div>\n            <UsergroupAddOutlined onClick={showModal}\n                                  style={{\n                                      fontSize: \"30px\",\n                                      color: \"#373A55\",\n                                      paddingLeft: \"10px\"\n                                  }}/>\n\n            <Modal\n                visible={visible}\n                onCancel={handleCancel}\n                footer={null}\n                width={400}\n            >\n                <ContentContainer>\n                    <h2>Invite Participant</h2>\n                </ContentContainer>\n                <ContentContainer style={{padding: 0, borderBottom: \"1px solid\", paddingBottom: \"1.5rem\"}}>\n                    <Autocomplete\n                        getItemValue={(item) => item.username}\n                        items={users}\n                        //shouldItemRender={(item, value) => item.username.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                        renderItem={(item, highlighted) =>\n                            <div\n                                key={item.id}\n                                style={{backgroundColor: highlighted ? 'yellow' : 'transparent'}}\n                            >\n                                {item.username}\n                            </div>\n                        }\n                        value={value}\n                        onChange={e => handelSearchChange(e)}\n                        onSelect={value => setValue(value)}\n                    />\n                    <UserAddOutlined onClick={handleAddUser}\n                                     style={{\n                                         fontSize: \"30px\",\n                                         marginLeft: \"20px\", color: \"green\"\n                                     }}/>\n                </ContentContainer>\n                <ContentContainer>\n                    <h2>Current Participants</h2>\n                </ContentContainer>\n                <ContentContainer>\n                    {projectParticipants.map(participant =>\n                        <div className={\"participant_users\"}>\n                            <div className={\"user_icon\"}><UserOutlined/></div>\n                            <h3>{participant.username}</h3>\n                        </div>)}\n                </ContentContainer>\n\n            </Modal>\n\n        </div>\n    );\n};\n\nexport default UsersModal;","import React, {useContext, useState} from 'react';\nimport 'antd/dist/antd.css';\nimport {MailOutlined} from \"@ant-design/icons\";\nimport {Button, Modal} from \"antd\";\nimport {ContentContainer} from \"../Assets/StyledComps/styled\";\nimport axios from \"axios\";\nimport Alert from \"antd/es/alert\";\nimport {ProjectContext} from \"../Contexts/ProjectContext\";\nimport ProjectCalls from \"../Services/ProjectCalls\";\n\nconst MailModal = ({projectId}) => {\n\n    const [visible, setVisible] = useState(false);\n    const [email,setEmail] = useState(\"\");\n    const {showErrorAlert,showSuccessAlert} = useContext(ProjectContext);\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true);\n    }\n\n    function validateEmail(email) {\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    async function handleSend() {\n        console.log(validateEmail(email));\n        if(validateEmail(email)){\n            let emailCred = {email:email};\n            try {\n                await ProjectCalls.sendMail(projectId,emailCred);\n                showSuccessAlert(\"Successful e-mail sending\");\n                setVisible(false);\n            } catch (e) {\n                setVisible(false);\n                showErrorAlert(\"Invalid e-mail adress try again!\");\n            }\n        }else {\n            showErrorAlert(\"Incorrect Email form use 'example@example.com'-form \");\n        }\n    }\n\n    return (\n        <div>\n            <MailOutlined onClick={showModal}\n                                  style={{\n                                      fontSize: \"30px\",\n                                      color: \"#373A55\",\n                                      paddingLeft: \"10px\"\n                                  }}/>\n\n            <Modal\n                visible={visible}\n                onCancel={handleCancel}\n                footer={null}\n                width={400}\n            >\n                <ContentContainer>\n                    <h2>Send your Project Details</h2>\n                </ContentContainer>\n                <ContentContainer>\n                    <input placeholder={\"e-mail\"} onChange={event => setEmail(event.target.value)}/>\n                    <Button onClick={handleSend}>Send</Button>\n                </ContentContainer>\n            </Modal>\n\n        </div>\n    );\n};\n\nexport default MailModal;","import React, {useState, useContext, useEffect, useRef} from 'react';\nimport {PieChart} from 'react-minimal-pie-chart';\n\nconst CustomPieChart = ({data, visualMark, label}) => {\n\n    //pie chart\n    const segmentsStyle = {transition: 'stroke .3s', cursor: 'pointer', strokeWidth: 35};\n    const [selectedPart, setSelectedPart] = useState();\n\n\n    const labelStyle = {\n        fontSize: \"0.3rem\",\n        fontWeight: \"bold\"\n    };\n\n    const handleSelectPart = (segmentIndex) => {\n        setSelectedPart(segmentIndex)\n    };\n\n    const handleVisual = (dataEntry) => {\n        if (visualMark === \"value\") {\n            return Math.round(dataEntry.value) === 0 ? \"\" : `${Math.round(dataEntry.value)} total`\n        } else {\n            return Math.round(dataEntry.percentage) === 0 ? \"\" : `${Math.round(dataEntry.percentage)} %`\n        }\n\n\n    };\n\n    return (\n        <div className=\"chart_box\">\n        <PieChart\n                className=\"chart\"\n                label={({dataEntry}) => {\n                   return handleVisual(dataEntry)\n                }}\n                labelStyle={labelStyle}\n                animate={true}\n                animationDuration={1000}\n                lineWidth={75}\n                radius={40}\n                onClick={(e, segmentIndex) => handleSelectPart(segmentIndex)}\n                segmentsStyle={(index) => {\n                    return index === selectedPart\n                        ? {...segmentsStyle, strokeWidth: 40}\n                        : segmentsStyle;\n                }}\n                data={[\n                    {title: 'Not Started', value: data.start, color: '#dd2911'},\n                    {title: 'In Progress', value: data.inProgress, color: '#efc310'},\n                    {title: 'Finished', value: data.finish, color: '#5bc128'},\n                ]}\n            />\n            <h1>{label}</h1>\n        </div>\n    );\n};\n\nexport default CustomPieChart;","import React, {useContext, useState} from 'react';\nimport 'antd/dist/antd.css';\nimport { FileExcelOutlined } from \"@ant-design/icons\";\nimport {Button, Modal} from \"antd\";\nimport {ContentContainer} from \"../Assets/StyledComps/styled\";\nimport {ProjectContext} from \"../Contexts/ProjectContext\";\nimport ProjectCalls from \"../Services/ProjectCalls\";\n\nconst InProgressLimitModal = ({tableId, getProject, taskLimit}) => {\n\n    const [visible, setVisible] = useState(false);\n    const [limit, setLimit] = useState(\"\");\n    const {showErrorAlert,showSuccessAlert} = useContext(ProjectContext);\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true);\n    }\n\n\n    async function handleSend() {\n        let tableCredentials = {\n            id: tableId,\n            taskLimit: limit\n        };\n        try {\n            await ProjectCalls.sendProjectInProgressLimit(tableCredentials);\n            showSuccessAlert(\"Successful new limit is: \" + tableCredentials.taskLimit);\n            setVisible(false);\n        } catch (e) {\n            showErrorAlert(\"ooops, something went wrong, try again\");\n        }\n        getProject();\n    }\n\n    return (\n        <div>\n            <FileExcelOutlined onClick={showModal}\n                          style={{\n                              fontSize: \"30px\",\n                              color: \"#373A55\",\n                              paddingLeft: \"10px\"\n                          }}/>\n\n            <Modal\n                visible={visible}\n                onCancel={handleCancel}\n                footer={null}\n                width={400}\n            >\n                <ContentContainer>\n                    <h2>Limit the in progress task count</h2>\n                </ContentContainer>\n                <ContentContainer>\n                    <input placeholder={taskLimit}\n                           onChange={event => setLimit(event.target.value)}\n                           type=\"number\"\n                    />\n                    <Button onClick={handleSend}>Send</Button>\n                </ContentContainer>\n            </Modal>\n\n        </div>\n    );\n};\n\nexport default InProgressLimitModal;","import React from 'react';\nimport { UserOutlined,SnippetsOutlined} from \"@ant-design/icons\";\n\nconst TaskDistibution = ({user}) => {\n    return (\n        <div className={\"task_distribution\"}>\n            {user[0]} : {user[1]} <SnippetsOutlined />\n        </div>\n    );\n};\n\nexport default TaskDistibution;","import React, {useEffect, useState} from 'react';\nimport {useParams} from \"react-router\";\nimport ScrumTable from \"../../components/ProjectComponents/ScrumTable\";\nimport {ContentContainer} from \"../../Assets/StyledComps/styled\";\nimport UsersModal from \"../../components/ProjectComponents/UsersModal\";\nimport MailModal from \"../../components/MailModal\";\nimport CustomPieChart from \"../../components/ProjectComponents/CustomPieChart\";\nimport ProjectCalls from \"../../Services/ProjectCalls\";\nimport InProgressLimitModal from \"../../components/InProgressLimitModal\";\nimport TaskDistibution from \"../../components/ProjectComponents/taskDistibution\";\n\nconst ProjectPage = () => {\n\n    const {id} = useParams();\n    const [project, setProject] = useState(null);\n    const [scrumTable,setScrumTable] = useState(null);\n    const [taskCount, setTaskCount] = useState({});\n    const [businessValueCount, setBusinessValueCount] = useState({});\n    const [mouseOverAccept, setMouseOverAccept] = useState(false);\n    const [usersOnProject, setUsersOnProject] = useState([]);\n\n    function getColaboratorsFromProject(project) {\n        return [...project.participants, project.author];\n\n    }\n\n\n    const getProject = async () => {\n\n        let myProject = await ProjectCalls.getProject(id);\n\n        setUsersOnProject(getColaboratorsFromProject(myProject));\n        myProject.table.statuses.sort(function (a, b) {\n            return a.position - b.position;\n        });\n        myProject.table.statuses.map(status => {\n            status.tasks.sort(function (a, b) {\n                return a.position - b.position;\n            })\n        });\n        setScrumTable(myProject.table);\n        setProject(null);\n        setProject(myProject);\n        getTaskChartData(myProject.table.statuses);\n        getBusinessValueChartData(myProject.table.statuses);\n\n\n    };\n\n    const refreshScrumTableBackend = async () => {\n        let newScrumTable = await ProjectCalls.getScrumTable(project.table.id);\n        newScrumTable.statuses.sort(function (a, b) {\n            return a.position - b.position;\n        });\n        newScrumTable.statuses.map(status =>{\n            status.tasks.sort(function (a,b) {\n                return a.position - b.position;\n            });\n        });\n        getTaskChartData(newScrumTable.statuses);\n        getBusinessValueChartData(newScrumTable.statuses);\n        setScrumTable(newScrumTable);\n    };\n\n\n    function getUsersWithTasks(scrumTable) {\n        let usersWithTasks = {};\n        scrumTable.statuses.map( (status)=>{\n            status.tasks.map((task)=>{\n                if (task.owner!=null){\n                    let owner=task.owner.username;\n                    usersWithTasks[owner]=(usersWithTasks[owner]||0)+1;\n                }else {\n                    usersWithTasks[\"need owner\"] =(usersWithTasks[\"need owner\"]||0)+1;\n                }\n\n            })\n        });\n        return usersWithTasks;\n\n    }\n\n\n    function getTaskChartData(statuses) {\n        let projectStatuses = statuses;\n        let taskCounts = {start: 0, inProgress: 0, finish: 0};\n        projectStatuses.map((status) => {\n            if (status.position === 1) {\n                taskCounts.start += status.tasks.length;\n            } else if (status.position === projectStatuses.length) {\n                taskCounts.finish += status.tasks.length;\n            } else {\n                taskCounts.inProgress += status.tasks.length;\n            }\n        });\n        setTaskCount(taskCounts);\n    }\n\n    const getBusinessValueChartData = (statuses) => {\n        let businessValueCount = {start: 0, inProgress: 0, finish: 0};\n        statuses.map(status => {\n            if (status.position === 1) {\n                status.tasks.map(task => {\n                    businessValueCount.start += task.priority;\n                })\n            } else if (status.position === statuses.length) {\n                status.tasks.map(task => {\n                    businessValueCount.finish += task.priority;\n                })\n            } else {\n                status.tasks.map(task => {\n                    businessValueCount.inProgress += task.priority;\n                })\n            }\n        });\n        setBusinessValueCount(businessValueCount);\n    };\n\n    const addNewColumn = async (columnName) => {\n        let newStatus = {\n            statusName: columnName,\n            projectId: id\n        };\n        await ProjectCalls.addNewColumn(newStatus);\n        getProject();\n    };\n\n    const addNewTask = async (taskName, statusId) => {\n        let task = {\n            statusId: statusId,\n            title: taskName\n        };\n        await ProjectCalls.addNewTask(task);\n        getProject();\n\n    };\n\n    useEffect(() => {\n        getProject();\n    }, []);\n\n    if (!project) {\n        return <div className=\"loading\">loading....</div>\n\n    }\n\n    return (\n        <div className={\"project_item_container_canvas\"}>\n            <div className={\"project_item_container\"}>\n                <ContentContainer>\n                    <div className={\"project_title_container\"}>\n                        <h2>{project.title}</h2>\n                    </div>\n                    <UsersModal projectId={project.id} participants={project.participants}/>\n                    <MailModal projectId={project.id}/>\n                    <InProgressLimitModal tableId={project.table.id}\n                                          getProject={getProject}\n                                          taskLimit={project.table.taskLimit}\n                    />\n                </ContentContainer>\n\n                <div className={\"scrum_table_container\"}>\n                    <ScrumTable key={scrumTable.id}\n                                table={scrumTable}\n                                addNewColumn={addNewColumn}\n                                addNewTask={addNewTask}\n                                setTaskCount={setTaskCount}\n                                tasksDistributionInStatuses={getTaskChartData}\n                                usersOnProject={usersOnProject}\n                                countBusinessValue={getBusinessValueChartData}\n                                refreshScrumTableBackend={refreshScrumTableBackend}\n                                projectAuthor = {project.author.username}\n\n                    />\n                </div>\n                <div className={\"task_distribution_container\"}>\n                    {\n                        Object.entries(getUsersWithTasks(scrumTable)).map((key) => {\n                            return <TaskDistibution user={key}/>;\n                        })\n                    }\n                </div>\n                <div className=\"chart_container\">\n                    <CustomPieChart data={taskCount}\n                                    visualMark={\"percentage\"}\n                                    label=\"Sprint progress by user story\"/>\n                    <CustomPieChart data={businessValueCount}\n                                    visualMark={\"value\"}\n                                    label=\"Sprint progress by value distribution\"/>\n                </div>\n            </div>\n            }\n        </div>\n    );\n};\n\nexport default ProjectPage;","import React from 'react';\nimport axios from 'axios'\n\nexport default {\n\n    login : async (user)=>{\n        let axiosResponse = await axios.post(\"http://localhost:8080/auth/signin\", user);\n        return axiosResponse;\n    },\n\n    registration : async (user) =>{\n        let axiosResponse = await axios.post(\"http://localhost:8080/auth/registration\", user);\n        return axiosResponse;\n    },\n\n    handleLogout: async () => {\n        await axios.get(\"http://localhost:8080/auth/logout\")\n    },\n\n\n\n}","import React, {useContext} from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"../Assets/Styles/NavStyle.css\"\nimport {ProjectContext} from \"../Contexts/ProjectContext\";\nimport {useHistory} from \"react-router-dom\";\nimport UnorderedListOutlined from \"@ant-design/icons/lib/icons/UnorderedListOutlined\";\nimport AuthCalls from \"../Services/AuthCalls\";\n\n\nconst Navbar = () => {\n\n    const history = useHistory();\n    const {setProjects} = useContext(ProjectContext);\n    const {showSuccessAlert} = useContext(ProjectContext);\n\n    async function handleLogout() {\n        await AuthCalls.handleLogout();\n        setProjects([]);\n        localStorage.clear();\n\n        showSuccessAlert(\"Logout successful\");\n        history.push(\"/login\");\n\n    }\n\n    return (\n        <nav className=\"main-nav\">\n            <ul className=\"nav-items\">\n                <li className=\"nav-item nav_menu\">\n                    <UnorderedListOutlined className=\"nav_menu\"/>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className='text-link' to=\"/\"> Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className='text-link' to=\"/projects\"> Projects</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"text-link\" onClick={handleLogout}>Logout</Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navbar;","import React from 'react';\nimport axios from 'axios'\n\nexport default {\n    getUser: async (username)=>{\n       return await axios.get(\"http://localhost:8080/user/\"+username)\n\n    }\n}\n\n","import React, {useEffect, useState} from 'react';\nimport {SnippetsOutlined, BookOutlined} from \"@ant-design/icons\";\nimport UserCalls from \"../Services/UserCalls\";\nimport {use} from \"@js-joda/core\";\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\n\nconst HomePage = () => {\n\n    let [user, setUser] = useState({});\n\n    const getUser = async () => {\n        let userObj = await UserCalls.getUser(localStorage.getItem(\"username\"));\n        console.log(userObj);\n        setUser(userObj.data);\n    };\n\n    useEffect(() => {\n        getUser();\n    }, []);\n\n    return (\n        <div className={\"homepage_container\"}>\n            <div className=\"homepage\">\n                <div className={\"homepage_data_container\"}>\n                    <h1>WELCOME {localStorage.getItem(\"username\")} !</h1>\n                    <a href={\"/projects\"}>Let's check your projects <BookOutlined/> </a>\n                </div>\n                <div className={\"user_stats\"}>\n                    <div className={\"homepage_stat_container\"}>\n                        <BookOutlined className={\"icon\"}/>\n                        <p> Created projects by you: </p>\n                        <p className={\"stat_count\"}>{user.projectsCount}</p>\n                    </div>\n                    <div className={\"homepage_stat_container\"}>\n                        <UserOutlined className={\"icon\"}/>\n                        <p>You Participated in projects:</p>\n                        <p className={\"stat_count\"}>{user.participantCount}</p>\n                    </div>\n                    <div className={\"homepage_stat_container\"}>\n                        <SnippetsOutlined className={\"icon\"}/>\n                        <p> Tasks in your ownership:</p>\n                        <p className={\"stat_count\"}>{user.tasksCount}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;","import React, {useContext, useState} from \"react\";\nimport axios from 'axios';\nimport {useHistory} from \"react-router-dom\";\nimport '../../Assets/Styles/AuthStyle.css';\nimport {ProjectContext} from \"../../Contexts/ProjectContext\";\nimport {ContentContainer} from \"../../Assets/StyledComps/styled\";\nimport AuthCalls from \"../../Services/AuthCalls\";\n\nconst RegistrationPage = ({handleLogin}) => {\n\n    const [username, setUsername] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [email, setEmail] = useState(null);\n\n    const {showErrorAlert, showSuccessAlert} = useContext(ProjectContext);\n\n    function validateEmail(email) {\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    function validateInput(username) {\n        const re = /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/\n        return re.test(String(username).toLowerCase());\n    }\n\n    const onSubmit = async () => {\n        let user = {\n            username: username,\n            password: password,\n            email:email\n        };\n        if (username.length < 5 || password.length < 5) {\n            showErrorAlert(\"Please use at least five character to your username/password\");\n            return;\n        }\n        try {\n            if (username===null||password===null||email===null) throw new ReferenceError(\"empty fields\");\n            else if (!validateEmail(email)) throw new TypeError(\"invalid e-mail\");\n            else if (!validateInput(username)) throw new RangeError(\"invalid username/password\");\n            else if (!validateInput(password)) throw new RangeError(\"invalid username/password\");\n            let axiosResponse = await AuthCalls.registration(user);\n            if (axiosResponse.status === 200) {\n                showSuccessAlert(\"registration success please Sign in\");\n                handleLogin();\n            }\n        } catch (e) {\n            console.log(e);\n            if (e instanceof TypeError) showErrorAlert(\"Invalid E-mail adresse please use example@example.com form\");\n            else if (e instanceof ReferenceError) showErrorAlert(\"Username, password and email fields are required! \");\n            else if (e instanceof RangeError) showErrorAlert(\"Wrong username or password, try again!\");\n            else showErrorAlert(\"Registration failed! This username is in use!\");\n        }\n    };\n\n\n    return (\n        <div className=\"registration_container\">\n            <div className=\"registration_form\">\n                <div className=\"registration_input\">\n                    <input\n                        placeholder={\"username\"}\n                        id={\"registration_name_input\"}\n                        onChange={(e) => setUsername(e.target.value)}/>\n                </div>\n                <div className=\"registration_input\">\n                    <input\n                        placeholder={\"password\"}\n                        type=\"password\"\n                        onChange={(e) => setPassword(e.target.value)}/>\n                </div>\n                <div className=\"registration_input\">\n                    <input\n                        placeholder={\"e-mail\"}\n                        onChange={(e) => setEmail(e.target.value)}/>\n                </div>\n                <div className=\"auth_submit_btn\">\n                    <div className=\"btn_active auth\" onClick={onSubmit}>Sign up</div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default RegistrationPage;\n\n","import React, {useContext, useState} from \"react\";\nimport axios from 'axios';\nimport {useHistory} from \"react-router-dom\";\nimport {ProjectContext} from \"../../Contexts/ProjectContext\";\nimport '../../Assets/Styles/AuthStyle.css';\nimport AuthCalls from \"../../Services/AuthCalls\";\n\n\nconst LoginPage = () => {\n\n    const [username, setUsername] = useState();\n    const [password, setPassword] = useState();\n    const history = useHistory();\n    const {getProjects, projects} = useContext(ProjectContext);\n    const {showErrorAlert,showSuccessAlert} = useContext(ProjectContext);\n\n    const onLogin = async () => {\n        let user = {\n            username: username,\n            password: password\n        };\n        try {\n            let axiosResponse = await AuthCalls.login(user);\n            if (axiosResponse.status === 200) {\n                localStorage.setItem(\"username\",axiosResponse.data.username);\n                history.push(\"/\");\n            }\n        } catch (e) {\n            console.log(e);\n            showErrorAlert(\"Login failed! Invalid username or password\")\n        }\n    };\n\n\n    return (\n        <div className=\"login_container\">\n            <div className=\"login_form\">\n                <div className=\"login_input\">\n                    <input\n                        onChange={(e) => setUsername(e.target.value)}\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"login_input\">\n                    <input\n                        type=\"password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n                <div className=\"auth_submit_btn\">\n                    <div className=\"btn_active auth\" onClick={onLogin}>Sign in</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPage;","import React, {useState} from 'react';\nimport RegistrationPage from \"./Registration\";\nimport LoginPage from \"./Login\";\nimport \"../../Assets/Styles/AuthStyle.css\";\n\nconst AuthPage = () => {\n\n    const [login, setLogin] = useState(true);\n\n    const handleLogin = () => {\n        setLogin(true);\n    };\n\n    const handleRegister = () => {\n        setLogin(false);\n    };\n\n    const loginBtnStyle = login ? \"btn_active\" : \"btn_not_active\";\n    const registrationBtnStyle = login ? \"btn_not_active\" : \"btn_active\";\n\n    return (\n        <div className=\"authpage_container\">\n            <div className=\"authpage_text\">Welcome to ProjectTracker</div>\n            <div className=\"authpage_form\">\n            <div className=\"authpage_select_container\">\n                <div className=\"authpage_select_btn_container\">\n                    <div className={loginBtnStyle} onClick={handleLogin}>Sign in</div>\n                    <div className={registrationBtnStyle} onClick={handleRegister}>Sign up</div>\n                </div>\n            </div>\n\n            <div className=\"authpage_content\">\n                {login ? <LoginPage/> : <RegistrationPage handleLogin ={handleLogin}/>}\n            </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AuthPage;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function (OriginalComponent, isPrivate) {\n    function AuthCheck(props) {\n        const user = localStorage.getItem(\"username\");\n        const history = useHistory();\n\n        if (!isPrivate && user !== null) {\n            console.log(\"you are already logged in\");\n            history.push('/');\n        }\n\n        if (isPrivate && user === null) {\n            console.log(\"LOG IN MAN\");\n            history.push(\"/login\");\n        }\n        return <OriginalComponent {...props} />\n\n    }\n    return AuthCheck;\n}","import React from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport MyProjects from \"./Pages/ProjectPage/MyProjects\";\nimport {ProjectProvider} from \"./Contexts/ProjectContext\";\nimport ProjectPage from \"./Pages/ProjectPage/ProjectPage\";\nimport Navbar from \"./Parts/Navbar\";\nimport HomePage from \"./Pages/HomePage\";\nimport AuthPage from \"./Pages/AuthPage/AuthPage\";\nimport AlertModal from \"./components/alertModal\";\nimport AuthCheck from \"./Utils/AuthCheck\";\n\n\nfunction App() {\n    return (\n        <Router>\n            <ProjectProvider>\n                <div className=\"App\">\n\n                    <Route exact path=\"/\" component={Navbar}/>\n                    <Route exact path=\"/projects\" component={Navbar}/>\n                    <Route exact path=\"/project/:id\" component={Navbar}/>\n\n                    <Route exact path=\"/login\" component={AuthCheck(AuthPage, false)}/>\n                    <Route exact path=\"/project/:id\" component={AuthCheck(ProjectPage, true)}/>\n                    <Route exact path=\"/projects\" component={AuthCheck(MyProjects, true)}/>\n                    <Route exact path=\"/\" component={AuthCheck(HomePage, true)}/>\n                    <AlertModal/>\n                </div>\n            </ProjectProvider>\n        </Router>\n    )\n        ;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from \"axios\";\n\naxios.defaults.withCredentials = true;\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}