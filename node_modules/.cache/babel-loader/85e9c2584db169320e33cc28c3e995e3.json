{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectPage.js\";\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport ScrumTable from \"./ScrumTable\";\nimport { AdderComponent, ContentContainer, Input } from \"../styledComps/styled\";\nimport UsersModal from \"./UsersModal\";\nimport MailModal from \"./MailModal\";\nimport { PieChart } from 'react-minimal-pie-chart';\n\nconst ProjectPage = () => {\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState();\n  const [taskCount, setTaskCount] = useState();\n  const [businessValueCount, setBusinessValueCount] = useState();\n  const [loading, setLoading] = useState(true);\n  const [mouseOverAccept, setMouseOverAccept] = useState(false);\n\n  const getProject = async () => {\n    setLoading(true);\n    let response = await axios.get(\"http://localhost:8080/project/\" + id);\n    response.data.table.statuses.sort(function (a, b) {\n      return a.position - b.position;\n    });\n    response.data.table.statuses.map(status => {\n      status.tasks.sort(function (a, b) {\n        return a.position - b.position;\n      });\n    });\n    setProject(response.data);\n    tasksDistributionInStatuses(response.data.table.statuses);\n    countBusinessValue(response.data.table.statuses);\n    setLoading(false);\n  };\n\n  function tasksDistributionInStatuses(statuses) {\n    let projectStatuses = statuses;\n    let taskCounts = {\n      start: 0,\n      inProgress: 0,\n      finish: 0\n    };\n    projectStatuses.map(status => {\n      if (status.position === 1) {\n        taskCounts.start += status.tasks.length;\n      } else if (status.position === projectStatuses.length) {\n        taskCounts.finish += status.tasks.length;\n      } else {\n        taskCounts.inProgress += status.tasks.length;\n      }\n    });\n    setTaskCount(taskCounts);\n  }\n\n  const countBusinessValue = statuses => {\n    let businessValueCount = {\n      start: 0,\n      inProgress: 0,\n      finish: 0\n    };\n    statuses.map(status => {\n      if (status.position === 1) {\n        status.tasks.map(task => {\n          businessValueCount.start += task.businessValue;\n        });\n      } else if (status.position === statuses.length) {\n        status.tasks.map(task => {\n          businessValueCount.finish += task.businessValue;\n        });\n      } else {\n        status.tasks.map(task => {\n          businessValueCount.inProgress += task.businessValue;\n        });\n      }\n    });\n    setBusinessValueCount(businessValueCount);\n  };\n\n  const addNewColumn = async columnName => {\n    //setLoading(true);\n    let projectId = id;\n    let newStatus = {\n      statusName: columnName,\n      projectId: projectId\n    };\n    await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n    getProject();\n  };\n\n  const addNewTask = async (taskName, statusId) => {\n    setLoading(true);\n    let task = {\n      statusId: statusId,\n      title: taskName\n    };\n    await axios.post(\"http://localhost:8080/project/newtask\", task);\n    getProject();\n  };\n\n  useEffect(() => {\n    getProject();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_item_container_canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"loading....\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_item_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_title_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, project.title)), /*#__PURE__*/React.createElement(UsersModal, {\n    projectId: project.id,\n    participants: project.participants,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MailModal, {\n    projectId: project.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrum_table_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ScrumTable, {\n    key: project.table.id,\n    table: project.table,\n    addNewColumn: addNewColumn,\n    addNewTask: addNewTask,\n    setTaskCount: setTaskCount,\n    tasksDistributionInStatuses: tasksDistributionInStatuses,\n    countBusinessValue: countBusinessValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    className: \"chart\",\n    data: [{\n      title: 'Not Started',\n      value: taskCount.start,\n      color: '#dd2911'\n    }, {\n      title: 'In Progress',\n      value: taskCount.inProgress,\n      color: '#efc310'\n    }, {\n      title: 'Finished',\n      value: taskCount.finish,\n      color: '#5bc128'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(PieChart, {\n    className: \"chart\",\n    data: [{\n      title: 'Not Started',\n      value: businessValueCount.start,\n      color: '#dd2911'\n    }, {\n      title: 'In Progress',\n      value: businessValueCount.inProgress,\n      color: '#efc310'\n    }, {\n      title: 'Finished',\n      value: businessValueCount.finish,\n      color: '#5bc128'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default ProjectPage;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectPage.js"],"names":["React","useState","useContext","useEffect","useRef","useParams","axios","ScrumTable","AdderComponent","ContentContainer","Input","UsersModal","MailModal","PieChart","ProjectPage","id","project","setProject","taskCount","setTaskCount","businessValueCount","setBusinessValueCount","loading","setLoading","mouseOverAccept","setMouseOverAccept","getProject","response","get","data","table","statuses","sort","a","b","position","map","status","tasks","tasksDistributionInStatuses","countBusinessValue","projectStatuses","taskCounts","start","inProgress","finish","length","task","businessValue","addNewColumn","columnName","projectId","newStatus","statusName","post","addNewTask","taskName","statusId","title","participants","value","color"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,EAA0CC,KAA1C,QAAsD,uBAAtD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM;AAACC,IAAAA;AAAD,MAAOV,SAAS,EAAtB;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,EAAtC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,EAA1C;AACA,QAAM,CAACmB,kBAAD,EAAqBC,qBAArB,IAA8CpB,QAAQ,EAA5D;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMyB,UAAU,GAAG,YAAY;AAC3BH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAII,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,mCAAmCb,EAA7C,CAArB;AACAY,IAAAA,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,QAApB,CAA6BC,IAA7B,CAAkC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9C,aAAOD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAtB;AACH,KAFD;AAGAR,IAAAA,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,QAApB,CAA6BK,GAA7B,CAAiCC,MAAM,IAAI;AACvCA,MAAAA,MAAM,CAACC,KAAP,CAAaN,IAAb,CAAkB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9B,eAAOD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAtB;AACH,OAFD;AAGH,KAJD;AAKAlB,IAAAA,UAAU,CAACU,QAAQ,CAACE,IAAV,CAAV;AACAU,IAAAA,2BAA2B,CAACZ,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,QAArB,CAA3B;AACAS,IAAAA,kBAAkB,CAACb,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,QAArB,CAAlB;AACAR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAfD;;AAiBA,WAASgB,2BAAT,CAAqCR,QAArC,EAA+C;AAC3C,QAAIU,eAAe,GAAGV,QAAtB;AACA,QAAIW,UAAU,GAAG;AAACC,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,CAAvB;AAA0BC,MAAAA,MAAM,EAAE;AAAlC,KAAjB;AACAJ,IAAAA,eAAe,CAACL,GAAhB,CAAqBC,MAAD,IAAY;AAC5B,UAAIA,MAAM,CAACF,QAAP,KAAoB,CAAxB,EAA2B;AACvBO,QAAAA,UAAU,CAACC,KAAX,IAAoBN,MAAM,CAACC,KAAP,CAAaQ,MAAjC;AACH,OAFD,MAEO,IAAIT,MAAM,CAACF,QAAP,KAAoBM,eAAe,CAACK,MAAxC,EAAgD;AACnDJ,QAAAA,UAAU,CAACG,MAAX,IAAqBR,MAAM,CAACC,KAAP,CAAaQ,MAAlC;AACH,OAFM,MAEA;AACHJ,QAAAA,UAAU,CAACE,UAAX,IAAyBP,MAAM,CAACC,KAAP,CAAaQ,MAAtC;AACH;AACJ,KARD;AASA3B,IAAAA,YAAY,CAACuB,UAAD,CAAZ;AACH;;AAED,QAAMF,kBAAkB,GAAIT,QAAD,IAAc;AACrC,QAAIX,kBAAkB,GAAG;AAACuB,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,CAAvB;AAA0BC,MAAAA,MAAM,EAAE;AAAlC,KAAzB;AACAd,IAAAA,QAAQ,CAACK,GAAT,CAAaC,MAAM,IAAI;AACnB,UAAIA,MAAM,CAACF,QAAP,KAAoB,CAAxB,EAA2B;AACvBE,QAAAA,MAAM,CAACC,KAAP,CAAaF,GAAb,CAAiBW,IAAI,IAAI;AACrB3B,UAAAA,kBAAkB,CAACuB,KAAnB,IAA4BI,IAAI,CAACC,aAAjC;AACH,SAFD;AAGH,OAJD,MAIO,IAAIX,MAAM,CAACF,QAAP,KAAoBJ,QAAQ,CAACe,MAAjC,EAAyC;AAC5CT,QAAAA,MAAM,CAACC,KAAP,CAAaF,GAAb,CAAiBW,IAAI,IAAI;AACrB3B,UAAAA,kBAAkB,CAACyB,MAAnB,IAA6BE,IAAI,CAACC,aAAlC;AACH,SAFD;AAGH,OAJM,MAIA;AACHX,QAAAA,MAAM,CAACC,KAAP,CAAaF,GAAb,CAAiBW,IAAI,IAAI;AACrB3B,UAAAA,kBAAkB,CAACwB,UAAnB,IAAiCG,IAAI,CAACC,aAAtC;AACH,SAFD;AAGH;AACJ,KAdD;AAeA3B,IAAAA,qBAAqB,CAACD,kBAAD,CAArB;AACH,GAlBD;;AAoBA,QAAM6B,YAAY,GAAG,MAAOC,UAAP,IAAsB;AACvC;AACA,QAAIC,SAAS,GAAGpC,EAAhB;AACA,QAAIqC,SAAS,GAAG;AAACC,MAAAA,UAAU,EAAEH,UAAb;AAAyBC,MAAAA,SAAS,EAAEA;AAApC,KAAhB;AACA,UAAM7C,KAAK,CAACgD,IAAN,CAAW,yCAAX,EAAsDF,SAAtD,CAAN;AACA1B,IAAAA,UAAU;AACb,GAND;;AAQA,QAAM6B,UAAU,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC7ClC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIwB,IAAI,GAAG;AACPU,MAAAA,QAAQ,EAAEA,QADH;AAEPC,MAAAA,KAAK,EAAEF;AAFA,KAAX;AAIA,UAAMlD,KAAK,CAACgD,IAAN,CAAW,uCAAX,EAAoDP,IAApD,CAAN;AACArB,IAAAA,UAAU;AAEb,GATD;;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAKA,sBAEI;AAAK,IAAA,SAAS,EAAE,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKJ,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADI,gBAGJ;AAAK,IAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,OAAO,CAAC0C,KAAb,CADJ,CADJ,eAIQ,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE1C,OAAO,CAACD,EAA/B;AAAmC,IAAA,YAAY,EAAEC,OAAO,CAAC2C,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,eAKQ,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE3C,OAAO,CAACD,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CADJ,eAQI;AAAK,IAAA,SAAS,EAAE,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEC,OAAO,CAACc,KAAR,CAAcf,EAA/B;AACY,IAAA,KAAK,EAAEC,OAAO,CAACc,KAD3B;AAEY,IAAA,YAAY,EAAEmB,YAF1B;AAGY,IAAA,UAAU,EAAEM,UAHxB;AAIY,IAAA,YAAY,EAAEpC,YAJ1B;AAKY,IAAA,2BAA2B,EAAEoB,2BALzC;AAMY,IAAA,kBAAkB,EAAEC,kBANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CARJ,eAmBI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,IAAI,EAAE,CACF;AAAEkB,MAAAA,KAAK,EAAE,aAAT;AAAwBE,MAAAA,KAAK,EAAE1C,SAAS,CAACyB,KAAzC;AAAgDkB,MAAAA,KAAK,EAAE;AAAvD,KADE,EAEF;AAAEH,MAAAA,KAAK,EAAE,aAAT;AAAwBE,MAAAA,KAAK,EAAE1C,SAAS,CAAC0B,UAAzC;AAAqDiB,MAAAA,KAAK,EAAE;AAA5D,KAFE,EAGF;AAAEH,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,KAAK,EAAE1C,SAAS,CAAC2B,MAAtC;AAA8CgB,MAAAA,KAAK,EAAE;AAArD,KAHE,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eASA,oBAAC,QAAD;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,IAAI,EAAE,CACF;AAAEH,MAAAA,KAAK,EAAE,aAAT;AAAwBE,MAAAA,KAAK,EAAExC,kBAAkB,CAACuB,KAAlD;AAAyDkB,MAAAA,KAAK,EAAE;AAAhE,KADE,EAEF;AAAEH,MAAAA,KAAK,EAAE,aAAT;AAAwBE,MAAAA,KAAK,EAAExC,kBAAkB,CAACwB,UAAlD;AAA8DiB,MAAAA,KAAK,EAAE;AAArE,KAFE,EAGF;AAAEH,MAAAA,KAAK,EAAE,UAAT;AAAqBE,MAAAA,KAAK,EAAExC,kBAAkB,CAACyB,MAA/C;AAAuDgB,MAAAA,KAAK,EAAE;AAA9D,KAHE,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,CAnBJ,CALR,CAFJ;AAgDH,CArID;;AAuIA,eAAe/C,WAAf","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\nimport ScrumTable from \"./ScrumTable\";\nimport {AdderComponent, ContentContainer, Input} from \"../styledComps/styled\";\nimport UsersModal from \"./UsersModal\";\nimport MailModal from \"./MailModal\";\nimport { PieChart } from 'react-minimal-pie-chart';\n\nconst ProjectPage = () => {\n\n    const {id} = useParams();\n    const [project, setProject] = useState();\n    const [taskCount, setTaskCount] = useState();\n    const [businessValueCount, setBusinessValueCount] = useState();\n    const [loading, setLoading] = useState(true);\n    const [mouseOverAccept, setMouseOverAccept] = useState(false);\n\n    const getProject = async () => {\n        setLoading(true);\n        let response = await axios.get(\"http://localhost:8080/project/\" + id);\n        response.data.table.statuses.sort(function (a, b) {\n            return a.position - b.position;\n        });\n        response.data.table.statuses.map(status => {\n            status.tasks.sort(function (a, b) {\n                return a.position - b.position;\n            })\n        });\n        setProject(response.data);\n        tasksDistributionInStatuses(response.data.table.statuses);\n        countBusinessValue(response.data.table.statuses);\n        setLoading(false);\n    };\n\n    function tasksDistributionInStatuses(statuses) {\n        let projectStatuses = statuses;\n        let taskCounts = {start: 0, inProgress: 0, finish: 0};\n        projectStatuses.map((status) => {\n            if (status.position === 1) {\n                taskCounts.start += status.tasks.length;\n            } else if (status.position === projectStatuses.length) {\n                taskCounts.finish += status.tasks.length;\n            } else {\n                taskCounts.inProgress += status.tasks.length;\n            }\n        });\n        setTaskCount(taskCounts);\n    }\n\n    const countBusinessValue = (statuses) => {\n        let businessValueCount = {start: 0, inProgress: 0, finish: 0};\n        statuses.map(status => {\n            if (status.position === 1) {\n                status.tasks.map(task => {\n                    businessValueCount.start += task.businessValue;\n                })\n            } else if (status.position === statuses.length) {\n                status.tasks.map(task => {\n                    businessValueCount.finish += task.businessValue;\n                })\n            } else {\n                status.tasks.map(task => {\n                    businessValueCount.inProgress += task.businessValue;\n                })\n            }\n        });\n        setBusinessValueCount(businessValueCount);\n    };\n\n    const addNewColumn = async (columnName) => {\n        //setLoading(true);\n        let projectId = id;\n        let newStatus = {statusName: columnName, projectId: projectId};\n        await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n        getProject();\n    };\n\n    const addNewTask = async (taskName, statusId) => {\n        setLoading(true);\n        let task = {\n            statusId: statusId,\n            title: taskName\n        };\n        await axios.post(\"http://localhost:8080/project/newtask\", task);\n        getProject();\n\n    };\n\n    useEffect(() => {\n        getProject();\n    }, []);\n\n\n    return (\n\n        <div className={\"project_item_container_canvas\"}>\n\n            {loading ?\n                <h1>loading....</h1>\n                :\n                <div className={\"project_item_container\"}>\n                    <ContentContainer>\n                        <div className={\"project_title_container\"}>\n                            <h2>{project.title}</h2>\n                        </div>\n                            <UsersModal projectId={project.id} participants={project.participants}/>\n                            <MailModal projectId={project.id} />\n                    </ContentContainer>\n                    <div className={\"scrum_table_container\"}>\n                    <ScrumTable key={project.table.id}\n                                table={project.table}\n                                addNewColumn={addNewColumn}\n                                addNewTask={addNewTask}\n                                setTaskCount={setTaskCount}\n                                tasksDistributionInStatuses={tasksDistributionInStatuses}\n                                countBusinessValue={countBusinessValue}\n\n                    />\n                    </div>\n                    <div className=\"chart_container\">\n                    <PieChart\n                        className=\"chart\"\n                        data={[\n                            { title: 'Not Started', value: taskCount.start, color: '#dd2911' },\n                            { title: 'In Progress', value: taskCount.inProgress, color: '#efc310' },\n                            { title: 'Finished', value: taskCount.finish, color: '#5bc128' },\n                        ]}\n                    />\n                    <PieChart\n                        className=\"chart\"\n                        data={[\n                            { title: 'Not Started', value: businessValueCount.start, color: '#dd2911' },\n                            { title: 'In Progress', value: businessValueCount.inProgress, color: '#efc310' },\n                            { title: 'Finished', value: businessValueCount.finish, color: '#5bc128' },\n                        ]}\n                    />\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ProjectPage;"]},"metadata":{},"sourceType":"module"}