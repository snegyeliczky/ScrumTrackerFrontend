{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/TaskModal.js\";\nimport React, { useRef, useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, ContentContainer, Input } from \"../styledComps/styled\";\nimport axios from 'axios';\n\nconst TaskModal = ({\n  task,\n  setTask\n}) => {\n  const [visible, setVisible] = useState(false);\n  const businessValueRef = useRef(task.businessValue);\n  const descriptionRef = useRef(task.description);\n  const titleRef = useRef(task.title);\n  const positionRef = useRef(task.position);\n\n  async function uploadChanges(editedTask) {\n    console.log(editedTask);\n    await axios.put(\"http://localhost:8080/task/edit/\" + editedTask.id, editedTask);\n  }\n\n  function editTask(BusinessValue, Description, Title, Position) {\n    let newTask = { ...task\n    };\n    newTask.businessValue = BusinessValue;\n    newTask.description = Description;\n    newTask.title = Title;\n    newTask.position = Position;\n    return newTask;\n  }\n\n  function handleOk() {\n    let editedTask = editTask(businessValueRef.current.value, descriptionRef.current.value, titleRef.current.value, positionRef.current.value);\n    uploadChanges(editedTask);\n    setTask(editedTask);\n    setVisible(false);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormOutlined, {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Edit Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"text_input\",\n    placeholder: \"Title\",\n    defaultValue: task.title,\n    ref: titleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"textArea\", {\n    className: \"text_input\",\n    placeholder: \"Description\",\n    defaultValue: task.description,\n    ref: descriptionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Business value: \"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Business Value\",\n    defaultValue: task.businessValue,\n    ref: businessValueRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Position: \"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Position\",\n    defaultValue: task.position,\n    ref: positionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default TaskModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/TaskModal.js"],"names":["React","useRef","useState","Modal","Button","FormOutlined","AdderComponent","ContentContainer","Input","axios","TaskModal","task","setTask","visible","setVisible","businessValueRef","businessValue","descriptionRef","description","titleRef","title","positionRef","position","uploadChanges","editedTask","console","log","put","id","editTask","BusinessValue","Description","Title","Position","newTask","handleOk","current","value","handleCancel","showModal"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Modal, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../styledComps/styled\";\nimport axios from 'axios';\n\n\nconst TaskModal = ({task, setTask}) => {\n\n    const [visible, setVisible] = useState(false);\n\n    const businessValueRef = useRef(task.businessValue);\n    const descriptionRef = useRef(task.description);\n    const titleRef = useRef(task.title);\n    const positionRef = useRef(task.position);\n\n    async function uploadChanges(editedTask) {\n        console.log(editedTask);\n        await axios.put(\"http://localhost:8080/task/edit/\" + editedTask.id, editedTask);\n\n    }\n\n    function editTask(BusinessValue, Description, Title, Position) {\n        let newTask = {...task};\n        newTask.businessValue = BusinessValue;\n        newTask.description = Description;\n        newTask.title = Title;\n        newTask.position = Position;\n        return newTask;\n\n    }\n\n    function handleOk() {\n        let editedTask = editTask(businessValueRef.current.value,\n            descriptionRef.current.value,\n            titleRef.current.value,\n            positionRef.current.value);\n        uploadChanges(editedTask);\n        setTask(editedTask);\n        setVisible(false);\n\n\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true)\n    }\n\n    return (\n        <div>\n            <FormOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n            >\n                <h2>Edit Task</h2>\n                <div className={\"task_modal\"}>\n                    <div className={\"text_modal\"}>\n                        <label>Title: </label>\n                        <input\n                            className={\"text_input\"}\n                            placeholder={\"Title\"}\n                            defaultValue={task.title}\n                            ref={titleRef}/>\n                    </div>\n                    <div className={\"text_modal\"}>\n                        <label>Description: </label>\n                        <textArea\n                            className={\"text_input\"}\n                            placeholder={\"Description\"}\n                            defaultValue={task.description}\n                            ref={descriptionRef}/>\n                    </div>\n                </div>\n                <ContentContainer>\n                    <AdderComponent>\n                        <label>Business value: </label>\n                        <Input placeholder={\"Business Value\"}\n                               defaultValue={task.businessValue}\n                               ref={businessValueRef}/>\n                    </AdderComponent>\n                    <AdderComponent>\n                        <label>Position: </label>\n                        <Input placeholder={\"Position\"}\n                               defaultValue={task.position}\n                               ref={positionRef}/>\n                    </AdderComponent>\n                </ContentContainer>\n\n            </Modal>\n\n\n        </div>\n    );\n};\n\nexport default TaskModal;"]},"metadata":{},"sourceType":"module"}