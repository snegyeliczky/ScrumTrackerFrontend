{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/ProjectComponents/ProjectCard.js\";\nimport React, { useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { ApiOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { ProjectContext } from \"../../Contexts/ProjectContext\";\nimport ProjectCalls from \"../../Services/ProjectCalls\";\n\nconst ProjectCard = ({\n  project,\n  taskPercentageInProjectStatuses\n}) => {\n  const {\n    showErrorAlert,\n    showSuccessAlert\n  } = useContext(ProjectContext);\n  const history = useHistory();\n  const {\n    getProjects\n  } = useContext(ProjectContext);\n\n  const handleClick = () => {\n    history.push(\"/project/\" + project.id);\n  };\n\n  const startEndColor = taskPercentageInProjectStatuses.start;\n  const inProgressEndColorPercentage = taskPercentageInProjectStatuses.start + taskPercentageInProjectStatuses.inProgress;\n  const finalEndColorPercentage = taskPercentageInProjectStatuses.inProgress + taskPercentageInProjectStatuses.finish;\n  const showArchiveStyle = {\n    color: project.archive ? \"red\" : \"green\"\n  };\n  const ProjectBackground = {\n    background: `linear-gradient(90deg, rgba(124,33,33,0.8) 0% ${startEndColor}% ,\n         rgba(253,192,29,0.8) ${startEndColor}%  ${inProgressEndColorPercentage}% ,\n         rgba(69,252,70,0.8) ${inProgressEndColorPercentage}%  ${finalEndColorPercentage}% )`\n  };\n\n  const handleDelete = async e => {\n    e.stopPropagation();\n\n    try {\n      await ProjectCalls.deleteProject(project.id);\n      getProjects();\n    } catch (e) {\n      showErrorAlert(e.response.data.errors);\n    }\n  };\n\n  const archiveProject = async e => {\n    e.stopPropagation();\n    await ProjectCalls.archiveProject(project.id);\n    getProjects();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_card\",\n    onClick: handleClick,\n    style: ProjectBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_tool_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n    onClick: e => handleDelete(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ApiOutlined, {\n    onClick: e => archiveProject(e),\n    style: showArchiveStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_card_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, project.title));\n};\n\nexport default ProjectCard;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/ProjectComponents/ProjectCard.js"],"names":["React","useContext","useHistory","ApiOutlined","DeleteOutlined","ProjectContext","ProjectCalls","ProjectCard","project","taskPercentageInProjectStatuses","showErrorAlert","showSuccessAlert","history","getProjects","handleClick","push","id","startEndColor","start","inProgressEndColorPercentage","inProgress","finalEndColorPercentage","finish","showArchiveStyle","color","archive","ProjectBackground","background","handleDelete","e","stopPropagation","deleteProject","response","data","errors","archiveProject","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,mBAA1C;AACA,SAAQC,cAAR,QAA6B,+BAA7B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAgD;AAEhE,QAAM;AAACC,IAAAA,cAAD;AAAgBC,IAAAA;AAAhB,MAAoCV,UAAU,CAACI,cAAD,CAApD;AACA,QAAMO,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM;AAACW,IAAAA;AAAD,MAAgBZ,UAAU,CAACI,cAAD,CAAhC;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACtBF,IAAAA,OAAO,CAACG,IAAR,CAAa,cAAcP,OAAO,CAACQ,EAAnC;AACH,GAFD;;AAIA,QAAMC,aAAa,GAACR,+BAA+B,CAACS,KAApD;AACA,QAAMC,4BAA4B,GAAEV,+BAA+B,CAACS,KAAhC,GAAwCT,+BAA+B,CAACW,UAA5G;AACA,QAAMC,uBAAuB,GAAGZ,+BAA+B,CAACW,UAAhC,GAA2CX,+BAA+B,CAACa,MAA3G;AAEA,QAAMC,gBAAgB,GAAC;AACnBC,IAAAA,KAAK,EAAEhB,OAAO,CAACiB,OAAR,GAAgB,KAAhB,GAAsB;AADV,GAAvB;AAIA,QAAMC,iBAAiB,GAAG;AAEtBC,IAAAA,UAAU,EAAG,iDAAgDV,aAAc;gCACnDA,aAAc,MAAKE,4BAA6B;+BACjDA,4BAA6B,MAAKE,uBAAwB;AAJ3D,GAA1B;;AAOA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,eAAF;;AACA,QAAI;AACA,YAAMxB,YAAY,CAACyB,aAAb,CAA2BvB,OAAO,CAACQ,EAAnC,CAAN;AACAH,MAAAA,WAAW;AACd,KAHD,CAGE,OAAOgB,CAAP,EAAU;AACRnB,MAAAA,cAAc,CAACmB,CAAC,CAACG,QAAF,CAAWC,IAAX,CAAgBC,MAAjB,CAAd;AACH;AAEJ,GATD;;AAWA,QAAMC,cAAc,GAAG,MAAON,CAAP,IAAY;AAC/BA,IAAAA,CAAC,CAACC,eAAF;AACA,UAAMxB,YAAY,CAAC6B,cAAb,CAA4B3B,OAAO,CAACQ,EAApC,CAAN;AACAH,IAAAA,WAAW;AAEd,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAE,cAAhB;AAAgC,IAAA,OAAO,EAAEC,WAAzC;AAAsD,IAAA,KAAK,EAAEY,iBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAGG,CAAD,IAAOD,YAAY,CAACC,CAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAGA,CAAD,IAAKM,cAAc,CAACN,CAAD,CAAzC;AAA8C,IAAA,KAAK,EAAEN,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAE,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCf,OAAO,CAAC4B,KAA/C,CALJ,CADJ;AASH,CApDD;;AAsDA,eAAe7B,WAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {ApiOutlined, DeleteOutlined} from \"@ant-design/icons\";\nimport {ProjectContext} from \"../../Contexts/ProjectContext\";\nimport ProjectCalls from \"../../Services/ProjectCalls\";\n\nconst ProjectCard = ({project, taskPercentageInProjectStatuses}) => {\n\n    const {showErrorAlert,showSuccessAlert} = useContext(ProjectContext);\n    const history = useHistory();\n    const {getProjects} = useContext(ProjectContext);\n\n    const handleClick = () => {\n        history.push(\"/project/\" + project.id)\n    };\n\n    const startEndColor=taskPercentageInProjectStatuses.start;\n    const inProgressEndColorPercentage =taskPercentageInProjectStatuses.start + taskPercentageInProjectStatuses.inProgress;\n    const finalEndColorPercentage = taskPercentageInProjectStatuses.inProgress+taskPercentageInProjectStatuses.finish;\n\n    const showArchiveStyle={\n        color: project.archive?\"red\":\"green\",\n    };\n\n    const ProjectBackground = {\n\n        background: `linear-gradient(90deg, rgba(124,33,33,0.8) 0% ${startEndColor}% ,\n         rgba(253,192,29,0.8) ${startEndColor}%  ${inProgressEndColorPercentage}% ,\n         rgba(69,252,70,0.8) ${inProgressEndColorPercentage}%  ${finalEndColorPercentage}% )`,\n    };\n\n    const handleDelete = async (e) => {\n        e.stopPropagation();\n        try {\n            await ProjectCalls.deleteProject(project.id);\n            getProjects();\n        } catch (e) {\n            showErrorAlert(e.response.data.errors)\n        }\n\n    };\n\n    const archiveProject = async (e) =>{\n        e.stopPropagation();\n        await ProjectCalls.archiveProject(project.id);\n        getProjects();\n\n    };\n\n    return (\n        <div className={\"project_card\"} onClick={handleClick} style={ProjectBackground}>\n            <div className={\"project_tool_container\"}>\n                <DeleteOutlined onClick={(e) => handleDelete(e)}/>\n                <ApiOutlined onClick={(e)=>archiveProject(e)} style={showArchiveStyle}/>\n            </div>\n            <div className={\"project_card_title\"}>{project.title}</div>\n        </div>\n    );\n};\n\nexport default ProjectCard;"]},"metadata":{},"sourceType":"module"}