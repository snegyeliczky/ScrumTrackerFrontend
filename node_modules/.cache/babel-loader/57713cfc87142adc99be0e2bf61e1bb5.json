{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/template/lib/populate.js"],"names":["Object","defineProperty","exports","value","default","populatePlaceholders","t","_interopRequireWildcard","require","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","metadata","replacements","ast","cloneNode","placeholders","forEach","placeholder","name","placeholderName","Error","keys","placeholderNames","slice","reverse","applyReplacement","e","message","replacement","isDuplicate","Array","isArray","map","node","parent","index","resolve","type","stringLiteral","isStringLiteral","undefined","emptyStatement","blockStatement","expressionStatement","identifier","isStatement","validate","items","splice"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}"]},"metadata":{},"sourceType":"script"}