{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/UsersModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, ContentContainer, Input } from \"../styledComps/styled\";\nimport Autocomplete from 'react-autocomplete';\n\nconst UsersModal = () => {\n  const [value, setValue] = useState();\n  const [visible, setVisible] = useState(false);\n  const [users, setUsers] = useState([{\n    id: 'foo',\n    username: 'foo'\n  }, {\n    id: 'bar',\n    username: 'bar'\n  }, {\n    id: 'baz',\n    username: 'baz'\n  }]);\n\n  function handleOk() {\n    console.log(\"ok\");\n    setVisible(false);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormOutlined, {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    getItemValue: item => item.username,\n    items: users,\n    shouldItemRender: (item, value) => item.username.toLowerCase().indexOf(value.toLowerCase()) > -1,\n    getItemValue: item => item.label,\n    renderItem: (item, highlighted) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      style: {\n        backgroundColor: highlighted ? '#yellow' : 'transparent'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, item.label),\n    value: value,\n    onChange: e => setValue(e.target.value),\n    onSelect: value => setValue(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default UsersModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/UsersModal.js"],"names":["React","useState","Modal","Button","FormOutlined","AdderComponent","ContentContainer","Input","Autocomplete","UsersModal","value","setValue","visible","setVisible","users","setUsers","id","username","handleOk","console","log","handleCancel","showModal","item","toLowerCase","indexOf","label","highlighted","backgroundColor","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,MAA5B;AACA,OAAO,oBAAP;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,EAA0CC,KAA1C,QAAsD,uBAAtD;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,EAAjC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAC/B;AAAEe,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAD+B,EAE/B;AAAED,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAF+B,EAG/B;AAAED,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAH+B,CAAD,CAAlC;;AAMA,WAASC,QAAT,GAAoB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,WAASQ,YAAT,GAAwB;AACpBR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAED,WAASS,SAAT,GAAqB;AACjBT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAES,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AACI,IAAA,OAAO,EAAEV,OADb;AAEI,IAAA,IAAI,EAAEM,QAFV;AAGI,IAAA,QAAQ,EAAEG,YAHd;AAII,IAAA,KAAK,EAAE,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,YAAD;AACI,IAAA,YAAY,EAAGE,IAAD,IAAUA,IAAI,CAACN,QADjC;AAEI,IAAA,KAAK,EAAEH,KAFX;AAGI,IAAA,gBAAgB,EAAE,CAACS,IAAD,EAAOb,KAAP,KAAiBa,IAAI,CAACN,QAAL,CAAcO,WAAd,GAA4BC,OAA5B,CAAoCf,KAAK,CAACc,WAAN,EAApC,IAA2D,CAAC,CAHnG;AAII,IAAA,YAAY,EAAED,IAAI,IAAIA,IAAI,CAACG,KAJ/B;AAKI,IAAA,UAAU,EAAE,CAACH,IAAD,EAAOI,WAAP,kBACR;AACI,MAAA,GAAG,EAAEJ,IAAI,CAACP,EADd;AAEI,MAAA,KAAK,EAAE;AAAEY,QAAAA,eAAe,EAAED,WAAW,GAAG,SAAH,GAAe;AAA7C,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKJ,IAAI,CAACG,KAJV,CANR;AAaI,IAAA,KAAK,EAAEhB,KAbX;AAcI,IAAA,QAAQ,EAAEmB,CAAC,IAAIlB,QAAQ,CAAEkB,CAAC,CAACC,MAAF,CAASpB,KAAX,CAd3B;AAeI,IAAA,QAAQ,EAAEA,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAf/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAHJ,CADJ;AAiCH,CAxDD;;AA0DA,eAAeD,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Modal, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../styledComps/styled\";\nimport Autocomplete from 'react-autocomplete';\n\n\nconst UsersModal = () => {\n\n    const [value,setValue] = useState();\n    const [visible, setVisible] = useState(false);\n    const [users, setUsers] = useState([\n        { id: 'foo', username: 'foo' },\n        { id: 'bar', username: 'bar' },\n        { id: 'baz', username: 'baz' },\n    ]);\n\n    function handleOk() {\n        console.log(\"ok\")\n        setVisible(false);\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true)\n    }\n\n    return (\n        <div>\n\n            <FormOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n            >\n                <Autocomplete\n                    getItemValue={(item) => item.username}\n                    items={users}\n                    shouldItemRender={(item, value) => item.username.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                    getItemValue={item => item.label}\n                    renderItem={(item, highlighted) =>\n                        <div\n                            key={item.id}\n                            style={{ backgroundColor: highlighted ? '#yellow' : 'transparent'}}\n                        >\n                            {item.label}\n                        </div>\n                    }\n                    value={value}\n                    onChange={e => setValue( e.target.value )}\n                    onSelect={value => setValue(value)}\n                />\n\n\n            </Modal>\n\n        </div>\n    );\n};\n\nexport default UsersModal;"]},"metadata":{},"sourceType":"module"}