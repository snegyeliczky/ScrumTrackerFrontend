{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/contexts/ProjectContext.js\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const ProjectContext = createContext();\nexport const ProjectProvider = props => {\n  const [projects, setProjects] = useState([]);\n  const [showArchive, setShowArchive] = useState(false);\n  useEffect(() => {\n    getProjects();\n  }, [showArchive]);\n\n  const getProjects = () => {\n    showArchive ? getProjectsWithArchive() : getMyProjects();\n  };\n\n  const getMyProjects = async () => {\n    let response = await axios.get(\"http://localhost:8080/project/getmyprojects\");\n    setProjects(response.data);\n  };\n\n  const getProjectsWithArchive = async () => {\n    let response = await axios.get(\"http://localhost:8080/project/getmyprojectswitharchive\");\n    setProjects(response.data);\n  };\n\n  return /*#__PURE__*/React.createElement(ProjectContext.Provider, {\n    value: {\n      getProjects,\n      projects,\n      setProjects,\n      setShowArchive,\n      showArchive\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/contexts/ProjectContext.js"],"names":["React","useState","createContext","useEffect","axios","ProjectContext","ProjectProvider","props","projects","setProjects","showArchive","setShowArchive","getProjects","getProjectsWithArchive","getMyProjects","response","get","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,SAAxC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGH,aAAa,EAApC;AAEP,OAAO,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAEpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAaC,cAAb,IAA+BV,QAAQ,CAAC,KAAD,CAA7C;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACd,GAFQ,EAEP,CAACF,WAAD,CAFO,CAAT;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtBF,IAAAA,WAAW,GAAGG,sBAAsB,EAAzB,GAA8BC,aAAa,EAAtD;AACH,GAFD;;AAIA,QAAMA,aAAa,GAAG,YAAY;AAC9B,QAAIC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,6CAAV,CAArB;AACAP,IAAAA,WAAW,CAACM,QAAQ,CAACE,IAAV,CAAX;AACH,GAHD;;AAKA,QAAMJ,sBAAsB,GAAG,YAAY;AACvC,QAAIE,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,wDAAV,CAArB;AACAP,IAAAA,WAAW,CAACM,QAAQ,CAACE,IAAV,CAAX;AACH,GAHD;;AAOA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AAACL,MAAAA,WAAD;AAAcJ,MAAAA,QAAd;AAAuBC,MAAAA,WAAvB;AAAmCE,MAAAA,cAAnC;AAAkDD,MAAAA;AAAlD,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKH,KAAK,CAACW,QAHX,CADJ;AAOH,CAhCM","sourcesContent":["import React, {useState, createContext, useEffect} from \"react\";\nimport axios from \"axios\";\n\nexport const ProjectContext = createContext();\n\nexport const ProjectProvider = props => {\n\n    const [projects, setProjects] = useState([]);\n    const [showArchive,setShowArchive] = useState(false);\n\n    useEffect(() => {\n        getProjects();\n    },[showArchive]);\n\n    const getProjects = () => {\n        showArchive ? getProjectsWithArchive() : getMyProjects();\n    };\n\n    const getMyProjects = async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getmyprojects\");\n        setProjects(response.data);\n    };\n\n    const getProjectsWithArchive = async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getmyprojectswitharchive\");\n        setProjects(response.data);\n    };\n\n\n\n    return (\n        <ProjectContext.Provider\n            value={{getProjects, projects,setProjects,setShowArchive,showArchive}}\n        >\n            {props.children}\n        </ProjectContext.Provider>\n    )\n};\n\n"]},"metadata":{},"sourceType":"module"}