{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/Task.js\";\nimport React, { useState, useRef, useContext } from 'react';\nimport Column from \"./Column\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { ContentContainer } from \"../styledComps/styled\";\nimport TaskModal from \"./TaskModal\";\n\nconst Task = ({\n  task,\n  statusId,\n  onDragEnd,\n  dragItem,\n  handleDeleteTask\n}) => {\n  const [dragging, setDragging] = useState(false);\n\n  const handleDrag = e => {\n    let dragItemParams = {\n      statusId: statusId,\n      taskObject: task\n    };\n    dragItem.current = dragItemParams;\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const draggingStyle = currTaskId => {\n    return currTaskId === dragItem.current.taskObject.id ? \"dragged task_card\" : \"task_card\";\n  };\n\n  const handleDragEnd = e => {\n    onDragEnd(task);\n    setDragging(false);\n    dragItem.current = null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: dragging ? draggingStyle(task.id) : \"task_card\",\n    draggable: true,\n    \"aria-dropeffect\": \"none\",\n    onDragStart: event => handleDrag(event),\n    onDragEnd: e => handleDragEnd(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status_tool_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n    onClick: e => handleDeleteTask(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 54\n    }\n  }), \" \", /*#__PURE__*/React.createElement(TaskModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 113\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, task.title));\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/Task.js"],"names":["React","useState","useRef","useContext","Column","DeleteOutlined","ContentContainer","TaskModal","Task","task","statusId","onDragEnd","dragItem","handleDeleteTask","dragging","setDragging","handleDrag","e","dragItemParams","taskObject","current","setTimeout","draggingStyle","currTaskId","id","handleDragEnd","event","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,SAAQC,gBAAR,QAA+B,uBAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAgBC,EAAAA,SAAhB;AAA4BC,EAAAA,QAA5B;AAAsCC,EAAAA;AAAtC,CAAD,KAA6D;AAGtE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMe,UAAU,GAAIC,CAAD,IAAO;AACtB,QAAIC,cAAc,GAAG;AACjBR,MAAAA,QAAQ,EAAEA,QADO;AAEjBS,MAAAA,UAAU,EAACV;AAFM,KAArB;AAIAG,IAAAA,QAAQ,CAACQ,OAAT,GAAmBF,cAAnB;AACAG,IAAAA,UAAU,CAAC,MAAI;AACXN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAFS,EAER,CAFQ,CAAV;AAGH,GATD;;AAWA,QAAMO,aAAa,GAAIC,UAAD,IAAgB;AAClC,WAAOA,UAAU,KAAKX,QAAQ,CAACQ,OAAT,CAAiBD,UAAjB,CAA4BK,EAA3C,GAAgD,mBAAhD,GAAsE,WAA7E;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIR,CAAD,IAAM;AACxBN,IAAAA,SAAS,CAACF,IAAD,CAAT;AACAM,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAH,IAAAA,QAAQ,CAACQ,OAAT,GAAiB,IAAjB;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEN,QAAQ,GAAGQ,aAAa,CAACb,IAAI,CAACe,EAAN,CAAhB,GAA4B,WAApD;AACK,IAAA,SAAS,EAAE,IADhB;AAEK,uBAAiB,MAFtB;AAGK,IAAA,WAAW,EAAGE,KAAD,IAAYV,UAAU,CAACU,KAAD,CAHxC;AAIK,IAAA,SAAS,EAAGT,CAAD,IAAMQ,aAAa,CAACR,CAAD,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAK,IAAA,SAAS,EAAE,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyC,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAGA,CAAD,IAAKJ,gBAAgB,CAACJ,IAAI,CAACe,EAAN,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzC,oBAAoG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApG,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,IAAI,CAACkB,KAAV,CAPJ,CADJ;AAWH,CArCD;;AAuCA,eAAenB,IAAf","sourcesContent":["import React, {useState, useRef, useContext} from 'react';\nimport Column from \"./Column\";\nimport {DeleteOutlined} from \"@ant-design/icons\";\nimport {ContentContainer} from \"../styledComps/styled\";\nimport TaskModal from \"./TaskModal\";\n\n\nconst Task = ({task, statusId,onDragEnd , dragItem, handleDeleteTask}) => {\n\n\n    const [dragging, setDragging] = useState(false);\n\n    const handleDrag = (e) => {\n        let dragItemParams = {\n            statusId: statusId,\n            taskObject:task\n        };\n        dragItem.current = dragItemParams;\n        setTimeout(()=>{\n            setDragging(true);\n        },0)\n    };\n\n    const draggingStyle = (currTaskId) => {\n        return currTaskId === dragItem.current.taskObject.id ? \"dragged task_card\" : \"task_card\";\n    };\n\n    const handleDragEnd = (e) =>{\n        onDragEnd(task);\n        setDragging(false);\n        dragItem.current=null;\n    };\n\n    return (\n        <div className={dragging ? draggingStyle(task.id) : \"task_card\"}\n             draggable={true}\n             aria-dropeffect={\"none\"}\n             onDragStart={(event) => (handleDrag(event))}\n             onDragEnd={(e) =>handleDragEnd(e)}\n             >\n            <div className={\"status_tool_container\"}><DeleteOutlined onClick={(e)=>handleDeleteTask(task.id)}/> <TaskModal/></div>\n            <h3>{task.title}</h3>\n        </div>\n    );\n};\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}