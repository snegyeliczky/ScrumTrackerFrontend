{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/UsersModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined, CheckOutlined, UserAddOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, ContentContainer, Input } from \"../styledComps/styled\";\nimport Autocomplete from 'react-autocomplete';\nimport axios from \"axios\";\n\nconst UsersModal = ({\n  projectId,\n  participants\n}) => {\n  const [value, setValue] = useState();\n  const [visible, setVisible] = useState(false);\n  const [users, setUsers] = useState([{\n    username: \"type for search...\"\n  }]);\n  const [projectParticipants, setProjectParticipants] = useState(participants);\n\n  async function handelSearchChange(e) {\n    let userName = e.target.value;\n    setValue(userName);\n\n    if (userName.length > 2) {\n      let userObj = {\n        username: userName\n      };\n      let axiosResponse = await axios.post(\"http://localhost:8080/user/search\", userObj);\n      console.log(axiosResponse.data);\n      setUsers(axiosResponse.data);\n    }\n  }\n\n  function handleOk() {\n    console.log(\"ok\");\n    setVisible(false);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  async function handleAddUser() {\n    let user = {\n      username: value\n    };\n    console.log(user);\n    let axiosResponse = await axios.post(\"http://localhost:8080/project/adduser/\" + projectId, user);\n    setProjectParticipants(axiosResponse.data);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserAddOutlined, {\n    onClick: showModal,\n    style: {\n      fontSize: \"35px\",\n      padding: \"10px\",\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    getItemValue: item => item.username,\n    items: users //shouldItemRender={(item, value) => item.username.toLowerCase().indexOf(value.toLowerCase()) > -1}\n    ,\n    renderItem: (item, highlighted) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      style: {\n        backgroundColor: highlighted ? 'yellow' : 'transparent'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, item.username),\n    value: value,\n    onChange: e => handelSearchChange(e),\n    onSelect: value => setValue(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(UserAddOutlined, {\n    onClick: handleAddUser,\n    style: {\n      fontSize: \"35px\",\n      padding: \"10px\",\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), projectParticipants.map(participant => /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 57\n    }\n  }, participant.username))));\n};\n\nexport default UsersModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/UsersModal.js"],"names":["React","useState","Modal","Button","FormOutlined","CheckOutlined","UserAddOutlined","AdderComponent","ContentContainer","Input","Autocomplete","axios","UsersModal","projectId","participants","value","setValue","visible","setVisible","users","setUsers","username","projectParticipants","setProjectParticipants","handelSearchChange","e","userName","target","length","userObj","axiosResponse","post","console","log","data","handleOk","handleCancel","showModal","handleAddUser","user","fontSize","padding","color","item","highlighted","id","backgroundColor","map","participant"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Modal, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined, CheckOutlined, UserAddOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../styledComps/styled\";\nimport Autocomplete from 'react-autocomplete';\nimport axios from \"axios\";\n\n\nconst UsersModal = ({projectId, participants}) => {\n\n    const [value, setValue] = useState();\n    const [visible, setVisible] = useState(false);\n    const [users, setUsers] = useState([{username: \"type for search...\"}]);\n    const [projectParticipants, setProjectParticipants] = useState(participants);\n\n    async function handelSearchChange(e) {\n        let userName = e.target.value;\n        setValue(userName);\n        if (userName.length > 2) {\n            let userObj = {username: userName};\n            let axiosResponse = await axios.post(\"http://localhost:8080/user/search\", userObj);\n            console.log(axiosResponse.data);\n            setUsers(axiosResponse.data);\n        }\n\n\n    }\n\n    function handleOk() {\n        console.log(\"ok\");\n        setVisible(false);\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true);\n    }\n\n\n    async function handleAddUser() {\n        let user = {username: value};\n        console.log(user);\n        let axiosResponse = await axios.post(\"http://localhost:8080/project/adduser/\" + projectId, user);\n        setProjectParticipants(axiosResponse.data);\n    }\n\n    return (\n        <div>\n\n            <UserAddOutlined onClick={showModal} style={{fontSize: \"35px\", padding: \"10px\", color: \"green\"}}/>\n\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n            >\n                <Autocomplete\n                    getItemValue={(item) => item.username}\n                    items={users}\n                    //shouldItemRender={(item, value) => item.username.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                    renderItem={(item, highlighted) =>\n                        <div\n                            key={item.id}\n                            style={{backgroundColor: highlighted ? 'yellow' : 'transparent'}}\n                        >\n                            {item.username}\n                        </div>\n                    }\n                    value={value}\n                    onChange={e => handelSearchChange(e)}\n                    onSelect={value => setValue(value)}\n                />\n                <UserAddOutlined onClick={handleAddUser} style={{fontSize: \"35px\", padding: \"10px\", color: \"green\"}}/>\n                {projectParticipants.map(participant => <h2>{participant.username}</h2>)}\n\n            </Modal>\n\n        </div>\n    );\n};\n\nexport default UsersModal;"]},"metadata":{},"sourceType":"module"}