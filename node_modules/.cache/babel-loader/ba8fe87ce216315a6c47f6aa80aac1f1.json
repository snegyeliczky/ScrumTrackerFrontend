{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\nimport AddNewProject from \"./AddNewProject\";\nimport ProjectCard from \"./ProjectCard\";\nimport { ContentContainer } from \"../styledComps/styled\";\nimport { ApiOutlined } from \"@ant-design/icons\";\n\nconst ProjectList = () => {\n  const {\n    getProjects,\n    projects,\n    setShowArchive,\n    showArchive\n  } = useContext(ProjectContext);\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  function tasksDistributionInStatuses(project) {\n    let projectStatuses = project.table.statuses;\n    let taskCounts = {\n      start: 0,\n      inProgress: 0,\n      finish: 0,\n      all: 0\n    };\n    projectStatuses.map(status => {\n      taskCounts.all += status.tasks.length;\n\n      if (status.position === 1) {\n        taskCounts.start += status.tasks.length;\n      } else if (status.position === projectStatuses.length) {\n        taskCounts.finish += status.tasks.length;\n      } else {\n        taskCounts.inProgress += status.tasks.length;\n      }\n    });\n    console.log(taskCounts);\n    return taskCounts;\n  }\n\n  function countTaskPercentageInProjectStatuses(project) {\n    let taskPercentageInStatuses = tasksDistributionInStatuses(project);\n\n    for (let [key, value] of Object.entries(taskPercentageInStatuses)) {\n      taskPercentageInStatuses[key] = parseInt((taskPercentageInStatuses[key] / taskPercentageInStatuses.all * 100).toFixed(0));\n    }\n\n    return taskPercentageInStatuses;\n  }\n\n  const showArchiveStyle = {\n    fontSize: \"35px\",\n    color: showArchive ? \"green\" : \"red\",\n    right: \"10%\",\n    position: \"absolute\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project_page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Your Projects\"), /*#__PURE__*/React.createElement(ApiOutlined, {\n    onClick: e => setShowArchive(!showArchive),\n    style: showArchiveStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ContentContainer, {\n    className: \"project_page__project_list_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, projects.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"You don't have any project yet.\") : projects.map(project => {\n    console.log(project.archive);\n    let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      key: project.id,\n      project: project,\n      taskPercentageInProjectStatuses: taskPercentageInProjectStatuses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 36\n      }\n    });\n  })), /*#__PURE__*/React.createElement(AddNewProject, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ProjectList;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ProjectList.js"],"names":["React","useContext","useEffect","useState","ProjectContext","AddNewProject","ProjectCard","ContentContainer","ApiOutlined","ProjectList","getProjects","projects","setShowArchive","showArchive","tasksDistributionInStatuses","project","projectStatuses","table","statuses","taskCounts","start","inProgress","finish","all","map","status","tasks","length","position","console","log","countTaskPercentageInProjectStatuses","taskPercentageInStatuses","key","value","Object","entries","parseInt","toFixed","showArchiveStyle","fontSize","color","right","e","archive","taskPercentageInProjectStatuses","id"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport {ProjectContext} from \"../contexts/ProjectContext\";\nimport AddNewProject from \"./AddNewProject\";\nimport ProjectCard from \"./ProjectCard\";\nimport {ContentContainer} from \"../styledComps/styled\"\nimport {ApiOutlined} from \"@ant-design/icons\";\n\nconst ProjectList = () => {\n\n    const {getProjects, projects, setShowArchive, showArchive} = useContext(ProjectContext);\n\n    useEffect(() => {\n            getProjects();\n        }, []\n    );\n\n\n    function tasksDistributionInStatuses(project) {\n        let projectStatuses = project.table.statuses;\n        let taskCounts = {start: 0, inProgress: 0, finish: 0, all: 0};\n        projectStatuses.map((status) => {\n            taskCounts.all += status.tasks.length;\n            if (status.position === 1) {\n                taskCounts.start += status.tasks.length;\n            } else if (status.position === projectStatuses.length) {\n                taskCounts.finish += status.tasks.length;\n            } else {\n                taskCounts.inProgress += status.tasks.length;\n            }\n        });\n        console.log(taskCounts);\n        return taskCounts;\n    }\n\n    function countTaskPercentageInProjectStatuses(project) {\n\n        let taskPercentageInStatuses = tasksDistributionInStatuses(project);\n        for (let [key, value] of Object.entries(taskPercentageInStatuses)) {\n            taskPercentageInStatuses[key] = parseInt(((taskPercentageInStatuses[key] / taskPercentageInStatuses.all) * 100).toFixed(0));\n        }\n        return taskPercentageInStatuses;\n    }\n\n    const showArchiveStyle={\n        fontSize: \"35px\",\n        color: showArchive?\"green\":\"red\",\n        right: \"10%\",\n        position: \"absolute\",\n    };\n\n    return (\n        <div className=\"project_page\">\n            <ContentContainer>\n                <h2>Your Projects</h2>\n\n                <ApiOutlined onClick={(e) => setShowArchive(!showArchive)} style={showArchiveStyle}/>\n\n            </ContentContainer>\n            <ContentContainer className=\"project_page__project_list_container\">\n                {projects.length === 0 ?\n                    <div>You don't have any project yet.</div>\n                    :\n                    projects.map((project) => {\n                            console.log(project.archive);\n                            let taskPercentageInProjectStatuses = countTaskPercentageInProjectStatuses(project);\n                            return <ProjectCard key={project.id}\n                                                project={project}\n                                                taskPercentageInProjectStatuses={taskPercentageInProjectStatuses}/>\n                        }\n                    )}\n            </ContentContainer>\n            <AddNewProject/>\n        </div>\n    )\n};\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}