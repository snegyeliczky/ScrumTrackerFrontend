{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnaryExpression = UnaryExpression;\nexports.DoExpression = DoExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.NewExpression = NewExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ThisExpression = ThisExpression;\nexports.Super = Super;\nexports.Decorator = Decorator;\nexports.OptionalMemberExpression = OptionalMemberExpression;\nexports.OptionalCallExpression = OptionalCallExpression;\nexports.CallExpression = CallExpression;\nexports.Import = Import;\nexports.EmptyStatement = EmptyStatement;\nexports.ExpressionStatement = ExpressionStatement;\nexports.AssignmentPattern = AssignmentPattern;\nexports.LogicalExpression = exports.BinaryExpression = exports.AssignmentExpression = AssignmentExpression;\nexports.BindExpression = BindExpression;\nexports.MemberExpression = MemberExpression;\nexports.MetaProperty = MetaProperty;\nexports.PrivateName = PrivateName;\nexports.V8IntrinsicIdentifier = V8IntrinsicIdentifier;\nexports.AwaitExpression = exports.YieldExpression = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar n = _interopRequireWildcard(require(\"../node\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction UnaryExpression(node) {\n  if (node.operator === \"void\" || node.operator === \"delete\" || node.operator === \"typeof\" || node.operator === \"throw\") {\n    this.word(node.operator);\n    this.space();\n  } else {\n    this.token(node.operator);\n  }\n\n  this.print(node.argument, node);\n}\n\nfunction DoExpression(node) {\n  this.word(\"do\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ParenthesizedExpression(node) {\n  this.token(\"(\");\n  this.print(node.expression, node);\n  this.token(\")\");\n}\n\nfunction UpdateExpression(node) {\n  if (node.prefix) {\n    this.token(node.operator);\n    this.print(node.argument, node);\n  } else {\n    this.startTerminatorless(true);\n    this.print(node.argument, node);\n    this.endTerminatorless();\n    this.token(node.operator);\n  }\n}\n\nfunction ConditionalExpression(node) {\n  this.print(node.test, node);\n  this.space();\n  this.token(\"?\");\n  this.space();\n  this.print(node.consequent, node);\n  this.space();\n  this.token(\":\");\n  this.space();\n  this.print(node.alternate, node);\n}\n\nfunction NewExpression(node, parent) {\n  this.word(\"new\");\n  this.space();\n  this.print(node.callee, node);\n\n  if (this.format.minified && node.arguments.length === 0 && !node.optional && !t.isCallExpression(parent, {\n    callee: node\n  }) && !t.isMemberExpression(parent) && !t.isNewExpression(parent)) {\n    return;\n  }\n\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction SequenceExpression(node) {\n  this.printList(node.expressions, node);\n}\n\nfunction ThisExpression() {\n  this.word(\"this\");\n}\n\nfunction Super() {\n  this.word(\"super\");\n}\n\nfunction Decorator(node) {\n  this.token(\"@\");\n  this.print(node.expression, node);\n  this.newline();\n}\n\nfunction OptionalMemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && t.isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (t.isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  if (computed) {\n    this.token(\"[\");\n    this.print(node.property, node);\n    this.token(\"]\");\n  } else {\n    if (!node.optional) {\n      this.token(\".\");\n    }\n\n    this.print(node.property, node);\n  }\n}\n\nfunction OptionalCallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction CallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction Import() {\n  this.word(\"import\");\n}\n\nfunction buildYieldAwait(keyword) {\n  return function (node) {\n    this.word(keyword);\n\n    if (node.delegate) {\n      this.token(\"*\");\n    }\n\n    if (node.argument) {\n      this.space();\n      const terminatorState = this.startTerminatorless();\n      this.print(node.argument, node);\n      this.endTerminatorless(terminatorState);\n    }\n  };\n}\n\nconst YieldExpression = buildYieldAwait(\"yield\");\nexports.YieldExpression = YieldExpression;\nconst AwaitExpression = buildYieldAwait(\"await\");\nexports.AwaitExpression = AwaitExpression;\n\nfunction EmptyStatement() {\n  this.semicolon(true);\n}\n\nfunction ExpressionStatement(node) {\n  this.print(node.expression, node);\n  this.semicolon();\n}\n\nfunction AssignmentPattern(node) {\n  this.print(node.left, node);\n  if (node.left.optional) this.token(\"?\");\n  this.print(node.left.typeAnnotation, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right, node);\n}\n\nfunction AssignmentExpression(node, parent) {\n  const parens = this.inForStatementInitCounter && node.operator === \"in\" && !n.needsParens(node, parent);\n\n  if (parens) {\n    this.token(\"(\");\n  }\n\n  this.print(node.left, node);\n  this.space();\n\n  if (node.operator === \"in\" || node.operator === \"instanceof\") {\n    this.word(node.operator);\n  } else {\n    this.token(node.operator);\n  }\n\n  this.space();\n  this.print(node.right, node);\n\n  if (parens) {\n    this.token(\")\");\n  }\n}\n\nfunction BindExpression(node) {\n  this.print(node.object, node);\n  this.token(\"::\");\n  this.print(node.callee, node);\n}\n\nfunction MemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && t.isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (t.isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (computed) {\n    this.token(\"[\");\n    this.print(node.property, node);\n    this.token(\"]\");\n  } else {\n    this.token(\".\");\n    this.print(node.property, node);\n  }\n}\n\nfunction MetaProperty(node) {\n  this.print(node.meta, node);\n  this.token(\".\");\n  this.print(node.property, node);\n}\n\nfunction PrivateName(node) {\n  this.token(\"#\");\n  this.print(node.id, node);\n}\n\nfunction V8IntrinsicIdentifier(node) {\n  this.token(\"%\");\n  this.word(node.name);\n}","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/node_modules/@babel/generator/lib/generators/expressions.js"],"names":["Object","defineProperty","exports","value","UnaryExpression","DoExpression","ParenthesizedExpression","UpdateExpression","ConditionalExpression","NewExpression","SequenceExpression","ThisExpression","Super","Decorator","OptionalMemberExpression","OptionalCallExpression","CallExpression","Import","EmptyStatement","ExpressionStatement","AssignmentPattern","LogicalExpression","BinaryExpression","AssignmentExpression","BindExpression","MemberExpression","MetaProperty","PrivateName","V8IntrinsicIdentifier","AwaitExpression","YieldExpression","t","_interopRequireWildcard","require","n","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","default","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","node","operator","word","space","token","print","argument","body","expression","prefix","startTerminatorless","endTerminatorless","test","consequent","alternate","parent","callee","format","minified","arguments","length","optional","isCallExpression","isMemberExpression","isNewExpression","typeArguments","typeParameters","printList","expressions","newline","object","computed","property","TypeError","isLiteral","buildYieldAwait","keyword","delegate","terminatorState","semicolon","left","typeAnnotation","right","parens","inForStatementInitCounter","needsParens","meta","id","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnaryExpression = UnaryExpression;\nexports.DoExpression = DoExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.NewExpression = NewExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ThisExpression = ThisExpression;\nexports.Super = Super;\nexports.Decorator = Decorator;\nexports.OptionalMemberExpression = OptionalMemberExpression;\nexports.OptionalCallExpression = OptionalCallExpression;\nexports.CallExpression = CallExpression;\nexports.Import = Import;\nexports.EmptyStatement = EmptyStatement;\nexports.ExpressionStatement = ExpressionStatement;\nexports.AssignmentPattern = AssignmentPattern;\nexports.LogicalExpression = exports.BinaryExpression = exports.AssignmentExpression = AssignmentExpression;\nexports.BindExpression = BindExpression;\nexports.MemberExpression = MemberExpression;\nexports.MetaProperty = MetaProperty;\nexports.PrivateName = PrivateName;\nexports.V8IntrinsicIdentifier = V8IntrinsicIdentifier;\nexports.AwaitExpression = exports.YieldExpression = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar n = _interopRequireWildcard(require(\"../node\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction UnaryExpression(node) {\n  if (node.operator === \"void\" || node.operator === \"delete\" || node.operator === \"typeof\" || node.operator === \"throw\") {\n    this.word(node.operator);\n    this.space();\n  } else {\n    this.token(node.operator);\n  }\n\n  this.print(node.argument, node);\n}\n\nfunction DoExpression(node) {\n  this.word(\"do\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ParenthesizedExpression(node) {\n  this.token(\"(\");\n  this.print(node.expression, node);\n  this.token(\")\");\n}\n\nfunction UpdateExpression(node) {\n  if (node.prefix) {\n    this.token(node.operator);\n    this.print(node.argument, node);\n  } else {\n    this.startTerminatorless(true);\n    this.print(node.argument, node);\n    this.endTerminatorless();\n    this.token(node.operator);\n  }\n}\n\nfunction ConditionalExpression(node) {\n  this.print(node.test, node);\n  this.space();\n  this.token(\"?\");\n  this.space();\n  this.print(node.consequent, node);\n  this.space();\n  this.token(\":\");\n  this.space();\n  this.print(node.alternate, node);\n}\n\nfunction NewExpression(node, parent) {\n  this.word(\"new\");\n  this.space();\n  this.print(node.callee, node);\n\n  if (this.format.minified && node.arguments.length === 0 && !node.optional && !t.isCallExpression(parent, {\n    callee: node\n  }) && !t.isMemberExpression(parent) && !t.isNewExpression(parent)) {\n    return;\n  }\n\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction SequenceExpression(node) {\n  this.printList(node.expressions, node);\n}\n\nfunction ThisExpression() {\n  this.word(\"this\");\n}\n\nfunction Super() {\n  this.word(\"super\");\n}\n\nfunction Decorator(node) {\n  this.token(\"@\");\n  this.print(node.expression, node);\n  this.newline();\n}\n\nfunction OptionalMemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && t.isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (t.isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  if (computed) {\n    this.token(\"[\");\n    this.print(node.property, node);\n    this.token(\"]\");\n  } else {\n    if (!node.optional) {\n      this.token(\".\");\n    }\n\n    this.print(node.property, node);\n  }\n}\n\nfunction OptionalCallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction CallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction Import() {\n  this.word(\"import\");\n}\n\nfunction buildYieldAwait(keyword) {\n  return function (node) {\n    this.word(keyword);\n\n    if (node.delegate) {\n      this.token(\"*\");\n    }\n\n    if (node.argument) {\n      this.space();\n      const terminatorState = this.startTerminatorless();\n      this.print(node.argument, node);\n      this.endTerminatorless(terminatorState);\n    }\n  };\n}\n\nconst YieldExpression = buildYieldAwait(\"yield\");\nexports.YieldExpression = YieldExpression;\nconst AwaitExpression = buildYieldAwait(\"await\");\nexports.AwaitExpression = AwaitExpression;\n\nfunction EmptyStatement() {\n  this.semicolon(true);\n}\n\nfunction ExpressionStatement(node) {\n  this.print(node.expression, node);\n  this.semicolon();\n}\n\nfunction AssignmentPattern(node) {\n  this.print(node.left, node);\n  if (node.left.optional) this.token(\"?\");\n  this.print(node.left.typeAnnotation, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right, node);\n}\n\nfunction AssignmentExpression(node, parent) {\n  const parens = this.inForStatementInitCounter && node.operator === \"in\" && !n.needsParens(node, parent);\n\n  if (parens) {\n    this.token(\"(\");\n  }\n\n  this.print(node.left, node);\n  this.space();\n\n  if (node.operator === \"in\" || node.operator === \"instanceof\") {\n    this.word(node.operator);\n  } else {\n    this.token(node.operator);\n  }\n\n  this.space();\n  this.print(node.right, node);\n\n  if (parens) {\n    this.token(\")\");\n  }\n}\n\nfunction BindExpression(node) {\n  this.print(node.object, node);\n  this.token(\"::\");\n  this.print(node.callee, node);\n}\n\nfunction MemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && t.isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (t.isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (computed) {\n    this.token(\"[\");\n    this.print(node.property, node);\n    this.token(\"]\");\n  } else {\n    this.token(\".\");\n    this.print(node.property, node);\n  }\n}\n\nfunction MetaProperty(node) {\n  this.print(node.meta, node);\n  this.token(\".\");\n  this.print(node.property, node);\n}\n\nfunction PrivateName(node) {\n  this.token(\"#\");\n  this.print(node.id, node);\n}\n\nfunction V8IntrinsicIdentifier(node) {\n  this.token(\"%\");\n  this.word(node.name);\n}"]},"metadata":{},"sourceType":"script"}