{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ScrumTable.js\";\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport Column from \"./Column\";\nimport { DragAndDropContext } from \"../contexts/DragNDropContext\";\n\nconst ScrumTable = ({\n  table\n}) => {\n  const [statuses, setStatuses] = useState(table.statuses); //dragNDrop\n\n  const dragItem = useRef(); //dragged task id and status id where it come from\n\n  const onDragEnter = (e, newStatusId) => {\n    console.log(\"culomn ID:\");\n    console.log(newStatusId);\n    console.log(\"draging item\");\n    console.log(dragItem);\n  };\n  /*\n  const onDragEnter = (e, newStatusId) => {\n      let newStatuses = table.statuses;\n      for (let status of newStatuses) {\n          if (status.id === dragItem.current.statusId) {\n              let taskArr = [];\n              for (let task of status.tasks) {\n                  if (task.id === dragItem.current.taskId) {\n                      continue;\n                  }\n                  taskArr.push(task);\n              }\n              status.tasks = taskArr\n          }\n          if (newStatusId === status.id) {\n              status.tasks.push(dragItem.current.taskObject)\n          }\n       }\n      setStatuses(newStatuses);\n      console.log(statuses);\n  };\n    */\n  //\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrumTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, statuses.map(status => {\n    return /*#__PURE__*/React.createElement(Column, {\n      dragItem: dragItem,\n      key: status.id,\n      status: status,\n      onDragEnter: onDragEnter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }\n    });\n  }));\n};\n\nexport default ScrumTable;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/ScrumTable.js"],"names":["React","useState","useContext","useEffect","useRef","useParams","axios","Column","DragAndDropContext","ScrumTable","table","statuses","setStatuses","dragItem","onDragEnter","e","newStatusId","console","log","map","status","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,EAAgDC,MAAhD,QAA6D,OAA7D;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,kBAAR,QAAiC,8BAAjC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAE5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACS,KAAK,CAACC,QAAP,CAAxC,CAF4B,CAI5B;;AAEA,QAAME,QAAQ,GAAGT,MAAM,EAAvB,CAN4B,CAMD;;AAE3B,QAAMU,WAAW,GAAG,CAACC,CAAD,EAAIC,WAAJ,KAAoB;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEH,GAND;AAQA;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,CAACQ,GAAT,CAAaC,MAAM,IAAI;AACpB,wBAAO,oBAAC,MAAD;AACH,MAAA,QAAQ,EAAEP,QADP;AAEH,MAAA,GAAG,EAAEO,MAAM,CAACC,EAFT;AAGH,MAAA,MAAM,EAAED,MAHL;AAIH,MAAA,WAAW,EAAEN,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOH,GARA,CADL,CADJ;AAaH,CAxDD;;AA0DA,eAAeL,UAAf","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\nimport Column from \"./Column\";\nimport {DragAndDropContext} from \"../contexts/DragNDropContext\";\n\nconst ScrumTable = ({table}) => {\n\n    const [statuses, setStatuses] = useState(table.statuses);\n\n    //dragNDrop\n\n    const dragItem = useRef(); //dragged task id and status id where it come from\n\n    const onDragEnter = (e, newStatusId) => {\n        console.log(\"culomn ID:\");\n        console.log(newStatusId);\n        console.log(\"draging item\");\n        console.log(dragItem);\n        \n    };\n\n    /*\n    const onDragEnter = (e, newStatusId) => {\n        let newStatuses = table.statuses;\n        for (let status of newStatuses) {\n            if (status.id === dragItem.current.statusId) {\n                let taskArr = [];\n                for (let task of status.tasks) {\n                    if (task.id === dragItem.current.taskId) {\n                        continue;\n                    }\n                    taskArr.push(task);\n                }\n                status.tasks = taskArr\n            }\n            if (newStatusId === status.id) {\n                status.tasks.push(dragItem.current.taskObject)\n            }\n\n        }\n        setStatuses(newStatuses);\n        console.log(statuses);\n    };\n\n     */\n\n    //\n\n    return (\n        <div className={\"scrumTable\"}>\n            {statuses.map(status => {\n                return <Column\n                    dragItem={dragItem}\n                    key={status.id}\n                    status={status}\n                    onDragEnter={onDragEnter}\n                />\n\n            })}\n        </div>\n    );\n};\n\nexport default ScrumTable;"]},"metadata":{},"sourceType":"module"}