{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nexport default {\n  getMyProjects: async () => {\n    let response = await axios.get(\"http://localhost:8080/project/getactiveprojects\");\n    return response.data;\n  },\n  getArchiveProjects: async () => {\n    let response = await axios.get(\"http://localhost:8080/project/getarchiveprojects\");\n    return response.data;\n  },\n  getParticipatedProjects: async () => {\n    let response = await axios.get(\"http://localhost:8080/project/getparticipateprojects\");\n    return response.data;\n  },\n  addNewProject: async projectNameObject => {\n    await axios.post(\"http://localhost:8080/project/create\", projectNameObject);\n  },\n  getProject: async id => {\n    let response = await axios.get(\"http://localhost:8080/project/\" + id);\n    return response.data;\n  },\n  addNewColumn: async newStatus => {\n    await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n  },\n  addNewTask: async task => {\n    await axios.post(\"http://localhost:8080/project/newtask\", task);\n  },\n  deleteProject: async projectId => {\n    await axios.delete(\"http://localhost:8080/project/delete/\" + projectId);\n  },\n  archiveProject: async projectId => {\n    await axios.put(\"http://localhost:8080/project/archive/\" + projectId);\n  },\n  sendMail: async (projectId, emailCred) => {\n    await axios.post(\"http://localhost:8080/project/email/\" + projectId, emailCred);\n  },\n  deleteStatus: async (statusID, tableId) => {\n    await axios.delete(\"http://localhost:8080/project/deletestatus?statusid=\" + statusID + \"&tableid=\" + tableId);\n  }\n};","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/Services/ProjectCalls.js"],"names":["React","axios","getMyProjects","response","get","data","getArchiveProjects","getParticipatedProjects","addNewProject","projectNameObject","post","getProject","id","addNewColumn","newStatus","addNewTask","task","deleteProject","projectId","delete","archiveProject","put","sendMail","emailCred","deleteStatus","statusID","tableId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;AAEXC,EAAAA,aAAa,EAAE,YAAY;AACvB,QAAIC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,iDAAV,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACH,GALU;AAOXC,EAAAA,kBAAkB,EAAE,YAAY;AAC5B,QAAIH,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,kDAAV,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACH,GAVU;AAYXE,EAAAA,uBAAuB,EAAE,YAAY;AACjC,QAAIJ,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,sDAAV,CAArB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACH,GAfU;AAiBXG,EAAAA,aAAa,EAAE,MAAOC,iBAAP,IAA6B;AACxC,UAAMR,KAAK,CAACS,IAAN,CAAW,sCAAX,EAAmDD,iBAAnD,CAAN;AACH,GAnBU;AAqBXE,EAAAA,UAAU,EAAE,MAAOC,EAAP,IAAc;AACtB,QAAIT,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,mCAAmCQ,EAA7C,CAArB;AACA,WAAOT,QAAQ,CAACE,IAAhB;AACH,GAxBU;AA0BXQ,EAAAA,YAAY,EAAG,MAAOC,SAAP,IAAqB;AAChC,UAAMb,KAAK,CAACS,IAAN,CAAW,yCAAX,EAAsDI,SAAtD,CAAN;AACH,GA5BU;AA8BXC,EAAAA,UAAU,EAAG,MAAOC,IAAP,IAAgB;AACzB,UAAMf,KAAK,CAACS,IAAN,CAAW,uCAAX,EAAoDM,IAApD,CAAN;AACH,GAhCU;AAkCVC,EAAAA,aAAa,EAAG,MAAOC,SAAP,IAAqB;AAClC,UAAMjB,KAAK,CAACkB,MAAN,CAAa,0CAA0CD,SAAvD,CAAN;AACH,GApCU;AAsCXE,EAAAA,cAAc,EAAG,MAAOF,SAAP,IAAoB;AACjC,UAAMjB,KAAK,CAACoB,GAAN,CAAU,2CAAyCH,SAAnD,CAAN;AACH,GAxCU;AA0CXI,EAAAA,QAAQ,EAAG,OAAOJ,SAAP,EAAiBK,SAAjB,KAA8B;AACtC,UAAMtB,KAAK,CAACS,IAAN,CAAW,yCAAuCQ,SAAlD,EAA4DK,SAA5D,CAAN;AACF,GA5CU;AA8CXC,EAAAA,YAAY,EAAG,OAAOC,QAAP,EAAiBC,OAAjB,KAA6B;AACxC,UAAMzB,KAAK,CAACkB,MAAN,CAAa,yDAAyDM,QAAzD,GAAoE,WAApE,GAAkFC,OAA/F,CAAN;AACH;AAhDU,CAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios'\n\nexport default {\n\n    getMyProjects: async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getactiveprojects\");\n        return response.data;\n    },\n\n    getArchiveProjects: async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getarchiveprojects\");\n        return response.data;\n    },\n\n    getParticipatedProjects: async () => {\n        let response = await axios.get(\"http://localhost:8080/project/getparticipateprojects\");\n        return response.data;\n    },\n\n    addNewProject: async (projectNameObject) => {\n        await axios.post(\"http://localhost:8080/project/create\", projectNameObject);\n    },\n\n    getProject: async (id) => {\n        let response = await axios.get(\"http://localhost:8080/project/\" + id);\n        return response.data;\n    },\n\n    addNewColumn : async (newStatus) => {\n        await axios.post(\"http://localhost:8080/project/newstatus\", newStatus);\n    },\n\n    addNewTask : async (task) => {\n        await axios.post(\"http://localhost:8080/project/newtask\", task);\n    },\n\n     deleteProject : async (projectId) => {\n        await axios.delete(\"http://localhost:8080/project/delete/\" + projectId);\n    },\n\n    archiveProject : async (projectId) =>{\n        await axios.put(\"http://localhost:8080/project/archive/\"+projectId);\n    },\n\n    sendMail : async (projectId,emailCred) =>{\n       await axios.post(\"http://localhost:8080/project/email/\"+projectId,emailCred);\n    },\n\n    deleteStatus : async (statusID, tableId) => {\n        await axios.delete(\"http://localhost:8080/project/deletestatus?statusid=\" + statusID + \"&tableid=\" + tableId);\n    },\n\n\n}"]},"metadata":{},"sourceType":"module"}