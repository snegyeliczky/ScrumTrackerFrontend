{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/TaskModal.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Modal, Button, DatePicker } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, ContentContainer, Input } from \"../Assets/StyledComps/styled\";\nimport TaskCalls from \"../Services/TaskCalls\";\nimport Select from \"antd/es/select\";\n\nconst TaskModal = ({\n  task,\n  setTask,\n  refreshStatusesFromBackend,\n  usersOnProject\n}) => {\n  const {\n    Option\n  } = Select;\n  const priorityList = Array.from({\n    length: 10\n  }, (k, v) => v + 1);\n  const [visible, setVisible] = useState(false);\n  const [priorityRef, setPriorityRef] = useState(task.priority);\n  const [ownerRef, setOwnerRef] = useState(task.owner);\n  const descriptionRef = useRef(task.description);\n  const titleRef = useRef(task.title);\n  const positionRef = useRef(task.position);\n  const [deadlineRef, setDeadlineRef] = useState(task.deadline);\n\n  const handleEdit = () => {\n    uploadChanges();\n  };\n\n  async function uploadChanges() {\n    let editedTask = {\n      id: null,\n      author: null,\n      priority: task.priority === priorityRef ? null : priorityRef,\n      description: task.description === descriptionRef.current.value && task.description === null ? null : descriptionRef.current.value,\n      title: task.title === titleRef.current.value ? null : titleRef.current.value,\n      position: task.position === positionRef.current.value ? null : positionRef.current.value,\n      owner: task.owner === ownerRef ? null : ownerRef,\n      deadline: task.deadline === deadlineRef ? null : deadlineRef\n    };\n    let axiosResponse = await TaskCalls.uploadChanges(task.id, editedTask);\n    setTask(axiosResponse);\n    refreshStatusesFromBackend();\n  }\n\n  function changeDeadline(date) {\n    console.log(typeof date);\n    setDeadlineRef(date);\n  }\n\n  function handleOk() {\n    setVisible(false);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  console.log(typeof deadlineRef);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormOutlined, {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Edit Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"text_input title\",\n    placeholder: \"Story Title\",\n    defaultValue: task.title,\n    ref: titleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text_modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"textArea\", {\n    className: \"text_input userStory\",\n    placeholder: \"user story\",\n    ref: descriptionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, task.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"Priority: \"), /*#__PURE__*/React.createElement(Select, {\n    className: \"priority\",\n    defaultValue: task.priority,\n    onChange: value => {\n      setPriorityRef(value);\n    },\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, priorityList.map(num => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: num,\n      value: num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 48\n      }\n    }, num);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, \"Owner: \"), /*#__PURE__*/React.createElement(Select, {\n    className: \"owner\",\n    defaultValue: task.owner ? task.owner.username : \"No Owner Yet\",\n    onChange: value => {\n      usersOnProject.map(user => {\n        if (user.username === value) {\n          setOwnerRef(user);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, usersOnProject.map(user => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: user.id,\n      value: user.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 44\n      }\n    }, user.username);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(AdderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, \"Deadline: \"), /*#__PURE__*/React.createElement(DatePicker, {\n    className: \"deadline_picker\",\n    format: 'MM.DD',\n    onChange: changeDeadline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_btn\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, \"Save\"))))));\n};\n\nexport default TaskModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/TaskModal.js"],"names":["React","useEffect","useRef","useState","Modal","Button","DatePicker","FormOutlined","AdderComponent","ContentContainer","Input","TaskCalls","Select","TaskModal","task","setTask","refreshStatusesFromBackend","usersOnProject","Option","priorityList","Array","from","length","k","v","visible","setVisible","priorityRef","setPriorityRef","priority","ownerRef","setOwnerRef","owner","descriptionRef","description","titleRef","title","positionRef","position","deadlineRef","setDeadlineRef","deadline","handleEdit","uploadChanges","editedTask","id","author","current","value","axiosResponse","changeDeadline","date","console","log","handleOk","handleCancel","showModal","map","num","username","user"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {Modal, Button, DatePicker} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../Assets/StyledComps/styled\";\nimport TaskCalls from \"../Services/TaskCalls\";\nimport Select from \"antd/es/select\";\n\n\n\nconst TaskModal = ({task, setTask, refreshStatusesFromBackend, usersOnProject}) => {\n\n    const {Option} = Select;\n    const priorityList = Array.from({length: 10}, (k, v) => v + 1);\n\n    const [visible, setVisible] = useState(false);\n    const [priorityRef, setPriorityRef] = useState(task.priority);\n    const [ownerRef, setOwnerRef] = useState(task.owner);\n    const descriptionRef = useRef(task.description);\n    const titleRef = useRef(task.title);\n    const positionRef = useRef(task.position);\n    const [deadlineRef,setDeadlineRef] = useState(task.deadline);\n\n\n    const handleEdit = () => {\n        uploadChanges();\n    };\n\n    async function uploadChanges() {\n        let editedTask = {\n            id: null,\n            author: null,\n            priority: task.priority === priorityRef ? null : priorityRef,\n            description: task.description === descriptionRef.current.value && task.description === null ? null : descriptionRef.current.value,\n            title: task.title === titleRef.current.value ? null : titleRef.current.value,\n            position: task.position === positionRef.current.value ? null : positionRef.current.value,\n            owner: task.owner === ownerRef ? null : ownerRef,\n            deadline: task.deadline === deadlineRef ? null : deadlineRef\n        };\n        let axiosResponse = await TaskCalls.uploadChanges(task.id, editedTask);\n        setTask(axiosResponse);\n        refreshStatusesFromBackend();\n    }\n\n    function changeDeadline(date) {\n        console.log(typeof date);\n        setDeadlineRef(date);\n    }\n\n    function handleOk() {\n        setVisible(false);\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true)\n    }\n\n    console.log(typeof deadlineRef);\n\n    return (\n        <div>\n            <FormOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n                footer={null}\n            >\n                <h2>Edit Task</h2>\n                <div className={\"task_modal\"}>\n                    <div className={\"text_modal\"}>\n                        <label>Title: </label>\n                        <input\n                            className={\"text_input title\"}\n                            placeholder={\"Story Title\"}\n                            defaultValue={task.title}\n                            ref={titleRef}/>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <div className={\"text_modal\"}>\n                        <label>Description: </label>\n                        <textArea\n                            className={\"text_input userStory\"}\n                            placeholder={\"user story\"}\n                            ref={descriptionRef}>\n                            {task.description}\n                        </textArea>\n                        <div className=\"modal_btn\"\n                             onClick={handleEdit}>Save\n                        </div>\n                    </div>\n                    <ContentContainer>\n                        <AdderComponent>\n                            <label>Priority: </label>\n                            <Select\n                                className={\"priority\"}\n                                defaultValue={task.priority}\n                                onChange={(value) => {\n                                    setPriorityRef(value);\n                                }\n                                }\n                                type=\"number\"\n                            >\n                                {\n                                    priorityList.map((num) => {\n                                        return <Option key={num} value={num}>{num}</Option>\n                                    })\n                                }\n                            </Select>\n                            <div className=\"modal_btn\"\n                                 onClick={handleEdit}>Save\n                            </div>\n                        </AdderComponent>\n                        <AdderComponent>\n                            <label>Owner: </label>\n                            <Select\n                                className={\"owner\"}\n                                defaultValue={task.owner ? task.owner.username : \"No Owner Yet\"}\n                                onChange={(value) => {\n                                    usersOnProject.map((user) => {\n                                        if (user.username === value) {\n                                            setOwnerRef(user);\n                                        }\n                                    });\n                                }}>\n                                {usersOnProject.map((user) => {\n                                    return <Option key={user.id} value={user.username}>{user.username}</Option>\n                                })}\n\n                            </Select>\n                            <div className=\"modal_btn\"\n                                 onClick={handleEdit}>Save\n                            </div>\n                        </AdderComponent>\n                        <AdderComponent>\n                            <label>Deadline: </label>\n                            <DatePicker className={\"deadline_picker\"}  format={'MM.DD'} onChange={changeDeadline}/>\n                            <div className=\"modal_btn\"\n                                 onClick={handleEdit}>Save\n                            </div>\n                        </AdderComponent>\n                    </ContentContainer>\n                </div>\n\n            </Modal>\n\n\n        </div>\n    );\n};\n\nexport default TaskModal;"]},"metadata":{},"sourceType":"module"}