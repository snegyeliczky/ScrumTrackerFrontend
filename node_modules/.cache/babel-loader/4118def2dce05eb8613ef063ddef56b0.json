{"ast":null,"code":"var _jsxFileName = \"/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/UsersModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { FormOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport { AdderComponent, ContentContainer, Input } from \"../styledComps/styled\";\nimport Autocomplete from 'react-autocomplete';\nimport axios from \"axios\";\n\nconst UsersModal = ({\n  projectId\n}) => {\n  const [value, setValue] = useState();\n  const [visible, setVisible] = useState(false);\n  const [users, setUsers] = useState([{\n    username: \"type for search...\"\n  }]);\n  console.log(projectId);\n\n  async function handelSearchChange(e) {\n    let userName = e.target.value;\n    setValue(userName);\n\n    if (userName.length > 2) {\n      let userObj = {\n        username: userName\n      };\n      let axiosResponse = await axios.post(\"http://localhost:8080/user/search\", userObj);\n      console.log(axiosResponse.data);\n      setUsers(axiosResponse.data);\n    }\n  }\n\n  function handleOk() {\n    console.log(\"ok\");\n    setVisible(false);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  async function handleAddUser() {\n    let user = {\n      username: value\n    };\n    await axios.post(\"http://localhost:8080/project/adduser/\" + projectId, user);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CheckOutlined, {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    getItemValue: item => item.username,\n    items: users //shouldItemRender={(item, value) => item.username.toLowerCase().indexOf(value.toLowerCase()) > -1}\n    ,\n    renderItem: (item, highlighted) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      style: {\n        backgroundColor: highlighted ? 'yellow' : 'transparent'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, item.username),\n    value: value,\n    onChange: e => handelSearchChange(e),\n    onSelect: value => setValue(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CheckOutlined, {\n    onClick: handleAddUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default UsersModal;","map":{"version":3,"sources":["/Users/sandornegyeliczky/Desktop/projektek/ScrumTrackerFrontend/frontend/src/components/projectPage/UsersModal.js"],"names":["React","useState","Modal","Button","FormOutlined","CheckOutlined","AdderComponent","ContentContainer","Input","Autocomplete","axios","UsersModal","projectId","value","setValue","visible","setVisible","users","setUsers","username","console","log","handelSearchChange","e","userName","target","length","userObj","axiosResponse","post","data","handleOk","handleCancel","showModal","handleAddUser","user","item","highlighted","id","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Modal, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport {FormOutlined,CheckOutlined} from \"@ant-design/icons\";\nimport {AdderComponent, ContentContainer, Input} from \"../styledComps/styled\";\nimport Autocomplete from 'react-autocomplete';\nimport axios from \"axios\";\n\n\nconst UsersModal = ({projectId}) => {\n\n    const [value,setValue] = useState();\n    const [visible, setVisible] = useState(false);\n    const [users, setUsers] = useState([{username:\"type for search...\"}]);\n\n    console.log(projectId);\n\n    async function handelSearchChange(e) {\n        let userName=e.target.value;\n        setValue(userName);\n        if (userName.length>2){\n            let userObj = {username:userName};\n            let axiosResponse = await axios.post(\"http://localhost:8080/user/search\", userObj);\n            console.log(axiosResponse.data);\n            setUsers(axiosResponse.data);\n        }\n\n\n\n    }\n\n    function handleOk() {\n        console.log(\"ok\");\n        setVisible(false);\n    }\n\n    function handleCancel() {\n        setVisible(false);\n    }\n\n    function showModal() {\n        setVisible(true);\n    }\n\n\n\n    async function handleAddUser() {\n        let user = {username:value}\n        await axios.post(\"http://localhost:8080/project/adduser/\"+projectId,user)\n    }\n\n    return (\n        <div>\n\n            <CheckOutlined onClick={showModal}/>\n            <Modal\n                visible={visible}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                width={800}\n            >\n                <Autocomplete\n                    getItemValue={(item) => item.username}\n                    items={users}\n                    //shouldItemRender={(item, value) => item.username.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                    renderItem={(item, highlighted) =>\n                        <div\n                            key={item.id}\n                            style={{ backgroundColor: highlighted ? 'yellow' : 'transparent'}}\n                        >\n                            {item.username}\n                        </div>\n                    }\n                    value={value}\n                    onChange={e => handelSearchChange(e)}\n                    onSelect={value => setValue(value)}\n                />\n                <CheckOutlined onClick={handleAddUser} />\n                \n            </Modal>\n\n        </div>\n    );\n};\n\nexport default UsersModal;"]},"metadata":{},"sourceType":"module"}